{
  "version": 3,
  "sources": ["../src/console/Base.js", "../src/console/Inspector.js"],
  "sourcesContent": ["\r\n/**\r\n * @Console2\r\n */\r\nexport default Element => class Base extends Element {\r\n\r\n    constructor() {\r\n        super();\r\n        this.attachShadow( { mode: 'open' } );\r\n    }\r\n\r\n    connectedCallback() {\r\n        [].concat( this.css ).forEach( css => {\r\n            if ( css.includes( '{' ) && css.includes( ':' ) && css.includes( ';' ) ) {\r\n                let cssElement = this.shadowRoot.appendChild( document.createElement( 'style' ) );\r\n                cssElement.textContent = css;\r\n            } else {\r\n                let cssElement = this.shadowRoot.appendChild( document.createElement( 'link' ) );\r\n                cssElement.setAttribute( 'rel', 'stylesheet' );\r\n                cssElement.setAttribute( 'href', css );\r\n            }\r\n        } );\r\n    }\r\n\r\n    /**\r\n     * ----------\r\n     *  CSS\r\n     * ----------\r\n     */\r\n\r\n     get css() {\r\n        return []\r\n    }\r\n\r\n}", "\r\n/**\r\n * @imports\r\n */\r\nimport Base from './Base.js';\r\n\r\n/**\r\n * @Console2\r\n */\r\nexport default class Inspector extends Base( HTMLElement ) {\r\n\r\n    connectedCallback() {\r\n        this._contentSlot = document.createElement( 'slot' );\r\n        // ----------------\r\n        this.shadowRoot.append( this._contentSlot );\r\n        // ----------------\r\n        super.connectedCallback();\r\n        this._contentSlot.addEventListener( 'slotchange', () => {\r\n            setTimeout( () => { // Allow embedded subscript instances in slotted elements to manifest\r\n                let subscriptElement = this._contentSlot.assignedNodes().reduce( ( _subscriptElement, node ) => _subscriptElement || ( node.subscript instanceof Map ? node : null), null );\r\n                if ( subscriptElement ) {\r\n                    this.inspectElement( subscriptElement );\r\n                    let activeButton = this.getAttribute( 'active' );\r\n                    if ( activeButton ) {\r\n                        this.inspectFunction( activeButton );\r\n                    }\r\n                } else {\r\n                    console.error(`No subscript element found.`);\r\n                }\r\n            }, 0 );\r\n        } );\r\n    }\r\n\r\n    inspectElement( subscriptElement ) {\r\n        if ( this.consoleElement ) {\r\n            this.consoleElement.remove();\r\n            this.controlsElement.remove();\r\n        }\r\n        this.consoleElement = document.createElement( 'subscript-console' );\r\n        this.controlsElement = document.createElement( 'div' );\r\n        this.controlsElement.classList.add( 'controls-element' );\r\n        // ----------------\r\n        this.shadowRoot.append( this.consoleElement, this.controlsElement );\r\n        // ----------------\r\n        this.buttons = {};\r\n        subscriptElement.subscript.forEach( ( subscriptFunction, id ) => {\r\n            let title = typeof id === 'number' ? `script:${ id }` : `${ id }()`;\r\n            this.buttons[ id ] = this.controlsElement.appendChild( document.createElement( 'button' ) );\r\n            this.buttons[ id ].setAttribute( 'script-id', id );\r\n            this.buttons[ id ].setAttribute( 'title',  title );\r\n            let textElement = this.buttons[ id ].appendChild( document.createElement( 'span' ) );\r\n            textElement.append( ' ',  title );\r\n            let iconElement = this.buttons[ id ].appendChild( document.createElement( 'i' ) );\r\n            let iconClasses = this.getAttribute( `data-icons` ) || `bi bi-${ typeof id === 'number' ? 'code' : 'braces' }`;\r\n            iconClasses.split( ' ' ).map( str => str.trim() ).forEach( str => iconElement.classList.add( str ) );\r\n            this.buttons[ id ].addEventListener( 'click', e => {\r\n                if ( this.active ) {\r\n                    this.active.classList.remove( 'active' );\r\n                }\r\n                this.active = this.buttons[ id ];\r\n                this.active.classList.add( 'active' );\r\n                this.inspectFunction( subscriptFunction );\r\n            } );\r\n        } );\r\n    }\r\n\r\n    inspectFunction( subscriptFunction ) {\r\n        if ( !subscriptFunction || typeof subscriptFunction === 'string' ) {\r\n            let buttinName = subscriptFunction;\r\n            if ( !subscriptFunction ) {\r\n                buttinName = Object.keys( this.buttons )[ 0 ];\r\n            }\r\n            if ( buttinName ) {\r\n                let button = this.buttons[ buttinName ];\r\n                let event = new MouseEvent( 'click', { view: window, } );\r\n                button.dispatchEvent( event );\r\n            }\r\n            return;\r\n        };\r\n        this.consoleElement.bind( subscriptFunction );\r\n    }\r\n\r\n    /**\r\n     * ----------\r\n     *  CSS\r\n     * ----------\r\n     */\r\n\r\n     get css() {\r\n        return [\r\n            `https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css`,\r\n            `\r\n            * {\r\n                -webkit-box-sizing: border-box;\r\n                -moz-box-sizing: border-box;\r\n                box-sizing: border-box;\r\n            }\r\n            :host {\r\n                position: relative;\r\n                display: block;\r\n                background-color: rgb(75, 75, 75);\r\n            }\r\n            .controls-element {\r\n                position: relative;\r\n                z-index: 10;\r\n            }\r\n            .controls-element button {\r\n                display: inline-flex;\r\n                align-items: center;\r\n                background-color: transparent;\r\n                padding: 0.5rem 1rem;\r\n                border: none;\r\n                color: silver;\r\n            }\r\n            .controls-element button:is(:hover, .active) {\r\n                background-color: dimgray;\r\n                color: gainsboro;\r\n            }\r\n            .controls-element button .bi {\r\n                margin-left: 0.5rem;\r\n            }\r\n            `,\r\n        ]\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @define\r\n */\r\ncustomElements.define( 'subscript-inspector', Inspector );\r\n"],
  "mappings": "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",
  "names": ["Base_default", "Element", "css", "cssElement", "Inspector", "Base_default", "subscriptElement", "_subscriptElement", "node", "activeButton", "subscriptFunction", "id", "title", "iconElement", "str", "e", "buttinName", "button", "event"]
}
