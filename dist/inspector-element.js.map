{
  "version": 3,
  "sources": ["../src/inspector/src/Base.js", "../src/inspector/Inspector.js"],
  "sourcesContent": ["\n/**\n * @Console2\n */\nexport default Element => class Base extends Element {\n\n    constructor() {\n        super();\n        this.attachShadow( { mode: 'open' } );\n    }\n\n    connectedCallback() {\n        [].concat( this.css ).forEach( css => {\n            if ( css.includes( '{' ) && css.includes( ':' ) && css.includes( ';' ) ) {\n                let cssElement = this.shadowRoot.appendChild( document.createElement( 'style' ) );\n                cssElement.textContent = css;\n            } else {\n                let cssElement = this.shadowRoot.appendChild( document.createElement( 'link' ) );\n                cssElement.setAttribute( 'rel', 'stylesheet' );\n                cssElement.setAttribute( 'href', css );\n            }\n        } );\n    }\n\n    /**\n     * ----------\n     *  CSS\n     * ----------\n     */\n\n     get css() {\n        return []\n    }\n\n}", "\n/**\n * @imports\n */\nimport Base from './src/Base.js';\n\n/**\n * @Inspector\n */\nexport default class Inspector extends Base( HTMLElement ) {\n\n    connectedCallback() {\n        this._contentSlot = document.createElement( 'slot' );\n        // ----------------\n        this.shadowRoot.append( this._contentSlot );\n        // ----------------\n        super.connectedCallback();\n        this._contentSlot.addEventListener( 'slotchange', () => {\n            setTimeout( () => { // Allow embedded subscript instances in slotted elements to manifest\n                const hostElement = this._contentSlot.assignedNodes().reduce( ( _hostElement, node ) => _hostElement || ( node.subscript instanceof Map ? node : null), null );\n                if ( hostElement ) {\n                    this.inspectElement( hostElement );\n                    const activeButton = this.getAttribute( 'active' );\n                    if ( activeButton ) { this.inspectFunction( activeButton ); }\n                } else {\n                    visualizer.error(`No subscript element found.`);\n                }\n            }, 0 );\n        } );\n    }\n\n    inspectElement( hostElement ) {\n        if ( this.visualizerElement ) {\n            this.visualizerElement.remove();\n            this.controlsElement.remove();\n        }\n        this.visualizerElement = document.createElement( 'cfunctions-visualizer' );\n        this.controlsElement = document.createElement( 'div' );\n        this.controlsElement.classList.add( 'controls-element' );\n        // ----------------\n        this.shadowRoot.append( this.visualizerElement, this.controlsElement );\n        // ----------------\n        this.buttons = {};\n        ( hostElement.scripts || [] ).forEach( ( script, id ) => {\n            if ( !script.contract ) return;\n            let title = typeof id === 'number' ? `script:${ id }` : `${ id }()`;\n            this.buttons[ id ] = this.controlsElement.appendChild( document.createElement( 'button' ) );\n            this.buttons[ id ].setAttribute( 'script-id', id );\n            this.buttons[ id ].setAttribute( 'title',  title );\n            let textElement = this.buttons[ id ].appendChild( document.createElement( 'span' ) );\n            textElement.append( ' ',  title );\n            let iconElement = this.buttons[ id ].appendChild( document.createElement( 'i' ) );\n            let iconClasses = this.getAttribute( `data-icons` ) || `bi bi-${ typeof id === 'number' ? 'code' : 'braces' }`;\n            iconClasses.split( ' ' ).map( str => str.trim() ).forEach( str => iconElement.classList.add( str ) );\n            this.buttons[ id ].addEventListener( 'click', e => {\n                if ( this.active ) { this.active.classList.remove( 'active' ); }\n                this.active = this.buttons[ id ];\n                this.active.classList.add( 'active' );\n                this.inspectFunction( script );\n            } );\n        } );\n    }\n\n    inspectFunction( script ) {\n        if ( !script || typeof script === 'string' ) {\n            let buttinName = script;\n            if ( !script ) { buttinName = Object.keys( this.buttons )[ 0 ]; }\n            if ( buttinName ) {\n                const button = this.buttons[ buttinName ];\n                const event = new MouseEvent( 'click', { view: window, } );\n                button.dispatchEvent( event );\n            }\n            return;\n        };\n        this.visualizerElement.visualize( script );\n    }\n\n    /**\n     * ----------\n     *  CSS\n     * ----------\n     */\n\n     get css() {\n        return [\n            `https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css`,\n            `\n            * {\n                -webkit-box-sizing: border-box;\n                -moz-box-sizing: border-box;\n                box-sizing: border-box;\n            }\n            :host {\n                position: relative;\n                display: block;\n                background-color: rgb(75, 75, 75);\n            }\n            .controls-element {\n                position: relative;\n                z-index: 10;\n            }\n            .controls-element button {\n                display: inline-flex;\n                align-items: center;\n                background-color: transparent;\n                padding: 0.5rem 1rem;\n                border: none;\n                color: silver;\n            }\n            .controls-element button:is(:hover, .active) {\n                background-color: dimgray;\n                color: gainsboro;\n            }\n            .controls-element button .bi {\n                margin-left: 0.5rem;\n            }\n            `,\n        ]\n    }\n\n}\n\n/**\n * @define\n */\ncustomElements.define( 'cfunctions-inspector', Inspector );\n"],
  "mappings": "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",
  "names": ["Base_default", "Element", "css", "cssElement", "Inspector", "Base_default", "hostElement", "_hostElement", "node", "activeButton", "script", "id", "title", "iconElement", "str", "e", "buttinName", "button", "event"]
}
