{
  "version": 3,
  "sources": ["../src/console/Base.js", "../src/console/Inspector.js"],
  "sourcesContent": ["\n/**\n * @Console2\n */\nexport default Element => class Base extends Element {\n\n    constructor() {\n        super();\n        this.attachShadow( { mode: 'open' } );\n    }\n\n    connectedCallback() {\n        [].concat( this.css ).forEach( css => {\n            if ( css.includes( '{' ) && css.includes( ':' ) && css.includes( ';' ) ) {\n                let cssElement = this.shadowRoot.appendChild( document.createElement( 'style' ) );\n                cssElement.textContent = css;\n            } else {\n                let cssElement = this.shadowRoot.appendChild( document.createElement( 'link' ) );\n                cssElement.setAttribute( 'rel', 'stylesheet' );\n                cssElement.setAttribute( 'href', css );\n            }\n        } );\n    }\n\n    /**\n     * ----------\n     *  CSS\n     * ----------\n     */\n\n     get css() {\n        return []\n    }\n\n}", "\n/**\n * @imports\n */\nimport Base from './Base.js';\n\n/**\n * @Console2\n */\nexport default class Inspector extends Base( HTMLElement ) {\n\n    connectedCallback() {\n        this._contentSlot = document.createElement( 'slot' );\n        // ----------------\n        this.shadowRoot.append( this._contentSlot );\n        // ----------------\n        super.connectedCallback();\n        this._contentSlot.addEventListener( 'slotchange', () => {\n            setTimeout( () => { // Allow embedded subscript instances in slotted elements to manifest\n                let subscriptElement = this._contentSlot.assignedNodes().reduce( ( _subscriptElement, node ) => _subscriptElement || ( node.subscript instanceof Map ? node : null), null );\n                if ( subscriptElement ) {\n                    this.inspectElement( subscriptElement );\n                    let activeButton = this.getAttribute( 'active' );\n                    if ( activeButton ) {\n                        this.inspectFunction( activeButton );\n                    }\n                } else {\n                    console.error(`No subscript element found.`);\n                }\n            }, 0 );\n        } );\n    }\n\n    inspectElement( subscriptElement ) {\n        if ( this.consoleElement ) {\n            this.consoleElement.remove();\n            this.controlsElement.remove();\n        }\n        this.consoleElement = document.createElement( 'subscript-console' );\n        this.controlsElement = document.createElement( 'div' );\n        this.controlsElement.classList.add( 'controls-element' );\n        // ----------------\n        this.shadowRoot.append( this.consoleElement, this.controlsElement );\n        // ----------------\n        this.buttons = {};\n        subscriptElement.subscript.forEach( ( subscriptFunction, id ) => {\n            let title = typeof id === 'number' ? `script:${ id }` : `${ id }()`;\n            this.buttons[ id ] = this.controlsElement.appendChild( document.createElement( 'button' ) );\n            this.buttons[ id ].setAttribute( 'script-id', id );\n            this.buttons[ id ].setAttribute( 'title',  title );\n            let textElement = this.buttons[ id ].appendChild( document.createElement( 'span' ) );\n            textElement.append( ' ',  title );\n            let iconElement = this.buttons[ id ].appendChild( document.createElement( 'i' ) );\n            let iconClasses = this.getAttribute( `data-icons` ) || `bi bi-${ typeof id === 'number' ? 'code' : 'braces' }`;\n            iconClasses.split( ' ' ).map( str => str.trim() ).forEach( str => iconElement.classList.add( str ) );\n            this.buttons[ id ].addEventListener( 'click', e => {\n                if ( this.active ) {\n                    this.active.classList.remove( 'active' );\n                }\n                this.active = this.buttons[ id ];\n                this.active.classList.add( 'active' );\n                this.inspectFunction( subscriptFunction );\n            } );\n        } );\n    }\n\n    inspectFunction( subscriptFunction ) {\n        if ( !subscriptFunction || typeof subscriptFunction === 'string' ) {\n            let buttinName = subscriptFunction;\n            if ( !subscriptFunction ) {\n                buttinName = Object.keys( this.buttons )[ 0 ];\n            }\n            if ( buttinName ) {\n                let button = this.buttons[ buttinName ];\n                let event = new MouseEvent( 'click', { view: window, } );\n                button.dispatchEvent( event );\n            }\n            return;\n        };\n        this.consoleElement.bind( subscriptFunction );\n    }\n\n    /**\n     * ----------\n     *  CSS\n     * ----------\n     */\n\n     get css() {\n        return [\n            `https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css`,\n            `\n            * {\n                -webkit-box-sizing: border-box;\n                -moz-box-sizing: border-box;\n                box-sizing: border-box;\n            }\n            :host {\n                position: relative;\n                display: block;\n                background-color: rgb(75, 75, 75);\n            }\n            .controls-element {\n                position: relative;\n                z-index: 10;\n            }\n            .controls-element button {\n                display: inline-flex;\n                align-items: center;\n                background-color: transparent;\n                padding: 0.5rem 1rem;\n                border: none;\n                color: silver;\n            }\n            .controls-element button:is(:hover, .active) {\n                background-color: dimgray;\n                color: gainsboro;\n            }\n            .controls-element button .bi {\n                margin-left: 0.5rem;\n            }\n            `,\n        ]\n    }\n\n}\n\n/**\n * @define\n */\ncustomElements.define( 'subscript-inspector', Inspector );\n"],
  "mappings": "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",
  "names": []
}
