{
  "version": 3,
  "sources": ["../src/index.async.js", "../src/util.js", "../src/params.js", "../../observer/src/main.js", "../../observer/node_modules/@webqit/util/js/isObject.js", "../../observer/node_modules/@webqit/util/js/getType.js", "../../observer/node_modules/@webqit/util/js/isArray.js", "../../observer/node_modules/@webqit/util/arr/intersect.js", "../../observer/node_modules/@webqit/util/js/internals.js", "../../observer/node_modules/@webqit/util/js/isTypeFunction.js", "../../observer/node_modules/@webqit/util/js/isNull.js", "../../observer/node_modules/@webqit/util/js/isUndefined.js", "../../observer/node_modules/@webqit/util/js/isTypeObject.js", "../../observer/node_modules/@webqit/util/js/isEmpty.js", "../../observer/node_modules/@webqit/util/js/isFunction.js", "../../observer/node_modules/@webqit/util/js/isString.js", "../../observer/node_modules/@webqit/util/js/isTypeArray.js", "../../observer/node_modules/@webqit/util/arr/from.js", "../../observer/src/util.js", "../../observer/src/core/Registration.js", "../../observer/src/core/ListenerRegistration.js", "../../observer/src/core/Registry.js", "../../observer/src/core/Descriptor.js", "../../observer/src/core/ListenerRegistry.js", "../../observer/src/core/TrapsRegistration.js", "../../observer/src/core/TrapsRegistry.js", "../../observer/src/actors.js", "../../observer/src/index.js", "../src/runtime/EventTarget.js", "../src/runtime/Autorun.js", "../src/runtime/Signal.js", "../src/runtime/Scope.js", "../src/runtime/AutoIteration.js", "../src/modules.js", "../src/runtime/State.js", "../src/runtime/Runtime.js", "../src/runtime/index.js", "../src/AbstractStatefulScript.js", "../src/api.global.async.js"],
  "sourcesContent": ["\n/**\n * @imports\n */\nimport { _$functionArgs } from './util.js';\nimport { $eval } from './runtime/index.js';\nimport AbstractStatefulScript from './AbstractStatefulScript.js';\nimport State from './runtime/State.js';\n\n/** -------------- APIs */\n\nexport { State }\n\nexport function StatefulAsyncFunction( ...args ) {\n    const { source, params } = _$functionArgs( args );\n    const compiledFunction = $eval( 'async-function', parseCompileCallback, source, params );\n    if ( !( compiledFunction instanceof Promise ) ) return compiledFunction;\n    // Introduce a wrapper function that awaits main function\n    const wrapperFunction = async function( ...args ) { return ( await compiledFunction ).apply( this, ...args ); }\n    Object.defineProperty( wrapperFunction, 'toString', { value: async function( ...args ) { return ( await compiledFunction ).toString( ...args ) } } )\n    return wrapperFunction;\n}\n\nexport class StatefulAsyncScript extends AbstractStatefulScript {\n    static sourceType = 'async-script';\n    static parseCompileCallback = parseCompileCallback;\n}\n\nexport class StatefulModule extends AbstractStatefulScript {\n    static sourceType = 'module';\n    static parseCompileCallback = parseCompileCallback;\n}\n\n/** -------------- parse-compile */\n\nfunction parseCompileCallback( ...args ) {\n    const params = typeof args[ args.length - 1 ] === 'object' ? args.pop() : {};\n    const source = args.pop() || '';\n    // $fCompiler has been loaded sync?\n    if ( globalThis.webqit?.$fCompiler ) {\n        const { parse, compile } = globalThis.webqit.$fCompiler;\n        const ast = parse( source, params.parserParams );\n        return compile( ast, params.compilerParams );\n    }\n    // Load and run $fCompiler async - in the background?\n    globalThis.webqit = globalThis.webqit || {};\n    if ( !globalThis.webqit.$fCompilerWorker ) {\n        const customUrl = document.querySelector( 'meta[name=\"$f-compiler-url\"]' );\n        const compilerUrls = ( customUrl?.content.split( ',' ) || [] ).concat( 'https://unpkg.com/@webqit/stateful-functions/dist/compiler.js' );\n        const workerScriptText = `\n        const compilerUrls = [ '${ compilerUrls.join( `','` ) }' ];\n        ( function importScript() {\n            try { importScripts( compilerUrls.shift().trim() ) } catch( e ) { if ( compilerUrls.length ) { importScript(); } }\n        } )();\n        const { parse, compile } = globalThis.webqit.$fCompiler;\n        globalThis.onmessage = e => {\n            const { source, params } = e.data;\n            const ast = parse( source, params.parserParams );\n            const compilation = compile( ast, params.compilerParams );\n            e.ports[ 0 ]?.postMessage( compilation );\n        };`;\n        globalThis.webqit.$fCompilerWorker = new Worker( `data:text/javascript;base64,${ btoa( workerScriptText ) }` );\n    }\n    return new Promise( res => {\n        let messageChannel = new MessageChannel;\n        webqit.$fCompilerWorker.postMessage( { source, params }, [ messageChannel.port2 ] );\n        messageChannel.port1.onmessage = e => res( e.data );\n    } );\n}", "\nexport const _call = ( _function, ...args ) => {\n    const callback = args.pop();\n    if ( _function.constructor.name === 'AsyncFunction' ) return _await( _function.call( ...args ), callback );\n    return callback( _function.call( ...args ) );\n};\n\nexport const _await = ( maybePromise, callback ) => {\n    return maybePromise instanceof Promise ? maybePromise.then( callback ) : callback( maybePromise )\n};\n\nexport const _isTypeObject = val => {\n\treturn ( typeof val === 'object' && val ) || typeof val === 'function';\n};\n\nexport function _$functionArgs( args ) {\n    const params = typeof args[ args.length - 1 ] === 'object' ? args.pop() : {};\n    const source = args.pop() || '';\n    params.functionParams = args;\n    return { source, params };\n}\n\nexport const other = {};\n", "\n/**\n * @exports\n */\nexport function resolveParams( ...extensions ) {\n    let extension, params = { runtimeParams, compilerParams, parserParams };\n    while( extension = extensions.shift() ) {\n        const {\n            runtimeParams: _runtimeParams = {},\n            compilerParams: { globalsNoObserve: _globalsNoObserve = [], globalsOnlyPathsExcept: _globalsOnlyPathsExcept = [], ..._compilerParams } = {},\n            parserParams: _parserParams = {},\n        } = extension;\n        params = {\n            runtimeParams: { ...params.runtimeParams, ..._runtimeParams },\n            compilerParams: { ...params.compilerParams, globalsNoObserve: [ ...params.compilerParams.globalsNoObserve, ..._globalsNoObserve ], globalsOnlyPathsExcept: [ ...params.compilerParams.globalsOnlyPathsExcept, ..._globalsOnlyPathsExcept ], ..._compilerParams },\n            parserParams: { ...params.parserParams, ..._parserParams },\n        };\n        if ( extensions.devMode ) { /* shortcut for devMode configs */ }\n    }\n    return params;\n}\nexport const parserParams = {\n    ecmaVersion: 'latest',\n    allowReturnOutsideFunction: true,\n    allowAwaitOutsideFunction: false,\n    allowSuperOutsideMethod: false,\n    preserveParens: false,\n    locations: true,\n};\nexport const compilerParams = {\n    globalsNoObserve: [ 'arguments', 'debugger', ],\n    globalsOnlyPathsExcept: [],\n    originalSource: true,\n    locations: true,\n    compact: 2,\n};\nexport const runtimeParams = {\n    apiVersion: 3,\n};\n", "\n/**\n * @imports\n */\nimport { _isObject, _isTypeObject, _isFunction, _getType } from '@webqit/util/js/index.js';\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport { _, _await, other as otherUtil } from './util.js';\nimport ListenerRegistry from './core/ListenerRegistry.js';\nimport TrapsRegistry from './core/TrapsRegistry.js';\nimport Descriptor from './core/Descriptor.js';\nimport { unproxy } from './actors.js';\n\n/* ---------------SPECIAL APIs--------------- */\n\n/**\n * Creates a Path array instance from arguments.\n * \n * @param Array\t            ...segments\n *\n * @return Path\n */\nclass Path extends Array {}\nexport function path( ...segments ) {\n    return new Path( ...segments );\n}\n\n/**\n * Reduces a path array against handler.\n * \n * @param Array|Object\t    target\n * @param Array\t            path\n * @param Function\t        receiver\n * @param Function\t        final\n * @param Object\t        params\n * \n * @example reduce( object, [ segement1, segement2 ], observe, ( value, flags ) => {}, params );\n *\n * @return Any\n */\nexport function reduce( target, path, receiver, final = x => x, params = {} ) {\n    if ( !path.length ) return;\n    return ( function eat( target, path, $params ) {\n        const segment = path[ $params.level ];\n        const isLastSegment = $params.level === path.length - 1;\n        if ( target instanceof Descriptor && target.type !== 'get' ) {\n            // Always probe event-generated trees\n            $params = { ...$params, probe: 'always' };\n        } else if ( $params.probe !== 'always' ) {\n            // Probe until (before) last segment\n            $params = { ...$params, probe: !isLastSegment };\n        }\n        // ---------------\n        return receiver( target, segment, ( result, ...args ) => {\n            // -----------\n            const addTrail = desc => {\n                if ( !( desc instanceof Descriptor ) ) return;\n                desc.path = [ desc.key ];\n                if ( target instanceof Descriptor ) {\n                    desc.path = target.path.concat( desc.key );\n                    Object.defineProperty( desc, 'context', { get: () => target, configurable: true } );\n                }\n            };\n            const advance = result => {\n                const $value = resolveObj( result/* a Descriptor who's value could be proxied */, false );\n                return _await( $value/* could be a promise */, $value => {\n                    if ( result instanceof Descriptor ) {\n                        result.value = $value; // Update to (fulfilled), unproxied, value\n                    } else {\n                        result = $value;\n                    }\n                    const flags = args[ 0 ] || {};\n                    return eat( result, path, { ...$params, ...flags, level: $params.level + 1, } );\n                } );\n            };\n            // -----------\n            if ( isPropsList( segment ) && Array.isArray( result ) ) {\n                result.forEach( addTrail );\n                if ( isLastSegment ) return final( result, ...args );\n                return result.map( advance );\n            }\n            // -----------\n            addTrail( result );\n            if ( isLastSegment ) return final( result, ...args );\n            return advance( result );\n            // -----------\n        }, $params );\n    } )( target, path.slice( 0 ), { ...params, level: 0 } );\n}\n\n/**\n * Adds an observer to a target's registry.\n *\n * @param Array|Object\t    target\n * @param String|Object\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return AbortController\n */\nexport function observe( target, prop, receiver, params = {} ) {\n    // ---------------\n    target = resolveObj( target, !params.level );\n\tif ( _isFunction( arguments[ 1 ] ) ) {\n        [ , receiver, params = {} ] = arguments;\n        prop = Infinity;\n\t}\n\tif ( !_isFunction( receiver ) ) throw new Error( `Handler must be a function; \"${ _getType( receiver ) }\" given!` );\n    if ( prop instanceof Path ) return reduce( target, prop, observe, receiver, params );\n    // ---------------\n    params = { ...params, descripted: true };\n    delete params.live;\n    if ( !_isTypeObject( target ) ) return params.probe && get( target, prop, receiver, params );\n    // ---------------\n    const emit = bind( target, prop, receiver, params );\n    if ( params.probe ) {\n        return get( target, prop, emit, params );\n    }\n    return emit();\n}\n\n/**\n * Adds an interceptor object to a target's registry.\n *\n * @param Array|Object\t    target\n * @param Object\t        traps\n * @param Object\t\t    params\n *\n * @return AbortRegistry\n */\nexport function intercept( target, traps, params = {} ) {\n    // ---------------\n    target = resolveObj( target );\n    if ( !_isObject( traps ) ) {\n        [ /*target*/, /*type*/, /*handler*/, params = {} ] = arguments;\n        traps = { [ arguments[ 1 ] ]: arguments[ 2 ] };\n    }\n    // ---------------\n    return TrapsRegistry.getInstance( target, true, params.namespace ).addRegistration( { traps, params } );\n}\n\n/* ---------------QUERY APIs--------------- */\n\n/**\n * Performs a \"getOwnPropertyDescriptor\" operation.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getOwnPropertyDescriptor( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'getOwnPropertyDescriptor', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a \"getOwnPropertyDescriptors\" operation.\n * @note this isn't part of the standard Reflect API.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getOwnPropertyDescriptors( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'getOwnPropertyDescriptors', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a \"getPrototypeOf\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getPrototypeOf( target, receiver = x => x, params = {} ) {\n    return exec( target, 'getPrototypeOf', {}, receiver, params );\n}\n\n/**\n * Performs a \"isExtensible\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function isExtensible( target, receiver = x => x, params = {} ) {\n    return exec( target, 'isExtensible', {}, receiver, params );\n}\n\n/**\n * Performs a \"ownKeys\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function ownKeys( target, receiver = x => x, params = {} ) {\n    return exec( target, 'ownKeys', {}, receiver, params );\n}\n\n/**\n * Performs an operation of the given \"type\".\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function has( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'has', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a get operation.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function get( target, prop, receiver = x => x, params = {} ) {\n    // ---------------\n    let isLive;\n    const originalTarget = resolveObj( target, !params.level );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }\n    else if ( params.live ) { isLive = true; }\n    if ( prop instanceof Path ) return reduce( originalTarget, prop, get, receiver, params );\n    // ---------------\n    return resolveProps( originalTarget, prop, props => {\n        const related = [ ...props ];\n        return ( function next( results, _props, _done ) {\n            if ( !_props.length ) return _done( results );\n            const prop = _props.shift();\n            if ( ![ 'string', 'number', 'symbol' ].includes( typeof prop ) ) {\n                throw new Error( `Property name/key ${ prop } invalid.` );\n            }\n            // ---------\n            function defaultGet( descriptor, value = undefined ) {\n                const _next = value => ( descriptor.value = value, next( [ ...results, params.live || params.descripted ? descriptor : value ]/** not using concat() as value may be an array */, _props, _done ) );\n                if ( arguments.length > 1 ) return _next( value );\n                const accessorizedProps = _( originalTarget, 'accessorizedProps', false );\n                const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key + '' );\n                if ( accessorization && accessorization.intact() ) {\n                    return _next( accessorization.getValue( params.propertyDescriptor ) );\n                }\n                if ( params.propertyDescriptor ) {\n                    const desc = Object.getOwnPropertyDescriptor( originalTarget, descriptor.key );\n                    if ( 'forceValue' in params &&  'value' in desc ) { desc.value = params.forceValue; }\n                    return _next( desc );\n                }\n                if ( 'forceValue' in params ) { return _next( params.forceValue ); }\n                return _next( Reflect.get( originalTarget, descriptor.key, ...( params.receiver ? [ params.receiver ] : [] ) ) );\n            }\n            // ---------\n            const descriptor = new Descriptor( originalTarget, {\n                type: 'get',\n                key: prop,\n                value: undefined,\n                related,\n            } );\n            if ( !_isTypeObject( originalTarget ) ) return next( [ ...results, params.live || params.descripted ? descriptor : undefined ], _props, _done );\n            const listenerRegistry = TrapsRegistry.getInstance( originalTarget, false, params.namespace );\n            if ( listenerRegistry ) {\n                return listenerRegistry.emit( descriptor, defaultGet );\n            }\n            return defaultGet( descriptor );\n        } )( [], props.slice( 0 ), results => {\n            const result_s = isPropsList( prop/*original*/ ) ? results : results[ 0 ];\n            if ( isLive && _isTypeObject( originalTarget ) ) {\n                const emit = bind( originalTarget, prop, receiver, params );\n                return emit( result_s );\n            }\n            return receiver( result_s );\n        } );\n    }, params );\n}\n\n/* ---------------MUTATION APIs--------------- */\n\n/**\n * Performs a batch operation.\n * \n * @param Object\t        target\n * @param Function\t        callback\n * @param Object\t        params\n *\n * @return Void\n */\nexport function batch( target, callback, params = {} ) {\n    target = resolveObj( target );\n    return ListenerRegistry.getInstance( target, true, params.namespace ).batch( callback );\n}\n\n/**\n * Performs a set operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Any\t            value\n * @param Function\t        receiver\n * @param Object\t        params\n * @param Bool\t            def\n *\n * @return Any\n */\nexport function set( target, prop, value, receiver = x => x, params = {}, def = false ) {\n    // ---------------\n    const originalTarget = resolveObj( target );\n    let entries = [ [ prop, value ] ];\n    if ( _isObject( prop ) ) {\n        [ /*target*/, /*hash*/, receiver = x => x, params = {}, def = false ] = arguments;\n        entries = Object.entries( prop );\n    }\n    if ( _isObject( receiver ) ) { [ def, params, receiver ] = [ typeof params === 'boolean' ? params : false, receiver, x => x ]; }\n    // ---------------\n    const related = entries.map( ( [ prop ] ) => prop );\n    return ( function next( descriptors, entries, _done ) {\n        if ( !entries.length ) return _done( descriptors );\n        const [ prop, value ] = entries.shift();\n        // ---------\n        function defaultSet( descriptor, status = undefined ) {\n            const _next = status => ( descriptor.status = status, next( descriptors.concat( descriptor ), entries, _done ) );\n            if ( arguments.length > 1 ) return _next( descriptor, status );\n            const accessorizedProps = _( originalTarget, 'accessorizedProps', false );\n            const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key + '' );\n            if ( descriptor.type === 'defineProperty' ) {\n                if ( accessorization && !accessorization.restore() ) _next( false );\n                Object.defineProperty( originalTarget, descriptor.key, descriptor.value );\n                return _next( true );\n            }\n            if ( accessorization && accessorization.intact() ) {\n                return _next( accessorization.setValue( descriptor.value ) );\n            }\n            return _next( Reflect.set( originalTarget, descriptor.key, descriptor.value ) );\n        }\n        // ---------\n        function exec( isUpdate, oldValue ) {\n            if ( params.diff && value === oldValue ) return next( descriptors, entries, _done );\n            const descriptor = new Descriptor( originalTarget, {\n                type: def ? 'defineProperty' : 'set',\n                key: prop,\n                value,\n                isUpdate,\n                oldValue,\n                related: [ ...related ],\n                detail: params.detail,\n            } );\n            const listenerRegistry = TrapsRegistry.getInstance( originalTarget, false, params.namespace );\n            return listenerRegistry \n                ? listenerRegistry.emit( descriptor, defaultSet ) \n                : defaultSet( descriptor );\n        }\n        // ---------\n        return has( originalTarget, prop, exists => {\n            if ( !exists ) return exec( exists );\n            const $params = { ...params, propertyDescriptor: def };\n            if ( 'forceOldValue' in params ) { $params.forceValue = params.forceOldValue; }\n            return get( originalTarget, prop, oldValue => exec( exists, oldValue ), $params );\n        }, params );\n        // ---------\n    } )( [], entries.slice( 0 ), descriptors => {\n        const listenerRegistry = ListenerRegistry.getInstance( originalTarget, false, params.namespace );\n        if ( listenerRegistry ) listenerRegistry.emit( descriptors, def );\n        return receiver(\n            isPropsList( prop/*original*/ ) ? descriptors.map( opr => opr.status ) : descriptors[ 0 ]?.status\n        );\n    } );\n}\n\n/**\n * Performs a defineProperty operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Object\t        descriptor\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function defineProperty( target, prop, descriptor, receiver = x => x, params = {} ) {\n    return set( target, prop, descriptor, receiver, params, true/*def*/ );\n}\n\n/**\n * Performs a defineProperties operation.\n * @note this isn't part of the standard Reflect API.\n * \n * @param Object\t        target\n * @param Object\t        descriptors\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function defineProperties( target, descriptors, receiver = x => x, params = {} ) {\n    return set( target, descriptors, receiver, params, true/*def*/ );\n}\n\n/**\n * Performs a delete operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function deleteProperty( target, prop, receiver = x => x, params = {} ) {\n    // ---------------\n    target = resolveObj( target );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }\n    // ---------------\n    const props = _arrFrom( prop, false ), related = [ ...props ];\n    return ( function next( descriptors, props, _done ) {\n        if ( !props.length ) return _done( descriptors );\n        const prop = props.shift();\n        // ---------\n        function defaultDel( descriptor, status = undefined ) {\n            const _next = status => ( descriptor.status = status, next( descriptors.concat( descriptor ), props, _done ) );\n            if ( arguments.length > 1 ) return _next( descriptor, status );\n            const accessorizedProps = _( target, 'accessorizedProps', false );\n            const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key + '' );\n            if ( accessorization && !accessorization.restore() ) _next( false );\n            return _next( Reflect.deleteProperty( target, descriptor.key ) );\n        }\n        // ---------\n        function exec( oldValue ) {\n            const descriptor = new Descriptor( target, {\n                type: 'deleteProperty',\n                key: prop,\n                oldValue,\n                related: [ ...related ],\n                detail: params.detail,\n            } );\n            const listenerRegistry = TrapsRegistry.getInstance( target, false, params.namespace );\n            return listenerRegistry \n                ? listenerRegistry.emit( descriptor, defaultDel ) \n                : defaultDel( descriptor );\n        }\n        // ---------\n        return get( target, prop, exec, params );\n        // ---------\n    } )( [], props.slice( 0 ), descriptors => {\n        const listenerRegistry = ListenerRegistry.getInstance( target, false, params.namespace );\n        if ( listenerRegistry ) listenerRegistry.emit( descriptors );\n        return receiver(\n            isPropsList( prop/*original*/ ) ? descriptors.map( opr => opr.status ) : descriptors[ 0 ].status\n        );\n    } );\n}\n\n/**\n * @alias deleteProperty()\n */\nexport function deleteProperties( target, props, receiver = x => x, params = {} ) {\n    return deleteProperty( ...arguments );\n}\n\n/* ---------------EFFECT APIs--------------- */\n\n/**\n * Performs a \"construct\" operation.\n *\n * @param Array|Object\t    target\n * @param Array\t\t\t    argumentsList\n * @param Object\t\t    newTarget\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function construct( target, argumentsList, newTarget = null, receiver = x => x, params = {} ) {\n    return exec( target, 'construct', arguments.length > 2 ? { argumentsList, newTarget } : { argumentsList }, receiver, params );\n}\n\n/**\n * Performs an \"apply\" operation.\n *\n * @param Array|Object\t    target\n * @param Any\t            thisArgument\n * @param Array\t            argumentsList\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function apply( target, thisArgument, argumentsList, receiver = x => x, params = {} ) {\n    return exec( target, 'apply', { thisArgument, argumentsList }, receiver, params );\n}\n\n/**\n * Performs a \"setPrototypeOf\" operation.\n *\n * @param Array|Object\t    target\n * @param Anyr\t            proto\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function setPrototypeOf( target, proto, receiver = x => x, params = {} ) {\n    return exec( target, 'setPrototypeOf', { proto }, receiver, params );\n}\n\n/**\n * Performs a \"preventExtension\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function preventExtensions( target, receiver = x => x, params = {} ) {\n    return exec( target, 'preventExtensions', {}, receiver, params );\n}\n\n/* ---------------HELPER APIs--------------- */\n\n/**\n * Adds an observer to a target's registry.\n *\n * @param Array|Object\t    target\n * @param String|Object\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Function: AbortController\n */\nfunction bind( target, prop, receiver, params = {} ) {\n    let controller;\n    if ( !params.signal ) {\n        controller = new AbortController;\n        params = { ...params, signal: controller.signal };\n        otherUtil.setMaxListeners?.( 0, controller.signal );\n    }\n    const listenerRegistry = ListenerRegistry.getInstance( target, true, params.namespace );\n    return function emit( descriptor_s, prevRegistration = null ) {\n        prevRegistration?.remove();\n        const registrationNext = listenerRegistry.addRegistration( prop, emit, params );\n        const flags = { signal: registrationNext.signal, };\n        if ( arguments.length ) {\n            const handlerReturnValue = receiver( descriptor_s, flags );\n            if ( arguments.length > 1 ) return handlerReturnValue;\n        }\n        return controller;\n    };\n}\n\n/**\n * Performs an operation of the given \"type\".\n *\n * @param Array|Object\t    target\n * @param String\t\t    type\n * @param Object\t\t    payload\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nfunction exec( target, type, payload = {}, receiver = x => x, params = {} ) {\n    // ---------\n    target = resolveObj( target );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }    \n    // ---------\n    function defaultExec( descriptor, result ) {\n        if ( arguments.length > 1 ) return receiver( result );\n        return receiver( Reflect[ type ]( target, ...Object.values( payload ) ) );\n    }\n    // ---------\n    const descriptor = new Descriptor( target, { type, ...payload } );\n    const listenerRegistry = TrapsRegistry.getInstance( target, false, params.namespace );\n    if ( listenerRegistry ) {\n        return listenerRegistry.emit( descriptor, defaultExec );\n    }\n    return defaultExec( descriptor );\n}\n\n// Asks if prop is a multi-result field\nfunction isPropsList( prop ) {\n    return prop === Infinity || Array.isArray( prop );\n}\n\n// Resolves obj down to it's self\nfunction resolveObj( obj, assert = true ) {\n\tif ( ( !obj || !_isTypeObject( obj ) ) && assert ) throw new Error( `Object must be of type object or array! \"${ _getType( obj ) }\" given.` );\n    if ( obj instanceof Descriptor ) {\n        obj = obj.value;\n    }\n\treturn obj && unproxy( obj );\n}\n\n// Resolves prop down to actual keys\nfunction resolveProps( obj, prop, receiver, params = {} ) {\n    if ( prop === Infinity ) {\n        if ( params.level && !_isTypeObject( obj ) ) return receiver( [] );\n        return ownKeys( obj, receiver, params );\n    }\n    return receiver( _arrFrom( prop, false ) );\n}\n", "\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n", "\r\n/**\r\n * Returns the val's type.\r\n *\r\n * @param string \tval\r\n *\r\n * @return string\r\n */\r\nexport default function(val) {\r\n\treturn typeof val;\r\n};\r\n", "\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n", "/**\r\n * @imports\r\n */\r\nimport _intersect from '../arr/intersect.js';\r\n\r\n/**\r\n * Creates and/or returns an \"internals\" object for the given object.\r\n * \r\n * @param Any obj\r\n * @param String namespace\r\n * \r\n * @return Object\r\n */\r\nexport default function internals(obj, ...namespaces) {\r\n    if (!globalThis.webqit) { globalThis.webqit = {}; }\r\n    if (!globalThis.webqit.refs) {\r\n        Object.defineProperty(globalThis.webqit, 'refs', {value: new ObservableMap})\r\n    }\r\n    if (!arguments.length) return globalThis.webqit.refs;\r\n    let itnls = globalThis.webqit.refs.get(obj);\r\n    if (!itnls) {\r\n        itnls = new ObservableMap;\r\n        globalThis.webqit.refs.set(obj, itnls);\r\n    }\r\n    let _ns, _itnls;\r\n    while ((_ns = namespaces.shift())) {\r\n        if ((_itnls = itnls) && !(itnls = itnls.get(_ns))) {\r\n            itnls = new ObservableMap;\r\n            _itnls.set(_ns, itnls);\r\n        }\r\n    }\r\n    return itnls;\r\n}\r\n\r\nclass ObservableMap extends Map {\r\n    constructor( ...args ) {\r\n        super( ...args );\r\n        this.observers = new Set;\r\n    }\r\n    set( key, value ) {\r\n        let returnValue = super.set( key, value );\r\n        this.fire( 'set', key, value, key );\r\n        return returnValue;\r\n    }\r\n    delete( key ) {\r\n        let returnValue = super.delete( key );\r\n        this.fire( 'delete', key );\r\n        return returnValue;\r\n    }\r\n    has( key ) {\r\n        this.fire( 'has', key );\r\n        return super.has( key );\r\n    }\r\n    get( key ) {\r\n        this.fire( 'get', key );\r\n        return super.get( key );\r\n    }\r\n    keyNames() { return Array.from( super.keys() ); }\r\n    observe( type, key, callback ) {\r\n        const entry = { type, key, callback };\r\n        this.observers.add( entry );\r\n        return () => this.observers.delete( entry );\r\n    }\r\n    unobserve( type, key, callback ) {\r\n        if ( Array.isArray( type ) || Array.isArray( key ) ) {\r\n            throw new Error( `The \"type\" and \"key\" arguments can only be strings.` );\r\n        }\r\n        for ( let entry of this.observers ) {\r\n            if ( !( _intersection( [ type, '*' ], entry.type ) && _intersection( [ key, '*' ], entry.key ) && entry.callback === callback ) ) continue;\r\n            this.observers.delete( entry );\r\n        }\r\n    }\r\n    fire( type, key, ...args ) {\r\n        // IMPORTANT: Array.from() must be used so that new additions to this.observers\r\n        // during the loop aren't picked up!\r\n        for ( let entry of this.observers ) {\r\n            if ( !( _intersection( [ type, '*' ], entry.type ) && _intersection( [ key, '*' ], entry.key ) ) ) continue;\r\n            entry.callback( ...args );\r\n        }\r\n    }\r\n}\r\n\r\nconst _intersection = ( a, b ) => {\r\n    if ( Array.isArray( b ) ) return _intersect( a, b ).length;\r\n    return a.includes( b );\r\n}\r\n", "\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n", "\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n", "\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n", "\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n", "\n/**\n * @imports\n */\nimport { _internals } from '@webqit/util/js/index.js';\n\nexport const _ = ( ...args ) => _internals( 'observer-api', ...args );\n\nexport const _await = ( value, callback ) => value instanceof Promise ? value.then( callback ) : callback( value );\n\nexport const other = {};\n", "\n/**\n * ---------------------------\n * The Registration class\n * ---------------------------\n */\n\nexport default class Registration {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param Registry\t\t\tregistry\n\t * @param object\t\t\tdfn\n\t *\n\t * @return void\n\t */\n\tconstructor( registry, dfn ) {\n\t\tthis.registry = registry;\n\t\tObject.assign( this, { ...dfn, target: registry.target } );\n\t\tif ( this.params.signal ) {\n\t\t\tthis.params.signal.addEventListener( 'abort', () => this.remove() );\n\t\t}\n\t}\n\n\t/**\n\t * Sets a \"disconnected\" flag on the Registration.\n\t *\n\t * @return void\n\t */\n\tremove() {\n\t\tthis.removed = true;\n\t\treturn this.registry.removeRegistration( this );\n\t}\n}", "\n/**\n * @imports\n */\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport Registration from './Registration.js';\nimport { _await, other as otherUtil } from '../util.js';\n\n/**\n * ---------------------------\n * The ListenerRegistration class\n * ---------------------------\n */\n\nexport default class ListenerRegistration extends Registration {\n\t\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.emit.currentRegistration = this;\n\t\tObject.defineProperty( this, 'abortController', { value: new AbortController } );\n\t\tObject.defineProperty( this, 'signal', { value: this.abortController.signal } );\n\t\totherUtil.setMaxListeners?.( 0, this.signal );\n\t}\n\n\t/**\n\t * De-registers the instance.\n\t * \n\t * @return Void\n\t */\n\tremove() {\n\t\tthis.abortController.abort();\n\t\tsuper.remove();\n\t}\n\n\t/**\n\t * Calls the observer's handler function\n\t * on matching with the event's fields.\n\t *\n\t * @param Array\t\t\t \t\tevents\n\t *\n\t * @return Any\n\t */\n\tfire( events ) {\n\t\tif ( this.emit.recursionTarget && ![ 'inject', 'force-async', 'force-sync' ].includes( this.params.recursions ) ) return;\n\t\tlet matches = events, filter = this.filter;\n\t\tif ( filter !== Infinity && ( filter = _arrFrom( filter, false ) ) ) {\n\t\t\tmatches = events.filter( event => filter.includes( event.key ) );\n\t\t}\n\t\tif ( this.params.diff ) {\n\t\t\tmatches = matches.filter( event => event.type !== 'set' || event.value !== event.oldValue );\n\t\t}\n\t\tif ( matches.length ) {\n\t\t\tif ( this.emit.recursionTarget && this.params.recursions !== 'force-sync' ) {\n\t\t\t\tthis.emit.recursionTarget.push( ...matches );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.emit.recursionTarget = this.params.recursions === 'inject' ? matches : [];\n\t\t\tconst $ret = this.filter === Infinity || Array.isArray( this.filter )\n\t\t\t\t? this.emit( matches, this )\n\t\t\t\t: this.emit( matches[ 0 ], this );\n\t\t\t// NOTEL: on calling emit(), this registration has expired and a new one active!!!\n\t\t\treturn _await( $ret, ret => {\n\t\t\t\tconst recursions = this.emit.recursionTarget;\n\t\t\t\tdelete this.emit.recursionTarget;\n\t\t\t\tif ( this.params.recursions === 'force-async' ) {\n\t\t\t\t\tif ( recursions.length ) return this.emit.currentRegistration.fire( recursions );\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t} );\n\t\t}\n\t}\n}\n", "\n/**\n * @imports\n */\nimport { _isTypeObject, _getType } from '@webqit/util/js/index.js';\nimport { _from as _arrFrom, _intersect, _equals as _arrEquals } from '@webqit/util/arr/index.js';\nimport { _ } from '../util.js';\n\n/**\n * ---------------------------\n * The Registry class\n * ---------------------------\n */\n\nexport default class Registry {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param object\ttarget\n\t * \n\t * @return void\n\t */\n\tconstructor( target ) {\n\t\tthis.target = target;\n\t\tthis.entries = [];\n\t}\n\t\n\t/**\n\t * Adds an Registration instance\n\t * with optional tags.\n\t *\n\t * @param Registration\t\tregistration\n\t *\n\t * @return Registration\n\t */\n\taddRegistration( registration ) {\n\t\tthis.entries.push( registration );\n\t\treturn registration;\n\t}\n\t\n\t/**\n\t * Removes registrations by reference.\n\t *\n\t * @param Registration\t\tregistration\n\t *\n\t * @return void\n\t */\n\tremoveRegistration( registration ) {\n\t\tthis.entries = this.entries.filter( _entry => _entry !== registration );\n\t}\n\t\t\n\t/**\n\t * Returns a observer-specific object embedded on an element.\n\t *\n\t * @param string\t\ttype\n\t * @param array|object\ttarget\n\t * @param bool      \tcreateIfNotExists\n\t * @param string      \tnamespace\n\t *\n\t * @return Registry\n\t */\n\tstatic _getInstance( type, target, createIfNotExists = true, namespace = this.__namespace ) {\n\t\tif ( !_isTypeObject( target ) ) throw new Error( `Subject must be of type object; \"${ _getType( target ) }\" given!` );\n\t\tlet ImplementationClass = this;\n\t\tif ( namespace && _( 'namespaces' ).has( type + '-' + namespace ) ) {\n\t\t\tImplementationClass = _( 'namespaces' ).get( type + '-' + namespace );\n\t\t\ttype += '-' + namespace\n\t\t}\n\t\tif ( !_( target, 'registry' ).has( type ) && createIfNotExists ) {\n\t\t\t_( target, 'registry' ).set( type, new ImplementationClass( target ) );\n\t\t}\n\t\treturn _( target, 'registry' ).get( type );\n\t}\n\n\t/**\n\t * Extend a Fireable Class with a namespace.\n\t *\n\t * @param string\t\tnamespace\n\t * @param class      \tImplementationClass\n\t *\n\t * @return void|class\n\t */\n\tstatic _namespace( type, namespace, ImplementationClass = null ) {\n\t\ttype += '-' + namespace;\n\t\tif ( arguments.length === 2 ) return _( 'namespaces' ).get( type );\n\t\tif ( !( ImplementationClass.prototype instanceof this ) ) {\n\t\t\tthrow new Error( `The implementation of the namespace ${ this.name }.${ namespace } must be a subclass of ${ this.name }.` );\n\t\t}\n\t\t_( 'namespaces' ).set( type, ImplementationClass );\n\t\tImplementationClass.__namespace = namespace;\n\t}\n}", "\n/**\n * ---------------------------\n * The Descriptor class\n * ---------------------------\n */\n\nexport default class Descriptor {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param array|object\ttarget\n\t * @param object\t\tdfn\n\t *\n\t * @return void\n\t */\n\tconstructor( target, dfn ) {\n\t\tthis.target = target;\n\t\tif ( !( dfn.type ) ) throw new Error( 'Descriptor type must be given in definition!' );\n\t\tObject.assign( this, dfn );\n\t}\n}", "\n/**\n * @imports\n */\nimport ListenerRegistration from './ListenerRegistration.js';\nimport Registry from './Registry.js';\nimport { _await } from '../util.js';\nimport Descriptor from './Descriptor.js';\n\n/**\n * ---------------------------\n * The ListenerRegistry class\n * ---------------------------\n */\n\nexport default class ListenerRegistry extends Registry {\n\n\tstatic getInstance( target, createIfNotExists = true, namespace = null ) {\n\t\treturn super._getInstance( 'listeners', ...arguments );\n\t}\n\n\tstatic namespace( namespace, ImplementationClass = null ) {\n\t\treturn super._namespace( 'listeners', ...arguments );\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor( target ) {\n\t\tsuper( target );\n\t\tthis.batches = [];\n\t}\n\t\n\t/**\n\t * @addRegistration\n\t */\n\taddRegistration( filter, emit, params ) {\n\t\treturn super.addRegistration( new ListenerRegistration( this, { filter, emit, params } ) );\n\t}\n\t\n\t/**\n\t * Fires all observers with the given evt (change).\n\t *\n\t * @param Arrayn events\n\t *\n\t * @return Void\n\t */\n\temit( events, isPropertyDescriptors = false ) {\n\t\tif ( this.batches.length ) {\n\t\t\tthis.batches[ 0 ].events.push( ...events );\n\t\t\treturn\n\t\t}\n\t\tlet eventsWithValues;\n\t\tthis.entries.forEach( listener => {\n\t\t\tif ( isPropertyDescriptors && !listener.params.propertyDescriptors ) {\n\t\t\t\teventsWithValues = eventsWithValues || events.map( e => {\n\t\t\t\t\tlet { target, value, oldValue, type, ...details } = e;\n\t\t\t\t\tvalue = value.get ? value.get() : value.value;\n\t\t\t\t\toldValue = oldValue?.get ? oldValue.get() : oldValue?.value;\n\t\t\t\t\treturn new Descriptor( target, { type: 'set', value, oldValue, ...details } );\n\t\t\t\t} );\n\t\t\t\tlistener.fire( eventsWithValues );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlistener.fire( events );\n\t\t} );\n\t}\n\n\t/**\n\t * Fires all observers with the given evt (change).\n\t *\n\t * @param Arrayn events\n\t *\n\t * @return Void\n\t */\n\tbatch( callback ) {\n\t\tthis.batches.unshift( { entries: [ ...this.entries ], events: [] } );\n\t\tconst returnValue = callback();\n\t\treturn _await( returnValue, returnValue => {\n\t\t\tconst batch = this.batches.shift();\n\t\t\tif ( batch.events.length ) {\n\t\t\t\tbatch.entries.forEach( listener => listener.fire( batch.events ) );\n\t\t\t}\n\t\t\treturn returnValue;\n\t\t} )\n\t}\n\n}", "\n/**\n * @imports\n */\nimport Registration from './Registration.js';\n\n/**\n * ---------------------------\n * The TrapsRegistration class\n * ---------------------------\n */\n\nexport default class TrapsRegistration extends Registration {\n\t\n\t/**\n\t * Calls the observer's handler function\n\t * on matching with the descriptor's fields.\n\t *\n\t * @param Descriptor\t\t\t \tdescriptor\n\t * @param function\t\t\t\t\tnext\n\t * @param mixed\t\t\t\t\t \trecieved\n\t *\n\t * @return void\n\t */\n\texec( descriptor, next, recieved ) {\n\t\tif ( this.running || !this.traps[ descriptor.type ] ) {\n\t\t\treturn next( ...Array.prototype.slice.call( arguments, 2 ) );\n\t\t}\n\t\tthis.running = true;\n\t\treturn this.traps[ descriptor.type ]( descriptor, recieved, ( ...args ) => {\n\t\t\tthis.running = false;\n\t\t\treturn next( ...args );\n\t\t} );\n\t}\n}", "\n/**\n * @imports\n */\nimport TrapsRegistration from './TrapsRegistration.js';\nimport Registry from './Registry.js';\n\n/**\n * ---------------------------\n * The TrapsRegistry class\n * ---------------------------\n */\n\nexport default class TrapsRegistry extends Registry {\n\n\tstatic getInstance( target, createIfNotExists = true, namespace = null ) {\n\t\treturn super._getInstance( 'traps', ...arguments );\n\t}\n\n\tstatic namespace( namespace, ImplementationClass = null ) {\n\t\treturn super._namespace( 'traps', ...arguments );\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\taddRegistration( dfn ) {\n\t\treturn super.addRegistration( new TrapsRegistration( this, dfn ) );\n\t}\n\n\t/**\n\t * Fires all interceptors with the given action.\n\t *\n\t * @param Descriptor\t\tdescriptor\n\t * @param function\t\t\tdefaultHandler\n\t *\n\t * @return mixed\n\t */\n\temit( descriptor, defaultHandler = null ) {\n\t\tconst $this = this;\n\t\treturn ( function next( index, ..._args ) {\n\t\t\tconst registration = $this.entries[ index ];\n\t\t\tif ( registration ) {\n\t\t\t\treturn registration.exec( descriptor, ( ...args ) => {\n\t\t\t\t\treturn next( index + 1, ...args );\n\t\t\t\t}/*next*/, ..._args );\n\t\t\t}\n\t\t\treturn defaultHandler ? defaultHandler( descriptor, ..._args ) : _args[ 0 ];\n\t\t} )( 0 );\n\t}\n}", "\n/**\n * @imports\n */\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport { _isClass, _isFunction, _isTypeObject, _getType } from '@webqit/util/js/index.js';\nimport { set, deleteProperty, has, get, ownKeys, defineProperty, getOwnPropertyDescriptor } from \"./main.js\";\nimport { batch, apply, construct, getPrototypeOf, setPrototypeOf, isExtensible, preventExtensions } from \"./main.js\";\nimport { _ } from './util.js';\n\n/* ---------------ACCESSORIZE METHODS--------------- */\n\n/**\n * Accessorizes props.\n *\n * @param Array|Object\ttarget\n * @param String|Array\tprops\n * @param Object\t\tparams\n *\n * @return Array\n */\nexport function accessorize( target, props, params = {} ) {\n    target = resolveTarget( target );\n    const accessorizedProps = _( target, 'accessorizedProps' );\n    // ---------\n    function getDescriptorDeep( prop ) {\n        let descriptor, proto = target;\n        do {\n            descriptor = Object.getOwnPropertyDescriptor( proto, prop );\n        } while ( !descriptor && ( proto = Object.getPrototypeOf( proto ) ) );\n        return descriptor \n            ? { proto, descriptor } \n            : { descriptor: { value: undefined, configurable: true, enumerable: true, writable: true } };\n    }\n    // ---------\n    function accessorizeProp( prop ) {\n        if ( accessorizedProps.has( prop + '' ) ) return true;\n        // ------------------\n        // Current Descriptor Record\n        const currentDescriptorRecord = getDescriptorDeep( prop );\n        currentDescriptorRecord.getValue = function( propertyDescriptor = false ) {\n            if ( propertyDescriptor ) return this.descriptor;\n            return this.descriptor.get ? this.descriptor.get() : this.descriptor.value;\n        };\n        currentDescriptorRecord.setValue = function( value, propertyDescriptor = false ) {\n            this.dirty = true;\n            if ( propertyDescriptor ) { this.descriptor = value; return; }\n            return this.descriptor.set ? this.descriptor.set( value ) !== false : ( this.descriptor.value = value, true );\n        };\n        currentDescriptorRecord.intact = function() {\n            const currentDescriptor = Object.getOwnPropertyDescriptor( target, prop );\n            return currentDescriptor?.get === accessorization.get \n                && currentDescriptor?.set === accessorization.set\n                && accessorizedProps.get( prop + '' ) === this;\n        };\n        currentDescriptorRecord.restore = function() {\n            if ( !this.intact() ) return false;\n            if ( ( this.proto && this.proto !== target ) || ( !this.proto && !this.dirty ) ) { delete target[ prop ]; }\n            else { Object.defineProperty( target, prop, this.descriptor ); }\n            accessorizedProps.delete( prop + '' );\n            return true;\n        };\n        accessorizedProps.set( prop + '', currentDescriptorRecord );\n        // ------------------\n        // enumerable, configurable\n        const { enumerable = true } = currentDescriptorRecord.descriptor;\n        const accessorization = { enumerable, configurable: true };\n        // set, get\n        if ( ( 'value' in currentDescriptorRecord.descriptor ) || currentDescriptorRecord.descriptor.set ) {\n            accessorization.set = function ( value ) { return set( this, prop, value, params ); };\n        }\n        if ( ( 'value' in currentDescriptorRecord.descriptor ) || currentDescriptorRecord.descriptor.get ) {\n            accessorization.get = function () { return get( this, prop, params ); };\n        }\n        try {\n            Object.defineProperty( target, prop, accessorization );\n            return true;\n        } catch( e ) {\n            accessorizedProps.delete( prop + '' );\n            return false;\n        }\n    }\n    const _props = Array.isArray( props ) ? props : (\n        props === undefined ? Object.keys( target ) : [ props ]\n    );\n    const statuses = _props.map( accessorizeProp );\n    return props === undefined || Array.isArray( props ) \n        ? statuses \n        : statuses[ 0 ];\n}\n\n/**\n * Unaccessorizes previously accessorized props.\n *\n * @param Array|Object\ttarget\n * @param String|Array\tprops\n * @param Object\t\tparams\n *\n * @return Array\n */\nexport function unaccessorize( target, props, params = {} ) {\n    target = resolveTarget( target );\n    const accessorizedProps = _( target, 'accessorizedProps' );\n    function unaccessorizeProp( prop ) {\n        if ( !accessorizedProps.has( prop + '' ) ) return true;\n        return accessorizedProps.get( prop + '' ).restore();\n    }\n    const _props = Array.isArray( props ) ? props : (\n        props === undefined ? Object.keys( target ) : [ props ]\n    );\n    const statuses = _props.map( unaccessorizeProp );\n    return props === undefined || Array.isArray( props ) \n        ? statuses \n        : statuses[ 0 ];\n}\n\n/* ---------------PROXY METHODS--------------- */\n\n/**\n * Returns an object as a proxy and binds all instance methods\n * to the proxy instead of the object itself.\n *\n * @param Array|Object\t\ttarget\n * @param Object\t\t    params\n * @param Function\t\t    extendCallback\n *\n * @return Proxy\n */\nexport function proxy( target, params = {}, extendCallback = undefined ) {\n    // Resolve target\n    const originalTarget = resolveTarget( target );\n    // Return same proxy instance?\n    if ( typeof params.membrane === 'boolean' ) throw new Error( `The params.membrane parameter cannot be of type boolean.` );\n    if ( params.membrane && _( originalTarget, 'membraneRef' ).has( params.membrane ) ) { return _( originalTarget, 'membraneRef' ).get( params.membrane ); }\n    const traps = {\n        apply( target, thisArgument, argumentsList ) {\n            if ( Array.isArray( thisArgument ) ) {\n                // Manually manage the length property\n                const originalThis = resolveTarget( thisArgument );\n                _( originalThis ).set( '$length', originalThis.length );\n                // And array methods have their operations batched\n                return batch( originalThis, () =>  apply( target, thisArgument, argumentsList ) );\n            }\n            return apply( target, thisArgument, argumentsList );\n        },\n        construct:  ( target, argumentsList, newTarget = null ) => construct( target, argumentsList, newTarget, params ),\n        defineProperty:  ( target, propertyKey, attributes ) => defineProperty( target, propertyKey, attributes, params ),\n        deleteProperty: ( target, propertyKey ) => deleteProperty( target, propertyKey, params ),\n        get: ( target, propertyKey, receiver = null ) => {\n            const $params = { ...params, receiver };\n            if ( Array.isArray( target ) && propertyKey === 'length' && _( target ).has( '$length' ) ) {\n                $params.forceValue = _( target ).get( '$length' );\n            }\n            const returnValue = get( target, propertyKey, $params );\n            if ( Array.isArray( target ) && typeof returnValue === 'function' ) {\n                // Return a proxy, but in terms of a membrane. \n                return proxy( returnValue, { ...params, membrane: receiver/* the instance obj that will be the thisArgument at apply(). Much like function.bind() */ } );\n            }\n            return returnValue;\n        },\n        getOwnPropertyDescriptor: ( target, propertyKey ) => getOwnPropertyDescriptor( target, propertyKey, params ),\n        getPrototypeOf: target => getPrototypeOf( target, params ),\n        has: ( target, propertyKey ) => has( target, propertyKey, params ),\n        isExtensible: target => isExtensible( target, params ),\n        ownKeys: target => ownKeys( target, params ),\n        preventExtensions: target => preventExtensions( target, params ),\n        set: ( target, propertyKey, value, receiver = null ) => {\n            const $params = { ...params, receiver };\n            if ( Array.isArray( target ) && propertyKey === 'length' ) {\n                $params.forceOldValue = _( target ).get( '$length' );\n                _( target ).set( '$length', value );\n            }\n            return set( target, propertyKey, value, $params );\n        },\n        setPrototypeOf: ( target, prototype ) => setPrototypeOf( target, prototype, params ),\n    };\n    // Extend...\n    const $traps = extendCallback?.( traps ) || traps;\n    // Create proxy\n    const $proxy = new Proxy( originalTarget, $traps );\n    if ( params.membrane ) { _( originalTarget, 'membraneRef' ).set( params.membrane, $proxy ); }\n    _( $proxy ).set( $proxy, originalTarget );\n\treturn $proxy;\n}\n\n/**\n * Returns the original object earlier proxied by proxy().\n *\n * @param Proxy|Any\t\ttarget\n *\n * @return Any\n */\nexport function unproxy( target ) {\n    // Proxy targets are mapped to their own instances internally\n    return _( target ).get( target ) || target;\n}\n\n/* ---------------HELPERS--------------- */\n\n/** \n * Ensures target object is an object or array.\n *\n * @param Array|Object\ttarget\n *\n * @return Array|Object\n */\nfunction resolveTarget( target ) {\n\tif ( !target || !_isTypeObject( target ) ) throw new Error('Target must be of type object!');\n\treturn unproxy( target );\n}\n", "\n/**\n * @imports\n */\nimport * as main from './main.js';\nimport * as actors from './actors.js';\n\nconst Observer = { ...main, ...actors };\n\nexport default Observer;", "/**\n * @imports\n */\nimport { other } from \"../util.js\";\n\nexport default class _EventTarget extends EventTarget {\n\n    managedAlways = new Set;\n    managedOnce = new Set;\n\n    constructor() {\n        super();\n        other.setMaxListeners?.( 0, this );\n    }\n\n    fire( evenName ) { return this.dispatchEvent( new Event( evenName, { cancelable: true } ) ); }\n\n    on( ...args ) {\n        this.addEventListener( ...args );\n        return () => this.removeEventListener( ...args );\n    }\n\n    abort( total = false ) {\n        this.managedAlways.forEach( x => x.abort ? x.abort( total ) : x( total ) );\n        this.managedOnce.forEach( x => x.abort ? x.abort( total ) : x( total ) );\n        this.managedOnce.clear();\n        this.fire( 'abort' );\n    }\n\n    manage( x ) { this.managedAlways.add( x ); }\n    once( x ) { this.managedOnce.add( x ); }\n\n}", "\n/**\n * @import\n */\nimport EventTarget from './EventTarget.js';\nimport { _call } from '../util.js';\n\nexport default class Autorun extends EventTarget {\n\n    state;\n\n    constructor( context, type, spec, serial, scope, closure ) {\n        super();\n        // We are to be managed by context\n        context?.once( this );\n        this.context = context;\n        this.type = type;\n        this.spec = spec;\n        this.scope = scope;\n        if ( context?.scope !== scope ) {\n            // It's own scope, so we manage it\n            this.manage( scope );\n        }\n        this.serial = serial;\n        this.closure = closure;\n        if ( context?.type === 'iteration' ) { this.path = context.path.concat( this.spec.index ); }\n        else if ( context?.type === 'round' ) { this.path = context.path.concat( this.serial ); }\n        else { this.path = ( context?.path || [] ).slice( 0, -1 ).concat( this.serial ); }\n        this.flowControl = new Map;\n    }\n\n    get runtime() { return this.context.runtime; }\n\n    contains( node ) { return this === node.context || ( node.context && this.contains( node.context ) ); }\n\n    order( node ) {\n        if ( !node ) return this;\n        const [ a, b ] = node.path.length < this.path.length ? [ node, this ] : [ this, node ];\n        return a.path.reduce( ( prev, key, i ) => {\n            return prev && key <= b.path[ i ];\n        }, true ) && a || b;\n    }\n\n    execute( callback = null ) {\n        const stateBefore = this.before();\n        const args = this === this.runtime || !this.context ? [ this ] : ( this.spec.args || [] );\n        return _call( this.closure, undefined, ...args, returnValue => {\n            if ( this.spec.complete ) { returnValue = this.spec.complete( returnValue, this ); }\n            this.after( stateBefore );\n            return callback ? callback( returnValue, this ) : returnValue;\n        } );\n    }\n\n    continue( label ) { return this.apply( 'continue', label ); }\n\n    break( label ) { return this.apply( 'break', label ); }\n\n    return( arg ) { return this.apply( 'return', arg ); }\n\n    flowControlApplied( cmd, arg ) {\n        if ( !arguments.length ) return this.flowControl.size;\n        if ( arguments.length === 1 ) return this.flowControl.has( cmd );\n        return this.flowControl.get( cmd )?.arg === arg;\n    }\n\n    apply( cmd, arg, unset = false ) {\n        const sizeBefore = this.flowControl.size;\n        if ( unset ) { this.flowControl.delete( cmd ); }\n        else { this.flowControl.set( cmd, { arg } ); }\n        if ( this.type === 'round' ) { this.context.breakpoint = this; }\n        if ( this.type === 'round' && [ 'break', 'continue' ].includes( cmd ) && arg === this.context?.spec.label ) {\n            if ( !unset ) { this.flowControl.get( cmd ).endpoint = true; }\n            if ( this.state !== 'running' ) { this.handleRestRounds( this.flowControl.size, sizeBefore ); }\n            return;\n        }\n        // Notice that no hoisting and no \"rest\" handling if in active scope\n        // as that would be done at after() hook!\n        if ( this.state !== 'running' ) {\n            this.handleRestBlock( this.flowControl.size, sizeBefore );\n            this.hoist( ...arguments );\n        }\n    }\n\n    hoist( ...args ) { return this.context?.apply( ...args ); }\n\n    handleRestBlock( sizeAfter, sizeBefore ) {\n        let restBlock;\n        if ( this.type !== 'block' // If this is \"rest\", the \"rest\" you see from parent scope will be self\n        || !( restBlock = this.context?.restBlock ) ) return;\n        if ( sizeAfter ) { restBlock.abort(); }\n        else if ( sizeBefore ) {\n            restBlock.state = 'resuming'; // Just something other than \"aborted\"\n            this.runtime.schedule( restBlock );\n        }\n    }\n\n    handleRestRounds( sizeAfter, sizeBefore ) {\n        if ( this.type !== 'round' ) return;\n        let nextRound = this, forSchedule = new Set;\n        while( nextRound = nextRound.nextRound ) {\n            if ( sizeAfter ) { nextRound.abort(); }\n            else if ( sizeBefore && nextRound.state !== 'inert' ) {\n                nextRound.state = 'resuming'; // Just something other than \"aborted\"\n                forSchedule.add( nextRound );\n            }\n        }\n        if ( forSchedule.size ) { this.runtime.schedule( ...forSchedule ); }\n    }\n\n    before() {\n        this.state = 'running';\n        // Get record and reset\n        const flowControlBefore = this.flowControl;\n        this.flowControl = new Map;\n        return flowControlBefore;\n    }\n\n    after( flowControlBefore ) {\n        this.state = 'complete';\n        // Compare records... and hoist differences\n        const flowControlAfter = this.flowControl;\n        // Handle rest block\n        this.handleRestBlock( flowControlAfter.size, flowControlBefore.size );\n        this.handleRestRounds( flowControlAfter.size, flowControlBefore.size );\n        for ( const cmd of [ 'break', 'continue', 'return' ] ) {\n            if ( flowControlAfter.has( cmd ) && !flowControlAfter.get( cmd ).endpoint ) { this.hoist( cmd, flowControlAfter.get( cmd ).arg ); }\n            else if ( flowControlBefore.has( cmd ) && !flowControlBefore.get( cmd ).endpoint ) { this.hoist( cmd, flowControlBefore.get( cmd ).arg, true ); }\n        }\n    }\n\n    abort( total = false ) {\n        if ( total ) {\n            if ( this.context?.breakpoint === this ) { delete this.context.breakpoint; }\n            this.flowControl.clear();\n        }\n        this.state = total ? 'inert' : 'aborted';\n        return super.abort( total );\n    }\n    \n}", "\n/**\n * @import\n */\nimport Observer from '@webqit/observer';\nimport { _isTypeObject } from '../util.js';\nimport EventTarget from './EventTarget.js';\n\nexport default class Signal extends EventTarget {\n\n    subscribers = new Set;\n    signals = new Map;\n\n    constructor( context, state ) {\n        super();\n        this.context = context;\n        this.context?.once( () => this.abort() );\n        this.once( () => this.watchMode( false ) );\n        this.state = state;\n    }\n\n    get name() { return [ ...this.context?.signals.keys() || [] ].find( k => this.context.signals.get( k ) === this ); }\n   \n    signal( name ) {\n        let signal = this.signals.get( name );\n        if ( !signal ) {\n            // Initialization\n            signal = new Signal( this, this.type === 'objects' ? name : ( typeof this.state === 'object' && this.state ? Observer.get( this.state, name ) : undefined ) );\n            this.signals.set( name, signal );\n            // Self-start\n            if ( this.signals.size === 1 ) { this.watchMode(); }\n            // Cleanup\n            signal.once( () => {\n                // On being killed, auto-delete\n                this.signals.delete( name );\n                // On empty self-kill\n                if ( !this.signals.size ) { this.watchMode( false ); }\n            } );\n        }\n        return signal;\n    }\n\n    subscribe( autorun ) {\n        this.subscribers.add( autorun );\n        autorun.once( () => {\n            // Cleanup\n            this.subscribers.delete( autorun );\n            // On empty self-kill\n            if ( !this.subscribers.size ) { this.abort(); }\n        } );\n    }\n\n    watchMode( flag = true ) {\n        this.mutationsWatch?.abort();\n        if ( !flag || !this.signals.size || !_isTypeObject( this.state ) ) return;\n        this.mutationsWatch = Observer.observe( this.state, mutations => {\n            // Find subscribers and organize them by target runtime\n            const groupings = { map: new Map, add( autoruns, mutation ) {\n                for ( const autorun of autoruns ) {\n                    if ( autorun.spec.beforeSchedule?.( mutation ) === false ) continue;\n                    if ( !this.map.has( autorun.runtime ) ) { this.map.set( autorun.runtime, new Set ); }\n                    this.map.get( autorun.runtime ).add( autorun );\n                }\n            } };\n            for ( const mutation of mutations ) {\n                const signal = this.signals.get( mutation.key );\n                if ( !signal ) continue;\n                groupings.add( signal.subscribers, mutation );\n                signal.refresh( mutation.value );\n            }\n            // Dispatch to runtimes...\n            const runtimesMap = !groupings.map.size ? groupings.map : [ ...groupings.map ].sort( ( a, b ) => a.$serial > b.$serial ? -1 : 1 );\n            //const runtimesMap = groupings.map;\n            for ( const [ runtime, autoruns ] of runtimesMap ) {\n                if ( runtime.state === 'aborted' ) continue;\n                runtime.schedule( ...autoruns );\n            }\n        }, { recursions: 'force-sync' } );\n    }\n\n    refresh( newState ) {\n        this.state = newState;\n        for ( const [ name, signal ] of this.signals ) {\n            signal.refresh( Observer.get( this.state ?? {}, name ) );\n        }\n        this.watchMode();\n    }\n\n}", "\n/**\n * @import\n */\nimport Signal from './Signal.js';\n\nexport default class Scope extends Signal {\n\n    symbols = new Map;\n    constructor( context, type, state = undefined ) {\n        super( context, state || Object.create( null ) );\n        this.type = type;\n    }\n\n}", "\n/**\n * @import\n */\nimport Observer from '@webqit/observer';\nimport Autorun from './Autorun.js';\nimport Scope from './Scope.js';\n\nexport default class AutoIteration extends Autorun {\n\n    rounds = new Map;\n\n    constructor( context, type, spec, serial, scope, closure ) {\n        const async = closure.constructor.name === 'AsyncFunction';\n        if ( spec.iteratee ) {\n            spec.$closure = closure;\n            closure = async ? async () => { await this.iterate(); } : () => { this.iterate(); };\n        }\n        super( context, type, spec, serial, scope, closure );\n        this.async = async;\n        this.manage( () => {\n            delete this.breakpoint;\n            this.rounds.clear();\n        } );\n    }\n\n    add( key, round ) {\n        this.rounds.set( key, round );\n        if ( this.lastRound ) {\n            this.lastRound.nextRound = round;\n            round.prevRound = this.lastRound;\n        }\n        this.lastRound = round;\n        return round;\n    }\n\n    createRound( production ) {\n        const index = this.rounds.size;\n        const scope = new Scope( this.scope, 'round', { [ this.spec.production ]: production } );\n        const round = new Autorun( this, 'round', { index }, this.serial, scope, this.spec.$closure );\n        return this.add( this.spec.kind === 'for-in' ? production : index, round );\n    }\n\n    async iterate() {\n        // Get iteratee and implicitly bind instance to the ref\n        this.iteratee = this.spec.iteratee();\n        // Do for \"for-in\" loop\n        if ( this.spec.kind === 'for-in' ) {\n            let broken;\n            for ( const key in this.iteratee ) {\n                const round = this.createRound( key );\n                if ( broken ) continue;\n                this.async ? await this.runtime.push( round ) : this.runtime.push( round );\n                if ( this.hardBreak() ) { break; }\n                if ( this.terminated() ) { broken = true; }\n            }\n            this.watchMode();\n        }\n        if ( this.spec.kind === 'for-of' ) {\n            let broken;\n            for ( const val of this.iteratee ) {\n                const round = this.createRound( val );\n                if ( broken ) continue;\n                this.async ? await this.runtime.push( round ) : this.runtime.push( round );\n                if ( this.hardBreak() ) { break; }\n                if ( this.terminated() ) { broken = true; }\n            }\n            this.watchMode();\n        }\n    }\n\n    terminated() { return this.breakpoint && !this.breakpoint.flowControlApplied( 'continue', this.spec.label ) && this.breakpoint.flowControlApplied(); }\n\n    hardBreak() { return this.terminated() && this.runtime.$params.experimentalFeatures === false; }\n\n    watchMode() {\n        const handleMutations = mutations => {\n            const forSchedule = new Set;\n            for ( const mutation of mutations ) {\n                if ( Array.isArray( this.iteratee ) && mutation.key === 'length' ) continue;\n                const production = this.spec.kind === 'for-in' ? mutation.key : mutation.value;\n                const key = this.spec.kind === 'for-in' ? mutation.key : parseInt( mutation.key );\n                const existingRound = this.rounds.get( key );\n                let newRound;\n                if ( existingRound ) {\n                    Observer.set( existingRound.scope.state, this.spec.production, production );\n                    if ( mutation.type === 'deleteProperty' ) {\n                        // Fired above for the last time and now should die\n                        existingRound.abort( true ); // See below. And also Autorun.handleRestRounds()\n                    } else if ( existingRound.state === 'inert' ) {\n                        // Treat as new round\n                        existingRound.state = 'resuming';\n                        newRound = existingRound;\n                    }\n                } else if ( mutation.type !== 'deleteProperty' ) {\n                    // Create new round\n                    newRound = this.createRound( production );\n                }\n                if ( newRound && !this.terminated() ) {\n                    forSchedule.add( newRound );\n                }\n            }\n            if ( forSchedule.size ) { this.runtime.schedule( ...forSchedule ); }\n        };\n        this.once( Observer.observe( this.iteratee, handleMutations ) );\n    }\n    \n}", "\n/**\n * The modules registry\n */\nexport const registry = Object.create( null );", "\n/**\n * @imports\n */\nimport Observer from \"@webqit/observer\";\n\nexport default class State {\n\n    constructor( runtime ) {\n        Object.defineProperty( this, 'runtime', { value: runtime } );\n        const events = { statechange: () => { Observer.defineProperty( this, 'value', { value: runtime.flowControl.get( 'return' )?.arg, enumerable: true, configurable: true } ); }, };\n        for ( const name in events ) {\n            runtime.on( name, events[ name ] );\n            events[ name ]();\n        }\n        if ( runtime.$params.sourceType === 'module' ) { Object.defineProperty( this, 'exports', { value: runtime.exports } ); }\n    }\n    \n    dispose() { return this.runtime.abort(); }\n\n}\n", "\n/**\n * @import\n */\nimport Observer from '@webqit/observer';\nimport { _call, _await } from '../util.js';\nimport AutoIteration from './AutoIteration.js';\nimport { registry } from '../modules.js';\nimport Autorun from './Autorun.js';\nimport Scope from './Scope.js';\nimport State from './State.js';\n\nexport default class Runtime extends Autorun {\n\n    locations = [];\n    queue = new Set;\n    thread = [];\n\n    constructor( context, type, params, scope, closure ) {\n        super( context, type, {}/* spec */, -1, scope, closure );\n        const { $serial = 0, ...$params } = params;\n        this.$serial = $serial;\n        this.$params = $params;\n        // Random object\n        this.$objects = new Scope( undefined, 'objects' );\n        this.manage( this.$objects );\n        // Imports/exports\n        this.exports = Object.create( null );\n        this.$promises = { imports: [], exports: [] };\n        this.manage( () => {\n            Observer.deleteProperties( this.exports, Object.keys( this.exports ) );\n            this.$promises.imports.splice( 0 );\n            this.$promises.exports.splice( 0 );\n        } );\n    }\n\n    extractSource( serial, full = false ) {\n        const [ [ locStart, line, column ], [ locEnd ] ] = this.locations[ serial ];\n        const expr = this.$params.originalSource.slice( locStart, locEnd );\n        return full ? { expr, line, column } : expr;\n    }\n\n    throw( message, serials, ErrorClass = null, errorCode = null ) {\n        let error, $message = errorCode !== null ? `[${ errorCode }]: ${ message }` : message;\n        const cause = serials.map( serial => serial !== -1 && this.extractSource( serial, true ) ).filter( x => x );\n        cause.push( { source: this.$params.originalSource } );\n        error = new ( ErrorClass || Error )( $message, { cause } );\n        const fileName = this.$params.sourceType === 'module' && this.$params.experimentalFeatures !== false && this.$params.packageName || this.$params.fileName;\n        if ( fileName ) { error.fileName = fileName; }\n        if ( errorCode ) { error.code = errorCode; }\n        throw error;\n    }\n\n    push( autorun, callback = null ) {\n            // Push stack and execute\n            this.thread.unshift( autorun );\n            return autorun.execute( returnValue => {\n                this.thread.shift();\n                callback?.( returnValue );\n                return returnValue;\n            } );\n        try {\n        } catch( e ) {\n            // Show a nice error\n            if ( e.cause && e.trace ) throw e;\n            const message = `${ e.message || e }`;\n            this.throw( message, [ autorun.serial, autorun.context?.serial ], globalThis[ e.name ] );\n        }\n    }\n\n    get runtime() { return this; }\n\n    get nowRunning() { return this.thread[ 0 ]; }\n\n    schedule( ...autoruns ) {\n        // Determine if active beforehand\n        const isActive = this.queue.size;\n        for ( const autorun of autoruns ) { this.queue.add( autorun ); }\n        if ( isActive ) return;\n        // Event Loop\n        this.flowControlDirty = false;\n        return ( function nextTick( prevReturn, current ) {\n            // Find following...\n            let following;\n            for ( const autorun of this.queue ) {\n                // If autorun is higher in source ignore\n                // Or a parent autorun has already been run in this event loop which started by aborting all descendants\n                if ( current && current.order( autorun ) !== current || autorun.state === 'aborted' ) { this.queue.delete( autorun ); continue; }\n                // Get $autorun to be very next to _this.currentMicro\n                following = following ? following.order( autorun ) : autorun;\n                if ( !current ) { current = following; }\n            }\n            // Fire events\n            if ( !following ) { return ( this.fire( this.flowControlApplied()/* vs .dirty */ ? 'statechange' : 'reflection' ), prevReturn ); }\n            // Execute following...\n            following.abort();\n            // Evaluate and possibly await...\n            return this.push( following, returnValue => {\n                // Remove from queue\n                this.queue.delete( following );\n                // Next tick\n                return nextTick.call( this, returnValue, following );\n            } );\n        } ).call( this, undefined, this.nowRunning );\n    }\n\n    let( name, serial, closure ) { return this.var( name, serial, closure, 'let' ); }\n\n    var( name, serial, closure, kind = 'var' ) {\n        // Uninitialized declarations like: let a;\n        if ( !closure ) closure = () => undefined;\n        const complete = ( returnValue, autorun ) => {\n            let scope = kind === 'var' ? this.scope : autorun.scope;\n            // For scripts, hoist all the way to the global scope... or somewhere before where its been defined\n            while ( kind === 'var' && ![ 'module', 'function' ].includes( scope.type ) && !Observer.has( scope.state, name ) && scope.context ) {\n                scope = scope.context;\n            }\n            const symbolState = scope.symbols.get( name );\n            if ( symbolState && ( symbolState.kind !== kind || ( kind === 'let' && symbolState.serial !== serial ) ) ) {\n                throw new Error( `Identifier \"${ name }\" has already been declared.` );\n            }\n            scope.symbols.set( name, { serial, kind } );\n            Observer.set( scope.state, name, returnValue );\n            return returnValue;\n        };\n        return this.autorun( kind, { complete }, serial, closure );\n    }\n\n    update( name, closure, prefix = true ) {\n        // Find lexical scope\n        let lexicalScope = this.nowRunning?.scope || this.scope/* for updates at the root level; i.e. in static functions */;\n        while( lexicalScope && !Observer.has( lexicalScope.state, name ) ) { lexicalScope = lexicalScope.context; }\n        // Not found?\n        if ( !lexicalScope ) { throw new ReferenceError( `${ name } is not defined.` ); }\n        const valueBefore = Observer.get( lexicalScope.state, name );\n        return _call( closure, undefined, valueBefore, returnValue => {\n             // Set now!\n            Observer.set( lexicalScope.state, name, returnValue );\n            return prefix ? returnValue : valueBefore;\n        } );\n    }\n\n    ref( name, depth = 0 ) {\n        const nowRunning = this.nowRunning;\n        // Find lexical scope\n        let lexicalScope = nowRunning?.scope || this.scope/* for ref()s at the root level; i.e. in static functions */;\n        while( lexicalScope && !Observer.has( lexicalScope.state, name ) ) { lexicalScope = lexicalScope.context; }\n        // Not found?\n        if ( !lexicalScope ) { throw new ReferenceError( `${ name } is not defined.` ); }\n        // Bind now?\n        return this.autobind( nowRunning, lexicalScope.signal( name ), depth );\n    }\n\n    obj( val, depth ) { return this.autobind( this.nowRunning, this.$objects.signal( val ), depth ); }\n\n    autobind( nowRunning, baseSignal, depth ) {\n        // The below is such as when an iteraton item is deleted and thus aborted but has to run its last\n        if ( nowRunning.state === 'aborted' ) return baseSignal.state;\n        return ( function proxy( signal, depth ) {\n            // Do bindings first\n            if ( nowRunning ) {\n                // nowRunning won't be available for ref()s at the root level; i.e. in static functions\n                signal.subscribe( nowRunning );\n            }\n            // Return bare value here?\n            if ( !depth || !signal.state || typeof signal.state !== 'object' ) {\n                return typeof signal.state === 'function'\n                    // We're returning a proxy for functions instead of: signal.context.state[ signal.name ].bind( signal.context.state );\n                    ? Observer.proxy( signal.state, { membrane: signal } )\n                    : signal.state;\n            }\n            // Return dynamic value\n            let propertyAlreadyBound;\n            return Observer.proxy( signal.state, {}, traps => ( {\n                ...traps,\n                get( target, name, receiver = null ) {\n                    // Constructs are always going to for one property access: ref('a').b, and we need to prevent .c from creating a binding\n                    if ( propertyAlreadyBound ) { return traps.get( target, name, receiver ); }\n                    propertyAlreadyBound = true;\n                    return proxy( signal.signal( name ), depth - 1 );\n                },\n            } ) );\n        } )( baseSignal, depth );\n    }\n\n    autorun( type, ...rest ) {\n        let closure = rest.pop();\n        const serial = rest.pop();\n        const spec = rest.pop() || {};\n        const context = this.nowRunning || this;\n        // Handle certain types with their own class\n        let AutorunClass = Autorun;\n        if ( type === 'iteration' ) {\n            AutorunClass = AutoIteration;\n        }\n        // See if a subscope is needed\n        let scope = context.scope;\n        if ( [ 'block', 'round' ].includes( type ) ) { scope = new Scope( context.scope, type ); }\n        // Instantiate\n        const autorun = new AutorunClass( context, type, spec, serial, scope, closure );\n        // Create certain relationships\n        if ( type === 'round' ) {\n            // \"for\", \"while\", \"do-while\" rounds\n            context.add( spec.index, autorun );\n            if ( context.terminated() ) return;\n        }\n        if ( type === 'rest' ) {\n            // Declare a \"rest\" block for the context\n            context.restBlock = autorun;\n            // For now\n            if ( context.flowControlApplied() ) return;\n        }\n        // Push stack and execute\n        return this.push( autorun );\n    }\n\n    run( isStatefulFunction, closure ) {\n        const params = { $serial: this.$serial + 1, ...this.$params };\n        const context = this.nowRunning || this;\n        const scope = new Scope( context.scope, 'function' );\n        const subRuntime = new Runtime( context, 'function', params, scope, closure );\n        return subRuntime.execute( returnValue => {\n            if ( !isStatefulFunction ) return returnValue;\n            return new State( subRuntime );\n        } );\n    }\n\n    function( isDeclaration, isStatefulFunction, serial, $function ) {\n        // Declare in current scope\n        if ( isDeclaration ) {\n            const scope = this.nowRunning?.scope || this.scope;\n            Observer.set( scope.state, $function.name, $function );\n        }\n        // Metarise function\n        const _this = this;\n        Object.defineProperty( $function, 'toString', { value: function( $fSource = false ) {\n            if ( $fSource && isStatefulFunction ) return Function.prototype.toString.call( $function );\n            const originalSource = _this.extractSource( serial );\n            return originalSource.startsWith( 'static ' ) ? originalSource.replace( 'static ', '' ) : originalSource;\n        } } );\n        return $function;\n    }\n\n    class( isDeclaration, $class, methodsSpec ) {\n        // Declare in current scope\n        if ( isDeclaration ) {\n            const scope = this.nowRunning?.scope || this.scope;\n            Observer.set( scope.state, $class.name, $class );\n        }\n        // Metarise methods\n        methodsSpec.forEach( ( { name, static: isStatic, isStatefulFunction, serial } ) => {\n            this.function( false, isStatefulFunction, serial, isStatic ? $class[ name ] : $class.prototype[ name ] )\n        } );\n        return $class;\n    }\n\n    async import( ...args ) {\n        const source = args.pop();\n        const $source = typeof source === 'string' ? { source } : source;\n        let modules;\n        if ( $source.source.startsWith( '#' ) && this.$params.experimentalFeatures !== false && registry[ $source.source.slice( 1 ) ] ) {\n            modules = registry[ $source.source.slice( 1 ) ];\n        } else {\n            modules = ( async () => {\n                const moduleName = this.$params.sourceType === 'module' && this.$params.experimentalFeatures !== false && this.$params.packageName || this.$params.fileName;\n                try { return await import( $source.source ); } catch( e ) {\n                    if ( e.code === 'ERR_MODULE_NOT_FOUND' ) { this.throw( `Cannot find package \"${ $source.source }\"${ moduleName ? ` imported at \"${ moduleName }\"` : '' }.`, [ $source.serial ], null, e.code ); }\n                    throw e;\n                }\n            } )();\n            this.$promises[ $source.forExport ? 'exports' : 'imports' ].push( modules );\n        }\n        // Return for exporting?\n        if ( $source.forExport ) return modules;\n        // Assign imported modules to top-level scope\n        this.assignModules( args, this.scope.state, await modules, source.serial );\n    }\n\n    async export( ...args ) {\n        const source = !Array.isArray( args[ args.length - 1 ] ) ? args.pop() : null;\n        // Export declaration???\n        if ( !source && args[ 0 ].length === 2 && typeof args[ 0 ][ 1 ] !== 'number' ) {\n            for ( const [ value, alias ] of args ) { Observer.set( this.exports, alias, value ); }\n            return;\n        }\n        // Export from source or from top-level scope!\n        const modules = source ? await this.import( { ...source, forExport: true } ) : this.scope.state;\n        // Assign imported modules to exports object\n        this.assignModules( args, this.exports, modules, source?.serial );\n    }\n\n    assignModules( specifiers, target, source, sourceSerial = null ) {\n        const observeList = [];\n        for ( const [ local, serial, alias ] of specifiers ) {\n            if ( local === '*' && alias ) {\n                Observer.set( target, alias, source );\n                continue;\n            }\n            if ( !Observer.has( source, local ) ) { this.throw( `The requested module does not provide an export named \"${ local }\".`, [ serial, sourceSerial ] ); }\n            Observer.set( target, alias || local, Observer.get( source, local ) );\n            observeList.push( [ local, serial, alias ] );\n        }\n        if ( !observeList.length ) return;\n        this.once( Observer.observe( source, mutations => {\n            for ( const [ local, /* serial */, alias ] of observeList ) {\n                for ( const mutation of mutations ) {\n                    if ( local === '*' ) { Observer.set( target, mutation.key, mutation.value ); }\n                    else if ( mutation.key === local ) { Observer.set( target, alias || local, mutation.value ); }                    \n                }\n            }\n        } ) );\n    }\n\n    after( ...args ) {\n        if ( this.$params.sourceType === 'module' && this.$params.experimentalFeatures !== false && this.$params.packageName ) {\n            if ( this.$params.packageName.startsWith( '#' ) ) throw new Error( `Experimental hot package names cannot start with a \"#\".` );\n            registry[ this.$params.packageName ] = this.exports;\n            this.once( () => { delete registry[ this.$params.packageName ]; } );\n        }\n        return super.after( ...args );\n    }\n\n}", "\n/**\n * @imports\n */\nimport { _await } from '../util.js';\nimport { resolveParams } from '../params.js';\nimport Runtime from './Runtime.js';\nimport Scope from './Scope.js';\nimport State from './State.js';\n\nexport { State, Runtime }\n\nexport function $eval( sourceType, parseCompileCallback, source, params ) {\n    // params could have: env, functionParams, parserParams, compilerParams, runtimeParams\n    const { env, functionParams = [], packageName, fileName } = params;\n    const { parserParams, compilerParams, runtimeParams, } = resolveParams( params );\n\n    // Format source? Mode can be: function, async-function, script, async-script, module\n    if ( sourceType === 'module' ) {\n        parserParams.sourceType = sourceType;\n        parserParams.allowAwaitOutsideFunction = true;\n    } else if ( [ 'function', 'async-function' ].includes( sourceType ) ) {\n        // Design the actual stateful function\n        const body = `  ` + source.split( `\\n` ).join( `\\n  ` );\n        source = `return ${ sourceType === 'async-function' ? 'async ' : '' }function**(${ functionParams.join( ', ' ) }) {\\n${ body }\\n}`;\n        compilerParams.startStatic = true;\n    } else if ( ![ 'script', 'async-script' ].includes( sourceType ) ) {\n        throw new Error( `Unrecognized sourceType specified: \"${ sourceType }\".` );\n    }\n\n    // Proceed to parse-compile\n    compilerParams.sourceType = sourceType;\n    const compiledSource = parseCompileCallback( source, { parserParams, compilerParams } );\n    if ( compiledSource instanceof Promise && ![ 'async-function', 'async-script', 'module' ].includes( sourceType ) ) {\n        throw new Error( `Parse-compile can only return a Promise for sourceTypes: async-function, async-script, module.` );\n    }\n\n    // Proceed to eval\n    runtimeParams.sourceType = sourceType;\n    runtimeParams.packageName = packageName;\n    runtimeParams.fileName = fileName;\n    return _await( compiledSource, compiledSource => {\n        // Below, \"async-function\" would already has async in the returned function\n        // And no need to ask compiledSource.topLevelAwait\n        const asyncEval = [ 'async-script', 'module' ].includes( sourceType );\n        const $eval = ( params, source ) => {\n            if ( runtimeParams.compileFunction ) return runtimeParams.compileFunction( source, params );\n            return new ( asyncEval ? ( async function() {} ).constructor : Function )( ...params.concat( source ) );\n        };\n        const main = $eval( [ compiledSource.identifier + '' ], compiledSource + '' );\n        // There's always a global scope\n        let contextType = 'global', scope = new Scope( undefined, contextType, globalThis );\n        // Then this, for script scope, which may also directly reflect/mutate any provided \"env\"\n        if ( sourceType.endsWith( 'script' ) || env ) { contextType = 'env'; scope = new Scope( scope, contextType, env ); }\n        // Or this for module scope. And where \"env\" was provided, the \"env\" scope above too\n        if ( sourceType === 'module' ) { contextType = 'module'; scope = new Scope( scope, contextType ); }\n        const runtime = new Runtime( undefined, contextType, { ...runtimeParams, originalSource: compiledSource.originalSource }, scope, main );\n        return [ 'function', 'async-function' ].includes( sourceType )\n            ? runtime.execute() // Produces the actual stateful function designed above\n            : { runtime, compiledSource };\n    } );\n}\n", "\n/**\n * @imports\n */\nimport { _await } from './util.js';\nimport { $eval, State } from './runtime/index.js';\n\n/**\n * @Script\n */\nexport default class AbstractStatefulScript {\n    constructor( ...args ) {\n        const $static = this.constructor;\n        const params = typeof args[ args.length - 1 ] === 'object' ? args.pop() : {};\n        const source = args.pop() || '';\n        this.$program = $eval( $static.sourceType, $static.parseCompileCallback, source, params );\n    }\n\n    execute() {\n        return _await( this.$program, ( { runtime } ) => {\n            runtime.abort();\n            return runtime.execute( () => new State( runtime ) );\n        } );\n    }\n\n    toString( $fSource = false ) {\n        return _await( this.$program, ( { compiledSource } ) => {\n            if ( $fSource ) return compiledSource + '';\n            return compiledSource.originalSource;\n        } );\n    }\n}", "\n/**\n * @imports\n */\nimport * as StatefulJS from './index.async.js';\n\n// As globals\nif ( !globalThis.webqit ) { self.webqit = {}; }\nObject.assign( globalThis.webqit, StatefulJS );\n"],
  "mappings": "kPAAA,IAAAA,GAAA,GAAAC,GAAAD,GAAA,WAAAE,EAAA,0BAAAC,GAAA,wBAAAC,GAAA,mBAAAC,KCCO,IAAMC,GAAQ,CAAEC,KAAcC,IAAU,CAC3C,IAAMC,EAAWD,EAAK,IAAI,EAC1B,OAAKD,EAAU,YAAY,OAAS,gBAAyBG,EAAQH,EAAU,KAAM,GAAGC,CAAK,EAAGC,CAAS,EAClGA,EAAUF,EAAU,KAAM,GAAGC,CAAK,CAAE,CAC/C,EAEaE,EAAS,CAAEC,EAAcF,IAC3BE,aAAwB,QAAUA,EAAa,KAAMF,CAAS,EAAIA,EAAUE,CAAa,EAGvFC,GAAgBC,GACnB,OAAOA,GAAQ,UAAYA,GAAS,OAAOA,GAAQ,WAGtD,SAASC,GAAgBN,EAAO,CACnC,IAAMO,EAAS,OAAOP,EAAMA,EAAK,OAAS,IAAQ,SAAWA,EAAK,IAAI,EAAI,CAAC,EACrEQ,EAASR,EAAK,IAAI,GAAK,GAC7B,OAAAO,EAAO,eAAiBP,EACjB,CAAE,OAAAQ,EAAQ,OAAAD,CAAO,CAC5B,CAEO,IAAME,GAAQ,CAAC,EClBf,SAASC,MAAkBC,EAAa,CAC3C,IAAIC,EAAWC,EAAS,CAAE,cAAAC,GAAe,eAAAC,GAAgB,aAAAC,EAAa,EACtE,KAAOJ,EAAYD,EAAW,MAAM,GAAI,CACpC,GAAM,CACF,cAAeM,EAAiB,CAAC,EACjC,eAAgB,CAAE,iBAAkBC,EAAoB,CAAC,EAAG,uBAAwBC,EAA0B,CAAC,KAAMC,CAAgB,EAAI,CAAC,EAC1I,aAAcC,EAAgB,CAAC,CACnC,EAAIT,EACJC,EAAS,CACL,cAAe,CAAE,GAAGA,EAAO,cAAe,GAAGI,CAAe,EAC5D,eAAgB,CAAE,GAAGJ,EAAO,eAAgB,iBAAkB,CAAE,GAAGA,EAAO,eAAe,iBAAkB,GAAGK,CAAkB,EAAG,uBAAwB,CAAE,GAAGL,EAAO,eAAe,uBAAwB,GAAGM,CAAwB,EAAG,GAAGC,CAAgB,EAC/P,aAAc,CAAE,GAAGP,EAAO,aAAc,GAAGQ,CAAc,CAC7D,EACKV,EAAW,OACpB,CACA,OAAOE,CACX,CACO,IAAMG,GAAe,CACxB,YAAa,SACb,2BAA4B,GAC5B,0BAA2B,GAC3B,wBAAyB,GACzB,eAAgB,GAChB,UAAW,EACf,EACaD,GAAiB,CAC1B,iBAAkB,CAAE,YAAa,UAAY,EAC7C,uBAAwB,CAAC,EACzB,eAAgB,GAChB,UAAW,GACX,QAAS,CACb,EACaD,GAAgB,CACzB,WAAY,CAChB,ECtCA,IAAAQ,GAAA,GAAAC,GAAAD,GAAA,WAAAE,GAAA,UAAAC,GAAA,cAAAC,GAAA,qBAAAC,GAAA,mBAAAC,GAAA,qBAAAC,GAAA,mBAAAC,GAAA,QAAAC,EAAA,6BAAAC,GAAA,8BAAAC,GAAA,mBAAAC,GAAA,QAAAC,GAAA,cAAAC,GAAA,iBAAAC,GAAA,YAAAC,GAAA,YAAAC,GAAA,SAAAC,GAAA,sBAAAC,GAAA,WAAAC,GAAA,QAAAC,EAAA,mBAAAC,KCQe,SAARC,EAAiBC,EAAK,CAC5B,MAAO,CAAC,MAAM,QAAQA,CAAG,GAAK,OAAOA,GAAQ,UAAYA,CAC1D,CCFe,SAARC,EAAiBC,EAAK,CAC5B,OAAO,OAAOA,CACf,CCFe,SAARC,EAAiBC,EAAK,CAC5B,OAAO,MAAM,QAAQA,CAAG,CACzB,CCMe,SAARC,GAAiBC,EAAKC,EAAMC,EAAW,KAAM,CACnD,OAAQC,EAASF,CAAI,EAASD,EAAI,OAAOI,GAAQF,EAC9CD,EAAK,OAAOI,GAAQH,EAASE,EAAMC,CAAI,CAAC,EAAE,OAC1CJ,EAAK,QAAQG,CAAI,IAAM,EAC1B,EAHyB,CAAC,CAI3B,CCRe,SAARE,GAA2BC,KAAQC,EAAY,CAKlD,GAJK,WAAW,SAAU,WAAW,OAAS,CAAC,GAC1C,WAAW,OAAO,MACnB,OAAO,eAAe,WAAW,OAAQ,OAAQ,CAAC,MAAO,IAAIC,CAAa,CAAC,EAE3E,CAAC,UAAU,OAAQ,OAAO,WAAW,OAAO,KAChD,IAAIC,EAAQ,WAAW,OAAO,KAAK,IAAIH,CAAG,EACrCG,IACDA,EAAQ,IAAID,EACZ,WAAW,OAAO,KAAK,IAAIF,EAAKG,CAAK,GAEzC,IAAIC,EAAKC,EACT,KAAQD,EAAMH,EAAW,MAAM,IACtBI,EAASF,IAAU,EAAEA,EAAQA,EAAM,IAAIC,CAAG,KAC3CD,EAAQ,IAAID,EACZG,EAAO,IAAID,EAAKD,CAAK,GAG7B,OAAOA,CACX,CAEA,IAAMD,EAAN,cAA4B,GAAI,CAC5B,eAAgBI,EAAO,CACnB,MAAO,GAAGA,CAAK,EACf,KAAK,UAAY,IAAI,GACzB,CACA,IAAKC,EAAKC,EAAQ,CACd,IAAIC,EAAc,MAAM,IAAKF,EAAKC,CAAM,EACxC,YAAK,KAAM,MAAOD,EAAKC,EAAOD,CAAI,EAC3BE,CACX,CACA,OAAQF,EAAM,CACV,IAAIE,EAAc,MAAM,OAAQF,CAAI,EACpC,YAAK,KAAM,SAAUA,CAAI,EAClBE,CACX,CACA,IAAKF,EAAM,CACP,YAAK,KAAM,MAAOA,CAAI,EACf,MAAM,IAAKA,CAAI,CAC1B,CACA,IAAKA,EAAM,CACP,YAAK,KAAM,MAAOA,CAAI,EACf,MAAM,IAAKA,CAAI,CAC1B,CACA,UAAW,CAAE,OAAO,MAAM,KAAM,MAAM,KAAK,CAAE,CAAG,CAChD,QAASG,EAAMH,EAAKI,EAAW,CAC3B,IAAMC,EAAQ,CAAE,KAAAF,EAAM,IAAAH,EAAK,SAAAI,CAAS,EACpC,YAAK,UAAU,IAAKC,CAAM,EACnB,IAAM,KAAK,UAAU,OAAQA,CAAM,CAC9C,CACA,UAAWF,EAAMH,EAAKI,EAAW,CAC7B,GAAK,MAAM,QAASD,CAAK,GAAK,MAAM,QAASH,CAAI,EAC7C,MAAM,IAAI,MAAO,qDAAsD,EAE3E,QAAUK,KAAS,KAAK,UACf,EAAGC,GAAe,CAAEH,EAAM,GAAI,EAAGE,EAAM,IAAK,GAAKC,GAAe,CAAEN,EAAK,GAAI,EAAGK,EAAM,GAAI,GAAKA,EAAM,WAAaD,IACrH,KAAK,UAAU,OAAQC,CAAM,CAErC,CACA,KAAMF,EAAMH,KAAQD,EAAO,CAGvB,QAAUM,KAAS,KAAK,UACf,EAAGC,GAAe,CAAEH,EAAM,GAAI,EAAGE,EAAM,IAAK,GAAKC,GAAe,CAAEN,EAAK,GAAI,EAAGK,EAAM,GAAI,IAC7FA,EAAM,SAAU,GAAGN,CAAK,CAEhC,CACJ,EAEMO,GAAgB,CAAEC,EAAGC,IAClB,MAAM,QAASA,CAAE,EAAWC,GAAYF,EAAGC,CAAE,EAAE,OAC7CD,EAAE,SAAUC,CAAE,EC3EV,SAARE,EAAiBC,EAAK,CAC5B,OAAO,OAAOA,GAAQ,UACvB,CCHe,SAARC,GAAiBC,EAAK,CAC5B,OAAOA,IAAQ,MAAQA,IAAQ,EAChC,CCFe,SAARC,EAAiBC,EAAK,CAC5B,OAAO,UAAU,SAAWA,IAAQ,QAAa,OAAOA,EAAQ,IACjE,CCIe,SAARC,EAAiBC,EAAK,CAC5B,OAAO,MAAM,QAAQA,CAAG,GAAM,OAAOA,GAAQ,UAAYA,GAAQC,EAAgBD,CAAG,CACrF,CCCe,SAARE,GAAiBC,EAAK,CAC5B,OAAOC,GAAQD,CAAG,GAAKE,EAAaF,CAAG,GAAKA,IAAQ,IAASA,IAAQ,GAChEG,EAAcH,CAAG,GAAK,CAAC,OAAO,KAAKA,CAAG,EAAE,MAC9C,CCPe,SAARI,EAAiBC,EAAK,CAC5B,OAAOC,EAAgBD,CAAG,GAAMA,GAAO,CAAC,EAAE,SAAS,KAAKA,CAAG,IAAM,mBAClE,CCPe,SAARE,GAAiBC,EAAK,CAC5B,OAAOA,aAAe,QAAW,OAAOA,GAAQ,UAAYA,IAAQ,IACrE,CCKe,SAARC,GAAiBC,EAAK,CAC5B,MAAO,CAACC,GAAUD,CAAG,GAAK,CAACE,EAAaF,EAAI,MAAM,CACnD,CCAe,SAARG,EAAiBC,EAAKC,EAAa,GAAM,CAC/C,OAAIC,EAASF,CAAG,EACRA,EAEJ,CAACC,GAAcE,EAAUH,CAAG,EACxB,CAACA,CAAG,EAERA,IAAQ,IAASA,IAAQ,GAAKI,GAASJ,CAAG,EACtC,CAAC,EAELK,GAAaL,CAAG,EACZ,MAAM,UAAU,MAAM,KAAKA,CAAG,EAElCG,EAAUH,CAAG,EACT,OAAO,OAAOA,CAAG,EAElB,CAACA,CAAG,CACZ,CC5BO,IAAMM,EAAI,IAAKC,IAAUC,GAAY,eAAgB,GAAGD,CAAK,EAEvDE,EAAS,CAAEC,EAAOC,IAAcD,aAAiB,QAAUA,EAAM,KAAMC,CAAS,EAAIA,EAAUD,CAAM,EAEpGE,GAAQ,CAAC,ECHtB,IAAqBC,EAArB,KAAkC,CAUjC,YAAaC,EAAUC,EAAM,CAC5B,KAAK,SAAWD,EAChB,OAAO,OAAQ,KAAM,CAAE,GAAGC,EAAK,OAAQD,EAAS,MAAO,CAAE,EACpD,KAAK,OAAO,QAChB,KAAK,OAAO,OAAO,iBAAkB,QAAS,IAAM,KAAK,OAAO,CAAE,CAEpE,CAOA,QAAS,CACR,YAAK,QAAU,GACR,KAAK,SAAS,mBAAoB,IAAK,CAC/C,CACD,ECpBA,IAAqBE,EAArB,cAAkDC,CAAa,CAK9D,aAAc,CACb,MAAO,GAAG,SAAU,EACpB,KAAK,KAAK,oBAAsB,KAChC,OAAO,eAAgB,KAAM,kBAAmB,CAAE,MAAO,IAAI,eAAgB,CAAE,EAC/E,OAAO,eAAgB,KAAM,SAAU,CAAE,MAAO,KAAK,gBAAgB,MAAO,CAAE,EAC9EC,GAAU,kBAAmB,EAAG,KAAK,MAAO,CAC7C,CAOA,QAAS,CACR,KAAK,gBAAgB,MAAM,EAC3B,MAAM,OAAO,CACd,CAUA,KAAMC,EAAS,CACd,GAAK,KAAK,KAAK,iBAAmB,CAAC,CAAE,SAAU,cAAe,YAAa,EAAE,SAAU,KAAK,OAAO,UAAW,EAAI,OAClH,IAAIC,EAAUD,EAAQE,EAAS,KAAK,OAOpC,GANKA,IAAW,MAAcA,EAASC,EAAUD,EAAQ,EAAM,KAC9DD,EAAUD,EAAO,OAAQI,GAASF,EAAO,SAAUE,EAAM,GAAI,CAAE,GAE3D,KAAK,OAAO,OAChBH,EAAUA,EAAQ,OAAQG,GAASA,EAAM,OAAS,OAASA,EAAM,QAAUA,EAAM,QAAS,GAEtFH,EAAQ,OAAS,CACrB,GAAK,KAAK,KAAK,iBAAmB,KAAK,OAAO,aAAe,aAAe,CAC3E,KAAK,KAAK,gBAAgB,KAAM,GAAGA,CAAQ,EAC3C,MACD,CACA,KAAK,KAAK,gBAAkB,KAAK,OAAO,aAAe,SAAWA,EAAU,CAAC,EAC7E,IAAMI,EAAO,KAAK,SAAW,KAAY,MAAM,QAAS,KAAK,MAAO,EACjE,KAAK,KAAMJ,EAAS,IAAK,EACzB,KAAK,KAAMA,EAAS,GAAK,IAAK,EAEjC,OAAOK,EAAQD,EAAME,GAAO,CAC3B,IAAMC,EAAa,KAAK,KAAK,gBAE7B,OADA,OAAO,KAAK,KAAK,gBACZ,KAAK,OAAO,aAAe,eAC1BA,EAAW,OAAgB,KAAK,KAAK,oBAAoB,KAAMA,CAAW,EAEzED,CACR,CAAE,CACH,CACD,CACD,EC5DA,IAAqBE,EAArB,KAA8B,CAS7B,YAAaC,EAAS,CACrB,KAAK,OAASA,EACd,KAAK,QAAU,CAAC,CACjB,CAUA,gBAAiBC,EAAe,CAC/B,YAAK,QAAQ,KAAMA,CAAa,EACzBA,CACR,CASA,mBAAoBA,EAAe,CAClC,KAAK,QAAU,KAAK,QAAQ,OAAQC,GAAUA,IAAWD,CAAa,CACvE,CAYA,OAAO,aAAcE,EAAMH,EAAQI,EAAoB,GAAMC,EAAY,KAAK,YAAc,CAC3F,GAAK,CAACC,EAAeN,CAAO,EAAI,MAAM,IAAI,MAAO,oCAAqCO,EAAUP,CAAO,WAAa,EACpH,IAAIQ,EAAsB,KAC1B,OAAKH,GAAaI,EAAG,YAAa,EAAE,IAAKN,EAAO,IAAME,CAAU,IAC/DG,EAAsBC,EAAG,YAAa,EAAE,IAAKN,EAAO,IAAME,CAAU,EACpEF,GAAQ,IAAME,GAEV,CAACI,EAAGT,EAAQ,UAAW,EAAE,IAAKG,CAAK,GAAKC,GAC5CK,EAAGT,EAAQ,UAAW,EAAE,IAAKG,EAAM,IAAIK,EAAqBR,CAAO,CAAE,EAE/DS,EAAGT,EAAQ,UAAW,EAAE,IAAKG,CAAK,CAC1C,CAUA,OAAO,WAAYA,EAAME,EAAWG,EAAsB,KAAO,CAEhE,GADAL,GAAQ,IAAME,EACT,UAAU,SAAW,EAAI,OAAOI,EAAG,YAAa,EAAE,IAAKN,CAAK,EACjE,GAAK,EAAGK,EAAoB,qBAAqB,MAChD,MAAM,IAAI,MAAO,uCAAwC,KAAK,QAAUH,2BAAqC,KAAK,OAAS,EAE5HI,EAAG,YAAa,EAAE,IAAKN,EAAMK,CAAoB,EACjDA,EAAoB,YAAcH,CACnC,CACD,ECrFA,IAAqBK,EAArB,KAAgC,CAU/B,YAAaC,EAAQC,EAAM,CAE1B,GADA,KAAK,OAASD,EACT,CAAGC,EAAI,KAAS,MAAM,IAAI,MAAO,8CAA+C,EACrF,OAAO,OAAQ,KAAMA,CAAI,CAC1B,CACD,ECPA,IAAqBC,EAArB,cAA8CC,CAAS,CAEtD,OAAO,YAAaC,EAAQC,EAAoB,GAAMC,EAAY,KAAO,CACxE,OAAO,MAAM,aAAc,YAAa,GAAG,SAAU,CACtD,CAEA,OAAO,UAAWA,EAAWC,EAAsB,KAAO,CACzD,OAAO,MAAM,WAAY,YAAa,GAAG,SAAU,CACpD,CAKA,YAAaH,EAAS,CACrB,MAAOA,CAAO,EACd,KAAK,QAAU,CAAC,CACjB,CAKA,gBAAiBI,EAAQC,EAAMC,EAAS,CACvC,OAAO,MAAM,gBAAiB,IAAIC,EAAsB,KAAM,CAAE,OAAAH,EAAQ,KAAAC,EAAM,OAAAC,CAAO,CAAE,CAAE,CAC1F,CASA,KAAME,EAAQC,EAAwB,GAAQ,CAC7C,GAAK,KAAK,QAAQ,OAAS,CAC1B,KAAK,QAAS,GAAI,OAAO,KAAM,GAAGD,CAAO,EACzC,MACD,CACA,IAAIE,EACJ,KAAK,QAAQ,QAASC,GAAY,CACjC,GAAKF,GAAyB,CAACE,EAAS,OAAO,oBAAsB,CACpED,EAAmBA,GAAoBF,EAAO,IAAKI,GAAK,CACvD,GAAI,CAAE,OAAAZ,EAAQ,MAAAa,EAAO,SAAAC,EAAU,KAAAC,KAASC,CAAQ,EAAIJ,EACpD,OAAAC,EAAQA,EAAM,IAAMA,EAAM,IAAI,EAAIA,EAAM,MACxCC,EAAWA,GAAU,IAAMA,EAAS,IAAI,EAAIA,GAAU,MAC/C,IAAIG,EAAYjB,EAAQ,CAAE,KAAM,MAAO,MAAAa,EAAO,SAAAC,EAAU,GAAGE,CAAQ,CAAE,CAC7E,CAAE,EACFL,EAAS,KAAMD,CAAiB,EAChC,MACD,CACAC,EAAS,KAAMH,CAAO,CACvB,CAAE,CACH,CASA,MAAOU,EAAW,CACjB,KAAK,QAAQ,QAAS,CAAE,QAAS,CAAE,GAAG,KAAK,OAAQ,EAAG,OAAQ,CAAC,CAAE,CAAE,EACnE,IAAMC,EAAcD,EAAS,EAC7B,OAAOE,EAAQD,EAAaA,GAAe,CAC1C,IAAME,EAAQ,KAAK,QAAQ,MAAM,EACjC,OAAKA,EAAM,OAAO,QACjBA,EAAM,QAAQ,QAASV,GAAYA,EAAS,KAAMU,EAAM,MAAO,CAAE,EAE3DF,CACR,CAAE,CACH,CAED,EC3EA,IAAqBG,EAArB,cAA+CC,CAAa,CAY3D,KAAMC,EAAYC,EAAMC,EAAW,CAClC,OAAK,KAAK,SAAW,CAAC,KAAK,MAAOF,EAAW,MACrCC,EAAM,GAAG,MAAM,UAAU,MAAM,KAAM,UAAW,CAAE,CAAE,GAE5D,KAAK,QAAU,GACR,KAAK,MAAOD,EAAW,MAAQA,EAAYE,EAAU,IAAKC,KAChE,KAAK,QAAU,GACRF,EAAM,GAAGE,CAAK,EACpB,EACH,CACD,ECrBA,IAAqBC,EAArB,cAA2CC,CAAS,CAEnD,OAAO,YAAaC,EAAQC,EAAoB,GAAMC,EAAY,KAAO,CACxE,OAAO,MAAM,aAAc,QAAS,GAAG,SAAU,CAClD,CAEA,OAAO,UAAWA,EAAWC,EAAsB,KAAO,CACzD,OAAO,MAAM,WAAY,QAAS,GAAG,SAAU,CAChD,CAKA,gBAAiBC,EAAM,CACtB,OAAO,MAAM,gBAAiB,IAAIC,EAAmB,KAAMD,CAAI,CAAE,CAClE,CAUA,KAAME,EAAYC,EAAiB,KAAO,CACzC,IAAMC,EAAQ,KACd,OAAS,SAASC,EAAMC,KAAUC,EAAQ,CACzC,IAAMC,EAAeJ,EAAM,QAASE,GACpC,OAAKE,EACGA,EAAa,KAAMN,EAAY,IAAKO,IACnCJ,EAAMC,EAAQ,EAAG,GAAGG,CAAK,EACtB,GAAGF,CAAM,EAEdJ,EAAiBA,EAAgBD,EAAY,GAAGK,CAAM,EAAIA,EAAO,EACzE,EAAK,CAAE,CACR,CACD,EClDA,IAAAG,GAAA,GAAAC,GAAAD,GAAA,iBAAAE,GAAA,UAAAC,GAAA,kBAAAC,GAAA,YAAAC,KAqBO,SAASC,GAAaC,EAAQC,EAAOC,EAAS,CAAC,EAAI,CACtDF,EAASG,GAAeH,CAAO,EAC/B,IAAMI,EAAoBC,EAAGL,EAAQ,mBAAoB,EAEzD,SAASM,EAAmBC,EAAO,CAC/B,IAAIC,EAAYC,EAAQT,EACxB,GACIQ,EAAa,OAAO,yBAA0BC,EAAOF,CAAK,QACpD,CAACC,IAAgBC,EAAQ,OAAO,eAAgBA,CAAM,IAChE,OAAOD,EACD,CAAE,MAAAC,EAAO,WAAAD,CAAW,EACpB,CAAE,WAAY,CAAE,MAAO,OAAW,aAAc,GAAM,WAAY,GAAM,SAAU,EAAK,CAAE,CACnG,CAEA,SAASE,EAAiBH,EAAO,CAC7B,GAAKH,EAAkB,IAAKG,EAAO,EAAG,EAAI,MAAO,GAGjD,IAAMI,EAA0BL,EAAmBC,CAAK,EACxDI,EAAwB,SAAW,SAAUC,EAAqB,GAAQ,CACtE,OAAKA,EAA4B,KAAK,WAC/B,KAAK,WAAW,IAAM,KAAK,WAAW,IAAI,EAAI,KAAK,WAAW,KACzE,EACAD,EAAwB,SAAW,SAAUE,EAAOD,EAAqB,GAAQ,CAE7E,GADA,KAAK,MAAQ,GACRA,EAAqB,CAAE,KAAK,WAAaC,EAAO,MAAQ,CAC7D,OAAO,KAAK,WAAW,IAAM,KAAK,WAAW,IAAKA,CAAM,IAAM,IAAU,KAAK,WAAW,MAAQA,EAAO,GAC3G,EACAF,EAAwB,OAAS,UAAW,CACxC,IAAMG,EAAoB,OAAO,yBAA0Bd,EAAQO,CAAK,EACxE,OAAOO,GAAmB,MAAQC,EAAgB,KAC3CD,GAAmB,MAAQC,EAAgB,KAC3CX,EAAkB,IAAKG,EAAO,EAAG,IAAM,IAClD,EACAI,EAAwB,QAAU,UAAW,CACzC,OAAM,KAAK,OAAO,GACX,KAAK,OAAS,KAAK,QAAUX,GAAc,CAAC,KAAK,OAAS,CAAC,KAAK,MAAY,OAAOA,EAAQO,GAC3F,OAAO,eAAgBP,EAAQO,EAAM,KAAK,UAAW,EAC5DH,EAAkB,OAAQG,EAAO,EAAG,EAC7B,IAJsB,EAKjC,EACAH,EAAkB,IAAKG,EAAO,GAAII,CAAwB,EAG1D,GAAM,CAAE,WAAAK,EAAa,EAAK,EAAIL,EAAwB,WAChDI,EAAkB,CAAE,WAAAC,EAAY,aAAc,EAAK,GAElD,UAAWL,EAAwB,YAAgBA,EAAwB,WAAW,OACzFI,EAAgB,IAAM,SAAWF,EAAQ,CAAE,OAAOI,EAAK,KAAMV,EAAMM,EAAOX,CAAO,CAAG,IAEjF,UAAWS,EAAwB,YAAgBA,EAAwB,WAAW,OACzFI,EAAgB,IAAM,UAAY,CAAE,OAAOG,EAAK,KAAMX,EAAML,CAAO,CAAG,GAE1E,GAAI,CACA,cAAO,eAAgBF,EAAQO,EAAMQ,CAAgB,EAC9C,EACX,MAAE,CACE,OAAAX,EAAkB,OAAQG,EAAO,EAAG,EAC7B,EACX,CACJ,CAIA,IAAMY,GAHS,MAAM,QAASlB,CAAM,EAAIA,EACpCA,IAAU,OAAY,OAAO,KAAMD,CAAO,EAAI,CAAEC,CAAM,GAElC,IAAKS,CAAgB,EAC7C,OAAOT,IAAU,QAAa,MAAM,QAASA,CAAM,EAC7CkB,EACAA,EAAU,EACpB,CAWO,SAASC,GAAepB,EAAQC,EAAOC,EAAS,CAAC,EAAI,CACxDF,EAASG,GAAeH,CAAO,EAC/B,IAAMI,EAAoBC,EAAGL,EAAQ,mBAAoB,EACzD,SAASqB,EAAmBd,EAAO,CAC/B,OAAMH,EAAkB,IAAKG,EAAO,EAAG,EAChCH,EAAkB,IAAKG,EAAO,EAAG,EAAE,QAAQ,EADA,EAEtD,CAIA,IAAMY,GAHS,MAAM,QAASlB,CAAM,EAAIA,EACpCA,IAAU,OAAY,OAAO,KAAMD,CAAO,EAAI,CAAEC,CAAM,GAElC,IAAKoB,CAAkB,EAC/C,OAAOpB,IAAU,QAAa,MAAM,QAASA,CAAM,EAC7CkB,EACAA,EAAU,EACpB,CAcO,SAASG,GAAOtB,EAAQE,EAAS,CAAC,EAAGqB,EAAiB,OAAY,CAErE,IAAMC,EAAiBrB,GAAeH,CAAO,EAE7C,GAAK,OAAOE,EAAO,UAAa,UAAY,MAAM,IAAI,MAAO,0DAA2D,EACxH,GAAKA,EAAO,UAAYG,EAAGmB,EAAgB,aAAc,EAAE,IAAKtB,EAAO,QAAS,EAAM,OAAOG,EAAGmB,EAAgB,aAAc,EAAE,IAAKtB,EAAO,QAAS,EACrJ,IAAMuB,EAAQ,CACV,MAAOzB,EAAQ0B,EAAcC,EAAgB,CACzC,GAAK,MAAM,QAASD,CAAa,EAAI,CAEjC,IAAME,EAAezB,GAAeuB,CAAa,EACjD,OAAArB,EAAGuB,CAAa,EAAE,IAAK,UAAWA,EAAa,MAAO,EAE/CC,GAAOD,EAAc,IAAOE,GAAO9B,EAAQ0B,EAAcC,CAAc,CAAE,CACpF,CACA,OAAOG,GAAO9B,EAAQ0B,EAAcC,CAAc,CACtD,EACA,UAAY,CAAE3B,EAAQ2B,EAAeI,EAAY,OAAUC,GAAWhC,EAAQ2B,EAAeI,EAAW7B,CAAO,EAC/G,eAAiB,CAAEF,EAAQiC,EAAaC,IAAgBC,GAAgBnC,EAAQiC,EAAaC,EAAYhC,CAAO,EAChH,eAAgB,CAAEF,EAAQiC,IAAiBG,GAAgBpC,EAAQiC,EAAa/B,CAAO,EACvF,IAAK,CAAEF,EAAQiC,EAAaI,EAAW,OAAU,CAC7C,IAAMC,EAAU,CAAE,GAAGpC,EAAQ,SAAAmC,CAAS,EACjC,MAAM,QAASrC,CAAO,GAAKiC,IAAgB,UAAY5B,EAAGL,CAAO,EAAE,IAAK,SAAU,IACnFsC,EAAQ,WAAajC,EAAGL,CAAO,EAAE,IAAK,SAAU,GAEpD,IAAMuC,EAAcrB,EAAKlB,EAAQiC,EAAaK,CAAQ,EACtD,OAAK,MAAM,QAAStC,CAAO,GAAK,OAAOuC,GAAgB,WAE5CjB,GAAOiB,EAAa,CAAE,GAAGrC,EAAQ,SAAUmC,CAAmG,CAAE,EAEpJE,CACX,EACA,yBAA0B,CAAEvC,EAAQiC,IAAiBO,GAA0BxC,EAAQiC,EAAa/B,CAAO,EAC3G,eAAgBF,GAAUyC,GAAgBzC,EAAQE,CAAO,EACzD,IAAK,CAAEF,EAAQiC,IAAiBS,GAAK1C,EAAQiC,EAAa/B,CAAO,EACjE,aAAcF,GAAU2C,GAAc3C,EAAQE,CAAO,EACrD,QAASF,GAAU4C,GAAS5C,EAAQE,CAAO,EAC3C,kBAAmBF,GAAU6C,GAAmB7C,EAAQE,CAAO,EAC/D,IAAK,CAAEF,EAAQiC,EAAapB,EAAOwB,EAAW,OAAU,CACpD,IAAMC,EAAU,CAAE,GAAGpC,EAAQ,SAAAmC,CAAS,EACtC,OAAK,MAAM,QAASrC,CAAO,GAAKiC,IAAgB,WAC5CK,EAAQ,cAAgBjC,EAAGL,CAAO,EAAE,IAAK,SAAU,EACnDK,EAAGL,CAAO,EAAE,IAAK,UAAWa,CAAM,GAE/BI,EAAKjB,EAAQiC,EAAapB,EAAOyB,CAAQ,CACpD,EACA,eAAgB,CAAEtC,EAAQ8C,IAAeC,GAAgB/C,EAAQ8C,EAAW5C,CAAO,CACvF,EAEM8C,EAASzB,IAAkBE,CAAM,GAAKA,EAEtCwB,EAAS,IAAI,MAAOzB,EAAgBwB,CAAO,EACjD,OAAK9C,EAAO,UAAaG,EAAGmB,EAAgB,aAAc,EAAE,IAAKtB,EAAO,SAAU+C,CAAO,EACzF5C,EAAG4C,CAAO,EAAE,IAAKA,EAAQzB,CAAe,EACpCyB,CACR,CASO,SAASC,GAASlD,EAAS,CAE9B,OAAOK,EAAGL,CAAO,EAAE,IAAKA,CAAO,GAAKA,CACxC,CAWA,SAASG,GAAeH,EAAS,CAChC,GAAK,CAACA,GAAU,CAACmD,EAAenD,CAAO,EAAI,MAAM,IAAI,MAAM,gCAAgC,EAC3F,OAAOkD,GAASlD,CAAO,CACxB,CvB5LA,IAAMoD,GAAN,cAAmB,KAAM,CAAC,EACnB,SAASC,MAASC,EAAW,CAChC,OAAO,IAAIF,GAAM,GAAGE,CAAS,CACjC,CAeO,SAASC,GAAQC,EAAQH,EAAMI,EAAUC,EAAQC,GAAKA,EAAGC,EAAS,CAAC,EAAI,CAC1E,GAAK,EAACP,EAAK,OACX,OAAS,SAASQ,EAAKL,EAAQH,EAAMS,EAAU,CAC3C,IAAMC,EAAUV,EAAMS,EAAQ,OACxBE,EAAgBF,EAAQ,QAAUT,EAAK,OAAS,EACtD,OAAKG,aAAkBS,GAAcT,EAAO,OAAS,MAEjDM,EAAU,CAAE,GAAGA,EAAS,MAAO,QAAS,EAChCA,EAAQ,QAAU,WAE1BA,EAAU,CAAE,GAAGA,EAAS,MAAO,CAACE,CAAc,GAG3CP,EAAUD,EAAQO,EAAS,CAAEG,KAAWC,IAAU,CAErD,IAAMC,EAAWC,GAAQ,CACbA,aAAgBJ,IACxBI,EAAK,KAAO,CAAEA,EAAK,GAAI,EAClBb,aAAkBS,IACnBI,EAAK,KAAOb,EAAO,KAAK,OAAQa,EAAK,GAAI,EACzC,OAAO,eAAgBA,EAAM,UAAW,CAAE,IAAK,IAAMb,EAAQ,aAAc,EAAK,CAAE,GAE1F,EACMc,EAAUJ,GAAU,CACtB,IAAMK,EAASC,EAAYN,EAAuD,EAAM,EACxF,OAAOO,EAAQF,EAAgCA,GAAU,CAChDL,aAAkBD,EACnBC,EAAO,MAAQK,EAEfL,EAASK,EAEb,IAAMG,EAAQP,EAAM,IAAO,CAAC,EAC5B,OAAON,EAAKK,EAAQb,EAAM,CAAE,GAAGS,EAAS,GAAGY,EAAO,MAAOZ,EAAQ,MAAQ,CAAG,CAAE,CAClF,CAAE,CACN,EAEA,OAAKa,GAAaZ,CAAQ,GAAK,MAAM,QAASG,CAAO,GACjDA,EAAO,QAASE,CAAS,EACpBJ,EAAuBN,EAAOQ,EAAQ,GAAGC,CAAK,EAC5CD,EAAO,IAAKI,CAAQ,IAG/BF,EAAUF,CAAO,EACZF,EAAuBN,EAAOQ,EAAQ,GAAGC,CAAK,EAC5CG,EAASJ,CAAO,EAE3B,EAAGJ,CAAQ,CACf,EAAKN,EAAQH,EAAK,MAAO,CAAE,EAAG,CAAE,GAAGO,EAAQ,MAAO,CAAE,CAAE,CAC1D,CAYO,SAASgB,GAASpB,EAAQqB,EAAMpB,EAAUG,EAAS,CAAC,EAAI,CAO9D,GALGJ,EAASgB,EAAYhB,EAAQ,CAACI,EAAO,KAAM,EACzCkB,EAAa,UAAW,EAAI,IAC1B,CAAE,CAAErB,EAAUG,EAAS,CAAC,CAAE,EAAI,UAC9BiB,EAAO,KAET,CAACC,EAAarB,CAAS,EAAI,MAAM,IAAI,MAAO,gCAAiCsB,EAAUtB,CAAS,WAAa,EAC/G,GAAKoB,aAAgBzB,GAAO,OAAOG,GAAQC,EAAQqB,EAAMD,GAASnB,EAAUG,CAAO,EAInF,GAFAA,EAAS,CAAE,GAAGA,EAAQ,WAAY,EAAK,EACvC,OAAOA,EAAO,KACT,CAACoB,EAAexB,CAAO,EAAI,OAAOI,EAAO,OAASqB,EAAKzB,EAAQqB,EAAMpB,EAAUG,CAAO,EAE3F,IAAMsB,EAAOC,GAAM3B,EAAQqB,EAAMpB,EAAUG,CAAO,EAClD,OAAKA,EAAO,MACDqB,EAAKzB,EAAQqB,EAAMK,EAAMtB,CAAO,EAEpCsB,EAAK,CAChB,CAWO,SAASE,GAAW5B,EAAQ6B,EAAOzB,EAAS,CAAC,EAAI,CAEpD,OAAAJ,EAASgB,EAAYhB,CAAO,EACtB8B,EAAWD,CAAM,IACnB,CAAY,CAAU,CAAa,CAAEzB,EAAS,CAAC,CAAE,EAAI,UACrDyB,EAAQ,CAAE,CAAE,UAAW,IAAO,UAAW,EAAI,GAG1CE,EAAc,YAAa/B,EAAQ,GAAMI,EAAO,SAAU,EAAE,gBAAiB,CAAE,MAAAyB,EAAO,OAAAzB,CAAO,CAAE,CAC1G,CAcO,SAAS4B,GAA0BhC,EAAQqB,EAAMpB,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CACrF,OAAO6B,EAAMjC,EAAQ,2BAA4B,CAAE,IAAKqB,CAAK,EAAGpB,EAAUG,CAAO,CACrF,CAaO,SAAS8B,GAA2BlC,EAAQqB,EAAMpB,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CACtF,OAAO6B,EAAMjC,EAAQ,4BAA6B,CAAE,IAAKqB,CAAK,EAAGpB,EAAUG,CAAO,CACtF,CAWO,SAAS+B,GAAgBnC,EAAQC,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CACrE,OAAO6B,EAAMjC,EAAQ,iBAAkB,CAAC,EAAGC,EAAUG,CAAO,CAChE,CAWO,SAASgC,GAAcpC,EAAQC,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CACnE,OAAO6B,EAAMjC,EAAQ,eAAgB,CAAC,EAAGC,EAAUG,CAAO,CAC9D,CAWO,SAASiC,GAASrC,EAAQC,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CAC9D,OAAO6B,EAAMjC,EAAQ,UAAW,CAAC,EAAGC,EAAUG,CAAO,CACzD,CAYO,SAASkC,GAAKtC,EAAQqB,EAAMpB,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CAChE,OAAO6B,EAAMjC,EAAQ,MAAO,CAAE,IAAKqB,CAAK,EAAGpB,EAAUG,CAAO,CAChE,CAYO,SAASqB,EAAKzB,EAAQqB,EAAMpB,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CAEhE,IAAImC,EACEC,EAAiBxB,EAAYhB,EAAQ,CAACI,EAAO,KAAM,EAGzD,OAFK0B,EAAW7B,CAAS,EAAM,CAAEG,EAAQH,CAAS,EAAI,CAAEA,EAAUE,GAAKA,CAAE,EAC/DC,EAAO,OAASmC,EAAS,IAC9BlB,aAAgBzB,GAAcG,GAAQyC,EAAgBnB,EAAMI,EAAKxB,EAAUG,CAAO,EAEhFqC,GAAcD,EAAgBnB,EAAMqB,GAAS,CAChD,IAAMC,EAAU,CAAE,GAAGD,CAAM,EAC3B,OAAS,SAASE,EAAMC,EAASC,EAAQC,EAAQ,CAC7C,GAAK,CAACD,EAAO,OAAS,OAAOC,EAAOF,CAAQ,EAC5C,IAAMxB,EAAOyB,EAAO,MAAM,EAC1B,GAAK,CAAC,CAAE,SAAU,SAAU,QAAS,EAAE,SAAU,OAAOzB,CAAK,EACzD,MAAM,IAAI,MAAO,qBAAsBA,YAAiB,EAG5D,SAAS2B,EAAYC,EAAYC,EAAQ,OAAY,CACjD,IAAMC,EAAQD,IAAWD,EAAW,MAAQC,EAAON,EAAM,CAAE,GAAGC,EAASzC,EAAO,MAAQA,EAAO,WAAa6C,EAAaC,CAAM,EAAqDJ,EAAQC,CAAM,GAChM,GAAK,UAAU,OAAS,EAAI,OAAOI,EAAOD,CAAM,EAChD,IAAME,EAAoBC,EAAGb,EAAgB,oBAAqB,EAAM,EAClEc,EAAkBF,GAAqBA,EAAkB,IAAKH,EAAW,IAAM,EAAG,EACxF,GAAKK,GAAmBA,EAAgB,OAAO,EAC3C,OAAOH,EAAOG,EAAgB,SAAUlD,EAAO,kBAAmB,CAAE,EAExE,GAAKA,EAAO,mBAAqB,CAC7B,IAAMS,EAAO,OAAO,yBAA0B2B,EAAgBS,EAAW,GAAI,EAC7E,MAAK,eAAgB7C,GAAW,UAAWS,IAASA,EAAK,MAAQT,EAAO,YACjE+C,EAAOtC,CAAK,CACvB,CACA,MAAK,eAAgBT,EAAkB+C,EAAO/C,EAAO,UAAW,EACzD+C,EAAO,QAAQ,IAAKX,EAAgBS,EAAW,IAAK,GAAK7C,EAAO,SAAW,CAAEA,EAAO,QAAS,EAAI,CAAC,CAAI,CAAE,CACnH,CAEA,IAAM6C,EAAa,IAAIxC,EAAY+B,EAAgB,CAC/C,KAAM,MACN,IAAKnB,EACL,MAAO,OACP,QAAAsB,CACJ,CAAE,EACF,GAAK,CAACnB,EAAegB,CAAe,EAAI,OAAOI,EAAM,CAAE,GAAGC,EAASzC,EAAO,MAAQA,EAAO,WAAa6C,EAAa,MAAU,EAAGH,EAAQC,CAAM,EAC9I,IAAMQ,EAAmBxB,EAAc,YAAaS,EAAgB,GAAOpC,EAAO,SAAU,EAC5F,OAAKmD,EACMA,EAAiB,KAAMN,EAAYD,CAAW,EAElDA,EAAYC,CAAW,CAClC,EAAK,CAAC,EAAGP,EAAM,MAAO,CAAE,EAAGG,GAAW,CAClC,IAAMW,EAAWrC,GAAaE,CAAiB,EAAIwB,EAAUA,EAAS,GACtE,OAAKN,GAAUf,EAAegB,CAAe,EAC5Bb,GAAMa,EAAgBnB,EAAMpB,EAAUG,CAAO,EAC7CoD,CAAS,EAEnBvD,EAAUuD,CAAS,CAC9B,CAAE,CACN,EAAGpD,CAAO,CACd,CAaO,SAASqD,GAAOzD,EAAQ0D,EAAUtD,EAAS,CAAC,EAAI,CACnD,OAAAJ,EAASgB,EAAYhB,CAAO,EACrB2D,EAAiB,YAAa3D,EAAQ,GAAMI,EAAO,SAAU,EAAE,MAAOsD,CAAS,CAC1F,CAcO,SAASE,EAAK5D,EAAQqB,EAAM6B,EAAOjD,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAGyD,EAAM,GAAQ,CAEpF,IAAMrB,EAAiBxB,EAAYhB,CAAO,EACtC8D,EAAU,CAAE,CAAEzC,EAAM6B,CAAM,CAAE,EAC3BpB,EAAWT,CAAK,IACjB,CAAY,CAAU,CAAEpB,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAGyD,EAAM,EAAM,EAAI,UACxEC,EAAU,OAAO,QAASzC,CAAK,GAE9BS,EAAW7B,CAAS,IAAM,CAAE4D,EAAKzD,EAAQH,CAAS,EAAI,CAAE,OAAOG,GAAW,UAAYA,EAAS,GAAOH,EAAUE,GAAKA,CAAE,GAE5H,IAAMwC,EAAUmB,EAAQ,IAAK,CAAE,CAAEzC,CAAK,IAAOA,CAAK,EAClD,OAAS,SAASuB,EAAMmB,EAAaD,EAASf,EAAQ,CAClD,GAAK,CAACe,EAAQ,OAAS,OAAOf,EAAOgB,CAAY,EACjD,GAAM,CAAE1C,EAAM6B,CAAM,EAAIY,EAAQ,MAAM,EAEtC,SAASE,EAAYf,EAAYgB,EAAS,OAAY,CAClD,IAAMd,EAAQc,KAAYhB,EAAW,OAASgB,GAAQrB,EAAMmB,EAAY,OAAQd,CAAW,EAAGa,EAASf,CAAM,GAC7G,GAAK,UAAU,OAAS,EAAI,OAAOI,EAAOF,EAAYgB,CAAO,EAC7D,IAAMb,EAAoBC,EAAGb,EAAgB,oBAAqB,EAAM,EAClEc,EAAkBF,GAAqBA,EAAkB,IAAKH,EAAW,IAAM,EAAG,EACxF,OAAKA,EAAW,OAAS,kBAChBK,GAAmB,CAACA,EAAgB,QAAQ,GAAIH,EAAO,EAAM,EAClE,OAAO,eAAgBX,EAAgBS,EAAW,IAAKA,EAAW,KAAM,EACjEE,EAAO,EAAK,GAElBG,GAAmBA,EAAgB,OAAO,EACpCH,EAAOG,EAAgB,SAAUL,EAAW,KAAM,CAAE,EAExDE,EAAO,QAAQ,IAAKX,EAAgBS,EAAW,IAAKA,EAAW,KAAM,CAAE,CAClF,CAEA,SAAShB,EAAMiC,EAAUC,EAAW,CAChC,GAAK/D,EAAO,MAAQ8C,IAAUiB,EAAW,OAAOvB,EAAMmB,EAAaD,EAASf,CAAM,EAClF,IAAME,EAAa,IAAIxC,EAAY+B,EAAgB,CAC/C,KAAMqB,EAAM,iBAAmB,MAC/B,IAAKxC,EACL,MAAA6B,EACA,SAAAgB,EACA,SAAAC,EACA,QAAS,CAAE,GAAGxB,CAAQ,EACtB,OAAQvC,EAAO,MACnB,CAAE,EACImD,EAAmBxB,EAAc,YAAaS,EAAgB,GAAOpC,EAAO,SAAU,EAC5F,OAAOmD,EACDA,EAAiB,KAAMN,EAAYe,CAAW,EAC9CA,EAAYf,CAAW,CACjC,CAEA,OAAOX,GAAKE,EAAgBnB,EAAM+C,GAAU,CACxC,GAAK,CAACA,EAAS,OAAOnC,EAAMmC,CAAO,EACnC,IAAM9D,EAAU,CAAE,GAAGF,EAAQ,mBAAoByD,CAAI,EACrD,MAAK,kBAAmBzD,IAAWE,EAAQ,WAAaF,EAAO,eACxDqB,EAAKe,EAAgBnB,EAAM8C,GAAYlC,EAAMmC,EAAQD,CAAS,EAAG7D,CAAQ,CACpF,EAAGF,CAAO,CAEd,EAAK,CAAC,EAAG0D,EAAQ,MAAO,CAAE,EAAGC,GAAe,CACxC,IAAMR,EAAmBI,EAAiB,YAAanB,EAAgB,GAAOpC,EAAO,SAAU,EAC/F,OAAKmD,GAAmBA,EAAiB,KAAMQ,EAAaF,CAAI,EACzD5D,EACHkB,GAAaE,CAAiB,EAAI0C,EAAY,IAAKM,GAAOA,EAAI,MAAO,EAAIN,EAAa,IAAK,MAC/F,CACJ,CAAE,CACN,CAaO,SAASO,GAAgBtE,EAAQqB,EAAM4B,EAAYhD,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CACvF,OAAOwD,EAAK5D,EAAQqB,EAAM4B,EAAYhD,EAAUG,EAAQ,EAAY,CACxE,CAaO,SAASmE,GAAkBvE,EAAQ+D,EAAa9D,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CACpF,OAAOwD,EAAK5D,EAAQ+D,EAAa9D,EAAUG,EAAQ,EAAY,CACnE,CAYO,SAASoE,GAAgBxE,EAAQqB,EAAMpB,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CAE3EJ,EAASgB,EAAYhB,CAAO,EACvB8B,EAAW7B,CAAS,IAAM,CAAEG,EAAQH,CAAS,EAAI,CAAEA,EAAUE,GAAKA,CAAE,GAEzE,IAAMuC,EAAQ+B,EAAUpD,EAAM,EAAM,EAAGsB,EAAU,CAAE,GAAGD,CAAM,EAC5D,OAAS,SAASE,EAAMmB,EAAarB,EAAOK,EAAQ,CAChD,GAAK,CAACL,EAAM,OAAS,OAAOK,EAAOgB,CAAY,EAC/C,IAAM1C,EAAOqB,EAAM,MAAM,EAEzB,SAASgC,EAAYzB,EAAYgB,EAAS,OAAY,CAClD,IAAMd,EAAQc,IAAYhB,EAAW,OAASgB,EAAQrB,EAAMmB,EAAY,OAAQd,CAAW,EAAGP,EAAOK,CAAM,GAC3G,GAAK,UAAU,OAAS,EAAI,OAAOI,EAAOF,EAAYgB,CAAO,EAC7D,IAAMb,EAAoBC,EAAGrD,EAAQ,oBAAqB,EAAM,EAC1DsD,EAAkBF,GAAqBA,EAAkB,IAAKH,EAAW,IAAM,EAAG,EACxF,OAAKK,GAAmB,CAACA,EAAgB,QAAQ,GAAIH,EAAO,EAAM,EAC3DA,EAAO,QAAQ,eAAgBnD,EAAQiD,EAAW,GAAI,CAAE,CACnE,CAEA,SAAShB,EAAMkC,EAAW,CACtB,IAAMlB,EAAa,IAAIxC,EAAYT,EAAQ,CACvC,KAAM,iBACN,IAAKqB,EACL,SAAA8C,EACA,QAAS,CAAE,GAAGxB,CAAQ,EACtB,OAAQvC,EAAO,MACnB,CAAE,EACImD,EAAmBxB,EAAc,YAAa/B,EAAQ,GAAOI,EAAO,SAAU,EACpF,OAAOmD,EACDA,EAAiB,KAAMN,EAAYyB,CAAW,EAC9CA,EAAYzB,CAAW,CACjC,CAEA,OAAOxB,EAAKzB,EAAQqB,EAAMY,EAAM7B,CAAO,CAE3C,EAAK,CAAC,EAAGsC,EAAM,MAAO,CAAE,EAAGqB,GAAe,CACtC,IAAMR,EAAmBI,EAAiB,YAAa3D,EAAQ,GAAOI,EAAO,SAAU,EACvF,OAAKmD,GAAmBA,EAAiB,KAAMQ,CAAY,EACpD9D,EACHkB,GAAaE,CAAiB,EAAI0C,EAAY,IAAKM,GAAOA,EAAI,MAAO,EAAIN,EAAa,GAAI,MAC9F,CACJ,CAAE,CACN,CAKO,SAASY,GAAkB3E,EAAQ0C,EAAOzC,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CAC9E,OAAOoE,GAAgB,GAAG,SAAU,CACxC,CAeO,SAASI,GAAW5E,EAAQ6E,EAAeC,EAAY,KAAM7E,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CACjG,OAAO6B,EAAMjC,EAAQ,YAAa,UAAU,OAAS,EAAI,CAAE,cAAA6E,EAAe,UAAAC,CAAU,EAAI,CAAE,cAAAD,CAAc,EAAG5E,EAAUG,CAAO,CAChI,CAaO,SAAS2E,GAAO/E,EAAQgF,EAAcH,EAAe5E,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CACzF,OAAO6B,EAAMjC,EAAQ,QAAS,CAAE,aAAAgF,EAAc,cAAAH,CAAc,EAAG5E,EAAUG,CAAO,CACpF,CAYO,SAAS6E,GAAgBjF,EAAQkF,EAAOjF,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CAC5E,OAAO6B,EAAMjC,EAAQ,iBAAkB,CAAE,MAAAkF,CAAM,EAAGjF,EAAUG,CAAO,CACvE,CAWO,SAAS+E,GAAmBnF,EAAQC,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CACxE,OAAO6B,EAAMjC,EAAQ,oBAAqB,CAAC,EAAGC,EAAUG,CAAO,CACnE,CAcA,SAASuB,GAAM3B,EAAQqB,EAAMpB,EAAUG,EAAS,CAAC,EAAI,CACjD,IAAIgF,EACEhF,EAAO,SACTgF,EAAa,IAAI,gBACjBhF,EAAS,CAAE,GAAGA,EAAQ,OAAQgF,EAAW,MAAO,EAChDC,GAAU,kBAAmB,EAAGD,EAAW,MAAO,GAEtD,IAAM7B,EAAmBI,EAAiB,YAAa3D,EAAQ,GAAMI,EAAO,SAAU,EACtF,OAAO,SAASsB,EAAM4D,EAAcC,EAAmB,KAAO,CAC1DA,GAAkB,OAAO,EAEzB,IAAMrE,EAAQ,CAAE,OADSqC,EAAiB,gBAAiBlC,EAAMK,EAAMtB,CAAO,EACrC,MAAQ,EACjD,GAAK,UAAU,OAAS,CACpB,IAAMoF,EAAqBvF,EAAUqF,EAAcpE,CAAM,EACzD,GAAK,UAAU,OAAS,EAAI,OAAOsE,CACvC,CACA,OAAOJ,CACX,CACJ,CAaA,SAASnD,EAAMjC,EAAQyF,EAAMC,EAAU,CAAC,EAAGzF,EAAWE,GAAKA,EAAGC,EAAS,CAAC,EAAI,CAExEJ,EAASgB,EAAYhB,CAAO,EACvB8B,EAAW7B,CAAS,IAAM,CAAEG,EAAQH,CAAS,EAAI,CAAEA,EAAUE,GAAKA,CAAE,GAEzE,SAASwF,EAAa1C,EAAYvC,EAAS,CACvC,OAAK,UAAU,OAAS,EAAWT,EAAUS,CAAO,EAC7CT,EAAU,QAASwF,GAAQzF,EAAQ,GAAG,OAAO,OAAQ0F,CAAQ,CAAE,CAAE,CAC5E,CAEA,IAAMzC,EAAa,IAAIxC,EAAYT,EAAQ,CAAE,KAAAyF,EAAM,GAAGC,CAAQ,CAAE,EAC1DnC,EAAmBxB,EAAc,YAAa/B,EAAQ,GAAOI,EAAO,SAAU,EACpF,OAAKmD,EACMA,EAAiB,KAAMN,EAAY0C,CAAY,EAEnDA,EAAa1C,CAAW,CACnC,CAGA,SAAS9B,GAAaE,EAAO,CACzB,OAAOA,IAAS,KAAY,MAAM,QAASA,CAAK,CACpD,CAGA,SAASL,EAAY4E,EAAKC,EAAS,GAAO,CACzC,IAAO,CAACD,GAAO,CAACpE,EAAeoE,CAAI,IAAOC,EAAS,MAAM,IAAI,MAAO,4CAA6CtE,EAAUqE,CAAI,WAAa,EACzI,OAAKA,aAAenF,IAChBmF,EAAMA,EAAI,OAEVA,GAAOE,GAASF,CAAI,CAC5B,CAGA,SAASnD,GAAcmD,EAAKvE,EAAMpB,EAAUG,EAAS,CAAC,EAAI,CACtD,OAAKiB,IAAS,IACLjB,EAAO,OAAS,CAACoB,EAAeoE,CAAI,EAAW3F,EAAU,CAAC,CAAE,EAC1DoC,GAASuD,EAAK3F,EAAUG,CAAO,EAEnCH,EAAUwE,EAAUpD,EAAM,EAAM,CAAE,CAC7C,CwBhmBA,IAAM0E,GAAW,CAAE,GAAGC,GAAM,GAAGC,EAAO,EAE/BC,EAAQH,GCJf,IAAqBI,EAArB,cAA0C,WAAY,CAElD,cAAgB,IAAI,IACpB,YAAc,IAAI,IAElB,aAAc,CACV,MAAM,EACNC,GAAM,kBAAmB,EAAG,IAAK,CACrC,CAEA,KAAMC,EAAW,CAAE,OAAO,KAAK,cAAe,IAAI,MAAOA,EAAU,CAAE,WAAY,EAAK,CAAE,CAAE,CAAG,CAE7F,MAAOC,EAAO,CACV,YAAK,iBAAkB,GAAGA,CAAK,EACxB,IAAM,KAAK,oBAAqB,GAAGA,CAAK,CACnD,CAEA,MAAOC,EAAQ,GAAQ,CACnB,KAAK,cAAc,QAASC,GAAKA,EAAE,MAAQA,EAAE,MAAOD,CAAM,EAAIC,EAAGD,CAAM,CAAE,EACzE,KAAK,YAAY,QAASC,GAAKA,EAAE,MAAQA,EAAE,MAAOD,CAAM,EAAIC,EAAGD,CAAM,CAAE,EACvE,KAAK,YAAY,MAAM,EACvB,KAAK,KAAM,OAAQ,CACvB,CAEA,OAAQC,EAAI,CAAE,KAAK,cAAc,IAAKA,CAAE,CAAG,CAC3C,KAAMA,EAAI,CAAE,KAAK,YAAY,IAAKA,CAAE,CAAG,CAE3C,ECzBA,IAAqBC,EAArB,cAAqCC,CAAY,CAE7C,MAEA,YAAaC,EAASC,EAAMC,EAAMC,EAAQC,EAAOC,EAAU,CACvD,MAAM,EAENL,GAAS,KAAM,IAAK,EACpB,KAAK,QAAUA,EACf,KAAK,KAAOC,EACZ,KAAK,KAAOC,EACZ,KAAK,MAAQE,EACRJ,GAAS,QAAUI,GAEpB,KAAK,OAAQA,CAAM,EAEvB,KAAK,OAASD,EACd,KAAK,QAAUE,EACVL,GAAS,OAAS,YAAgB,KAAK,KAAOA,EAAQ,KAAK,OAAQ,KAAK,KAAK,KAAM,EAC9EA,GAAS,OAAS,QAAY,KAAK,KAAOA,EAAQ,KAAK,OAAQ,KAAK,MAAO,EAC9E,KAAK,MAASA,GAAS,MAAQ,CAAC,GAAI,MAAO,EAAG,EAAG,EAAE,OAAQ,KAAK,MAAO,EAC9E,KAAK,YAAc,IAAI,GAC3B,CAEA,IAAI,SAAU,CAAE,OAAO,KAAK,QAAQ,OAAS,CAE7C,SAAUM,EAAO,CAAE,OAAO,OAASA,EAAK,SAAaA,EAAK,SAAW,KAAK,SAAUA,EAAK,OAAQ,CAAK,CAEtG,MAAOA,EAAO,CACV,GAAK,CAACA,EAAO,OAAO,KACpB,GAAM,CAAEC,EAAGC,CAAE,EAAIF,EAAK,KAAK,OAAS,KAAK,KAAK,OAAS,CAAEA,EAAM,IAAK,EAAI,CAAE,KAAMA,CAAK,EACrF,OAAOC,EAAE,KAAK,OAAQ,CAAEE,EAAMC,EAAKC,IACxBF,GAAQC,GAAOF,EAAE,KAAMG,GAC/B,EAAK,GAAKJ,GAAKC,CACtB,CAEA,QAASI,EAAW,KAAO,CACvB,IAAMC,EAAc,KAAK,OAAO,EAC1BC,EAAO,OAAS,KAAK,SAAW,CAAC,KAAK,QAAU,CAAE,IAAK,EAAM,KAAK,KAAK,MAAQ,CAAC,EACtF,OAAOC,GAAO,KAAK,QAAS,OAAW,GAAGD,EAAME,IACvC,KAAK,KAAK,WAAaA,EAAc,KAAK,KAAK,SAAUA,EAAa,IAAK,GAChF,KAAK,MAAOH,CAAY,EACjBD,EAAWA,EAAUI,EAAa,IAAK,EAAIA,EACpD,CACN,CAEA,SAAUC,EAAQ,CAAE,OAAO,KAAK,MAAO,WAAYA,CAAM,CAAG,CAE5D,MAAOA,EAAQ,CAAE,OAAO,KAAK,MAAO,QAASA,CAAM,CAAG,CAEtD,OAAQC,EAAM,CAAE,OAAO,KAAK,MAAO,SAAUA,CAAI,CAAG,CAEpD,mBAAoBC,EAAKD,EAAM,CAC3B,OAAM,UAAU,OACX,UAAU,SAAW,EAAW,KAAK,YAAY,IAAKC,CAAI,EACxD,KAAK,YAAY,IAAKA,CAAI,GAAG,MAAQD,EAFZ,KAAK,YAAY,IAGrD,CAEA,MAAOC,EAAKD,EAAKE,EAAQ,GAAQ,CAC7B,IAAMC,EAAa,KAAK,YAAY,KAIpC,GAHKD,EAAU,KAAK,YAAY,OAAQD,CAAI,EACrC,KAAK,YAAY,IAAKA,EAAK,CAAE,IAAAD,CAAI,CAAE,EACrC,KAAK,OAAS,UAAY,KAAK,QAAQ,WAAa,MACpD,KAAK,OAAS,SAAW,CAAE,QAAS,UAAW,EAAE,SAAUC,CAAI,GAAKD,IAAQ,KAAK,SAAS,KAAK,MAAQ,CAClGE,IAAU,KAAK,YAAY,IAAKD,CAAI,EAAE,SAAW,IAClD,KAAK,QAAU,WAAc,KAAK,iBAAkB,KAAK,YAAY,KAAME,CAAW,EAC3F,MACJ,CAGK,KAAK,QAAU,YAChB,KAAK,gBAAiB,KAAK,YAAY,KAAMA,CAAW,EACxD,KAAK,MAAO,GAAG,SAAU,EAEjC,CAEA,SAAUP,EAAO,CAAE,OAAO,KAAK,SAAS,MAAO,GAAGA,CAAK,CAAG,CAE1D,gBAAiBQ,EAAWD,EAAa,CACrC,IAAIE,EACC,KAAK,OAAS,SAChB,EAAGA,EAAY,KAAK,SAAS,aAC3BD,EAAcC,EAAU,MAAM,EACzBF,IACNE,EAAU,MAAQ,WAClB,KAAK,QAAQ,SAAUA,CAAU,GAEzC,CAEA,iBAAkBD,EAAWD,EAAa,CACtC,GAAK,KAAK,OAAS,QAAU,OAC7B,IAAIG,EAAY,KAAMC,EAAc,IAAI,IACxC,KAAOD,EAAYA,EAAU,WACpBF,EAAcE,EAAU,MAAM,EACzBH,GAAcG,EAAU,QAAU,UACxCA,EAAU,MAAQ,WAClBC,EAAY,IAAKD,CAAU,GAG9BC,EAAY,MAAS,KAAK,QAAQ,SAAU,GAAGA,CAAY,CACpE,CAEA,QAAS,CACL,KAAK,MAAQ,UAEb,IAAMC,EAAoB,KAAK,YAC/B,YAAK,YAAc,IAAI,IAChBA,CACX,CAEA,MAAOA,EAAoB,CACvB,KAAK,MAAQ,WAEb,IAAMC,EAAmB,KAAK,YAE9B,KAAK,gBAAiBA,EAAiB,KAAMD,EAAkB,IAAK,EACpE,KAAK,iBAAkBC,EAAiB,KAAMD,EAAkB,IAAK,EACrE,QAAYP,IAAO,CAAE,QAAS,WAAY,QAAS,EAC1CQ,EAAiB,IAAKR,CAAI,GAAK,CAACQ,EAAiB,IAAKR,CAAI,EAAE,SAAa,KAAK,MAAOA,EAAKQ,EAAiB,IAAKR,CAAI,EAAE,GAAI,EACrHO,EAAkB,IAAKP,CAAI,GAAK,CAACO,EAAkB,IAAKP,CAAI,EAAE,UAAa,KAAK,MAAOA,EAAKO,EAAkB,IAAKP,CAAI,EAAE,IAAK,EAAK,CAErJ,CAEA,MAAOS,EAAQ,GAAQ,CACnB,OAAKA,IACI,KAAK,SAAS,aAAe,MAAS,OAAO,KAAK,QAAQ,WAC/D,KAAK,YAAY,MAAM,GAE3B,KAAK,MAAQA,EAAQ,QAAU,UACxB,MAAM,MAAOA,CAAM,CAC9B,CAEJ,ECnIA,IAAqBC,EAArB,cAAoCC,CAAY,CAE5C,YAAc,IAAI,IAClB,QAAU,IAAI,IAEd,YAAaC,EAASC,EAAQ,CAC1B,MAAM,EACN,KAAK,QAAUD,EACf,KAAK,SAAS,KAAM,IAAM,KAAK,MAAM,CAAE,EACvC,KAAK,KAAM,IAAM,KAAK,UAAW,EAAM,CAAE,EACzC,KAAK,MAAQC,CACjB,CAEA,IAAI,MAAO,CAAE,MAAO,CAAE,GAAG,KAAK,SAAS,QAAQ,KAAK,GAAK,CAAC,CAAE,EAAE,KAAMC,GAAK,KAAK,QAAQ,QAAQ,IAAKA,CAAE,IAAM,IAAK,CAAG,CAEnH,OAAQC,EAAO,CACX,IAAIC,EAAS,KAAK,QAAQ,IAAKD,CAAK,EACpC,OAAMC,IAEFA,EAAS,IAAIN,EAAQ,KAAM,KAAK,OAAS,UAAYK,EAAS,OAAO,KAAK,OAAU,UAAY,KAAK,MAAQE,EAAS,IAAK,KAAK,MAAOF,CAAK,EAAI,MAAY,EAC5J,KAAK,QAAQ,IAAKA,EAAMC,CAAO,EAE1B,KAAK,QAAQ,OAAS,GAAM,KAAK,UAAU,EAEhDA,EAAO,KAAM,IAAM,CAEf,KAAK,QAAQ,OAAQD,CAAK,EAEpB,KAAK,QAAQ,MAAS,KAAK,UAAW,EAAM,CACtD,CAAE,GAECC,CACX,CAEA,UAAWE,EAAU,CACjB,KAAK,YAAY,IAAKA,CAAQ,EAC9BA,EAAQ,KAAM,IAAM,CAEhB,KAAK,YAAY,OAAQA,CAAQ,EAE3B,KAAK,YAAY,MAAS,KAAK,MAAM,CAC/C,CAAE,CACN,CAEA,UAAWC,EAAO,GAAO,CACrB,KAAK,gBAAgB,MAAM,EACtB,GAACA,GAAQ,CAAC,KAAK,QAAQ,MAAQ,CAACC,GAAe,KAAK,KAAM,KAC/D,KAAK,eAAiBH,EAAS,QAAS,KAAK,MAAOI,GAAa,CAE7D,IAAMC,EAAY,CAAE,IAAK,IAAI,IAAK,IAAKC,EAAUC,EAAW,CACxD,QAAYN,KAAWK,EACdL,EAAQ,KAAK,iBAAkBM,CAAS,IAAM,KAC7C,KAAK,IAAI,IAAKN,EAAQ,OAAQ,GAAM,KAAK,IAAI,IAAKA,EAAQ,QAAS,IAAI,GAAI,EACjF,KAAK,IAAI,IAAKA,EAAQ,OAAQ,EAAE,IAAKA,CAAQ,EAErD,CAAE,EACF,QAAYM,KAAYH,EAAY,CAChC,IAAML,EAAS,KAAK,QAAQ,IAAKQ,EAAS,GAAI,EACzC,CAACR,IACNM,EAAU,IAAKN,EAAO,YAAaQ,CAAS,EAC5CR,EAAO,QAASQ,EAAS,KAAM,EACnC,CAEA,IAAMC,EAAeH,EAAU,IAAI,KAAuB,CAAE,GAAGA,EAAU,GAAI,EAAE,KAAM,CAAEI,EAAGC,IAAOD,EAAE,QAAUC,EAAE,QAAU,GAAK,CAAE,EAAtFL,EAAU,IAEpD,OAAY,CAAEM,EAASL,CAAS,IAAKE,EAC5BG,EAAQ,QAAU,WACvBA,EAAQ,SAAU,GAAGL,CAAS,CAEtC,EAAG,CAAE,WAAY,YAAa,CAAE,EACpC,CAEA,QAASM,EAAW,CAChB,KAAK,MAAQA,EACb,OAAY,CAAEd,EAAMC,CAAO,IAAK,KAAK,QACjCA,EAAO,QAASC,EAAS,IAAK,KAAK,OAAS,CAAC,EAAGF,CAAK,CAAE,EAE3D,KAAK,UAAU,CACnB,CAEJ,EClFA,IAAqBe,EAArB,cAAmCC,CAAO,CAEtC,QAAU,IAAI,IACd,YAAaC,EAASC,EAAMC,EAAQ,OAAY,CAC5C,MAAOF,EAASE,GAAS,OAAO,OAAQ,IAAK,CAAE,EAC/C,KAAK,KAAOD,CAChB,CAEJ,ECNA,IAAqBE,GAArB,cAA2CC,CAAQ,CAE/C,OAAS,IAAI,IAEb,YAAaC,EAASC,EAAMC,EAAMC,EAAQC,EAAOC,EAAU,CACvD,IAAMC,EAAQD,EAAQ,YAAY,OAAS,gBACtCH,EAAK,WACNA,EAAK,SAAWG,EAChBA,EAAUC,EAAQ,SAAY,CAAE,MAAM,KAAK,QAAQ,CAAG,EAAI,IAAM,CAAE,KAAK,QAAQ,CAAG,GAEtF,MAAON,EAASC,EAAMC,EAAMC,EAAQC,EAAOC,CAAQ,EACnD,KAAK,MAAQC,EACb,KAAK,OAAQ,IAAM,CACf,OAAO,KAAK,WACZ,KAAK,OAAO,MAAM,CACtB,CAAE,CACN,CAEA,IAAKC,EAAKC,EAAQ,CACd,YAAK,OAAO,IAAKD,EAAKC,CAAM,EACvB,KAAK,YACN,KAAK,UAAU,UAAYA,EAC3BA,EAAM,UAAY,KAAK,WAE3B,KAAK,UAAYA,EACVA,CACX,CAEA,YAAaC,EAAa,CACtB,IAAMC,EAAQ,KAAK,OAAO,KACpBN,EAAQ,IAAIO,EAAO,KAAK,MAAO,QAAS,CAAE,CAAE,KAAK,KAAK,YAAcF,CAAW,CAAE,EACjFD,EAAQ,IAAIT,EAAS,KAAM,QAAS,CAAE,MAAAW,CAAM,EAAG,KAAK,OAAQN,EAAO,KAAK,KAAK,QAAS,EAC5F,OAAO,KAAK,IAAK,KAAK,KAAK,OAAS,SAAWK,EAAaC,EAAOF,CAAM,CAC7E,CAEA,MAAM,SAAU,CAIZ,GAFA,KAAK,SAAW,KAAK,KAAK,SAAS,EAE9B,KAAK,KAAK,OAAS,SAAW,CAC/B,IAAII,EACJ,QAAYL,KAAO,KAAK,SAAW,CAC/B,IAAMC,EAAQ,KAAK,YAAaD,CAAI,EACpC,GAAK,CAAAK,EAEL,IADA,KAAK,MAAQ,MAAM,KAAK,QAAQ,KAAMJ,CAAM,EAAI,KAAK,QAAQ,KAAMA,CAAM,EACpE,KAAK,UAAU,EAAM,MACrB,KAAK,WAAW,IAAMI,EAAS,IACxC,CACA,KAAK,UAAU,CACnB,CACA,GAAK,KAAK,KAAK,OAAS,SAAW,CAC/B,IAAIA,EACJ,QAAYC,KAAO,KAAK,SAAW,CAC/B,IAAML,EAAQ,KAAK,YAAaK,CAAI,EACpC,GAAK,CAAAD,EAEL,IADA,KAAK,MAAQ,MAAM,KAAK,QAAQ,KAAMJ,CAAM,EAAI,KAAK,QAAQ,KAAMA,CAAM,EACpE,KAAK,UAAU,EAAM,MACrB,KAAK,WAAW,IAAMI,EAAS,IACxC,CACA,KAAK,UAAU,CACnB,CACJ,CAEA,YAAa,CAAE,OAAO,KAAK,YAAc,CAAC,KAAK,WAAW,mBAAoB,WAAY,KAAK,KAAK,KAAM,GAAK,KAAK,WAAW,mBAAmB,CAAG,CAErJ,WAAY,CAAE,OAAO,KAAK,WAAW,GAAK,KAAK,QAAQ,QAAQ,uBAAyB,EAAO,CAE/F,WAAY,CACR,IAAME,EAAkBC,GAAa,CACjC,IAAMC,EAAc,IAAI,IACxB,QAAYC,KAAYF,EAAY,CAChC,GAAK,MAAM,QAAS,KAAK,QAAS,GAAKE,EAAS,MAAQ,SAAW,SACnE,IAAMR,EAAa,KAAK,KAAK,OAAS,SAAWQ,EAAS,IAAMA,EAAS,MACnEV,EAAM,KAAK,KAAK,OAAS,SAAWU,EAAS,IAAM,SAAUA,EAAS,GAAI,EAC1EC,EAAgB,KAAK,OAAO,IAAKX,CAAI,EACvCY,EACCD,GACDE,EAAS,IAAKF,EAAc,MAAM,MAAO,KAAK,KAAK,WAAYT,CAAW,EACrEQ,EAAS,OAAS,iBAEnBC,EAAc,MAAO,EAAK,EAClBA,EAAc,QAAU,UAEhCA,EAAc,MAAQ,WACtBC,EAAWD,IAEPD,EAAS,OAAS,mBAE1BE,EAAW,KAAK,YAAaV,CAAW,GAEvCU,GAAY,CAAC,KAAK,WAAW,GAC9BH,EAAY,IAAKG,CAAS,CAElC,CACKH,EAAY,MAAS,KAAK,QAAQ,SAAU,GAAGA,CAAY,CACpE,EACA,KAAK,KAAMI,EAAS,QAAS,KAAK,SAAUN,CAAgB,CAAE,CAClE,CAEJ,ECvGO,IAAMO,GAAW,OAAO,OAAQ,IAAK,ECE5C,IAAqBC,EAArB,KAA2B,CAEvB,YAAaC,EAAU,CACnB,OAAO,eAAgB,KAAM,UAAW,CAAE,MAAOA,CAAQ,CAAE,EAC3D,IAAMC,EAAS,CAAE,YAAa,IAAM,CAAEC,EAAS,eAAgB,KAAM,QAAS,CAAE,MAAOF,EAAQ,YAAY,IAAK,QAAS,GAAG,IAAK,WAAY,GAAM,aAAc,EAAK,CAAE,CAAG,CAAG,EAC9K,QAAYG,KAAQF,EAChBD,EAAQ,GAAIG,EAAMF,EAAQE,EAAO,EACjCF,EAAQE,GAAO,EAEdH,EAAQ,QAAQ,aAAe,UAAa,OAAO,eAAgB,KAAM,UAAW,CAAE,MAAOA,EAAQ,OAAQ,CAAE,CACxH,CAEA,SAAU,CAAE,OAAO,KAAK,QAAQ,MAAM,CAAG,CAE7C,ECRA,IAAqBI,EAArB,cAAqCC,CAAQ,CAEzC,UAAY,CAAC,EACb,MAAQ,IAAI,IACZ,OAAS,CAAC,EAEV,YAAaC,EAASC,EAAMC,EAAQC,EAAOC,EAAU,CACjD,MAAOJ,EAASC,EAAM,CAAC,EAAa,GAAIE,EAAOC,CAAQ,EACvD,GAAM,CAAE,QAAAC,EAAU,KAAMC,CAAQ,EAAIJ,EACpC,KAAK,QAAUG,EACf,KAAK,QAAUC,EAEf,KAAK,SAAW,IAAIC,EAAO,OAAW,SAAU,EAChD,KAAK,OAAQ,KAAK,QAAS,EAE3B,KAAK,QAAU,OAAO,OAAQ,IAAK,EACnC,KAAK,UAAY,CAAE,QAAS,CAAC,EAAG,QAAS,CAAC,CAAE,EAC5C,KAAK,OAAQ,IAAM,CACfC,EAAS,iBAAkB,KAAK,QAAS,OAAO,KAAM,KAAK,OAAQ,CAAE,EACrE,KAAK,UAAU,QAAQ,OAAQ,CAAE,EACjC,KAAK,UAAU,QAAQ,OAAQ,CAAE,CACrC,CAAE,CACN,CAEA,cAAeC,EAAQC,EAAO,GAAQ,CAClC,GAAM,CAAE,CAAEC,EAAUC,EAAMC,CAAO,EAAG,CAAEC,CAAO,CAAE,EAAI,KAAK,UAAWL,GAC7DM,EAAO,KAAK,QAAQ,eAAe,MAAOJ,EAAUG,CAAO,EACjE,OAAOJ,EAAO,CAAE,KAAAK,EAAM,KAAAH,EAAM,OAAAC,CAAO,EAAIE,CAC3C,CAEA,MAAOC,EAASC,EAASC,EAAa,KAAMC,EAAY,KAAO,CAC3D,IAAIC,EAAOC,EAAWF,IAAc,KAAO,IAAKA,OAAiBH,IAAaA,EACxEM,EAAQL,EAAQ,IAAKR,GAAUA,IAAW,IAAM,KAAK,cAAeA,EAAQ,EAAK,CAAE,EAAE,OAAQc,GAAKA,CAAE,EAC1GD,EAAM,KAAM,CAAE,OAAQ,KAAK,QAAQ,cAAe,CAAE,EACpDF,EAAQ,IAAMF,GAAc,OAASG,EAAU,CAAE,MAAAC,CAAM,CAAE,EACzD,IAAME,EAAW,KAAK,QAAQ,aAAe,UAAY,KAAK,QAAQ,uBAAyB,IAAS,KAAK,QAAQ,aAAe,KAAK,QAAQ,SACjJ,MAAKA,IAAaJ,EAAM,SAAWI,GAC9BL,IAAcC,EAAM,KAAOD,GAC1BC,CACV,CAEA,KAAMK,EAASC,EAAW,KAAO,CAEzB,YAAK,OAAO,QAASD,CAAQ,EACtBA,EAAQ,QAASE,IACpB,KAAK,OAAO,MAAM,EAClBD,IAAYC,CAAY,EACjBA,EACT,EACN,GAAI,CACJ,OAASC,EAAP,CAEE,GAAKA,EAAE,OAASA,EAAE,MAAQ,MAAMA,EAChC,IAAMZ,EAAU,GAAIY,EAAE,SAAWA,IACjC,KAAK,MAAOZ,EAAS,CAAES,EAAQ,OAAQA,EAAQ,SAAS,MAAO,EAAG,WAAYG,EAAE,KAAO,CAC3F,CACJ,CAEA,IAAI,SAAU,CAAE,OAAO,IAAM,CAE7B,IAAI,YAAa,CAAE,OAAO,KAAK,OAAQ,EAAK,CAE5C,YAAaC,EAAW,CAEpB,IAAMC,EAAW,KAAK,MAAM,KAC5B,QAAYL,KAAWI,EAAa,KAAK,MAAM,IAAKJ,CAAQ,EAC5D,GAAK,CAAAK,EAEL,YAAK,iBAAmB,GACf,SAASC,EAAUC,EAAYC,EAAU,CAE9C,IAAIC,EACJ,QAAYT,KAAW,KAAK,MAAQ,CAGhC,GAAKQ,GAAWA,EAAQ,MAAOR,CAAQ,IAAMQ,GAAWR,EAAQ,QAAU,UAAY,CAAE,KAAK,MAAM,OAAQA,CAAQ,EAAG,QAAU,CAEhIS,EAAYA,EAAYA,EAAU,MAAOT,CAAQ,EAAIA,EAC/CQ,IAAYA,EAAUC,EAChC,CAEA,OAAMA,GAENA,EAAU,MAAM,EAET,KAAK,KAAMA,EAAWP,IAEzB,KAAK,MAAM,OAAQO,CAAU,EAEtBH,EAAS,KAAM,KAAMJ,EAAaO,CAAU,EACrD,IAT2B,KAAK,KAAM,KAAK,mBAAmB,EAAmB,cAAgB,YAAa,EAAGF,EAUvH,EAAI,KAAM,KAAM,OAAW,KAAK,UAAW,CAC/C,CAEA,IAAKG,EAAM1B,EAAQL,EAAU,CAAE,OAAO,KAAK,IAAK+B,EAAM1B,EAAQL,EAAS,KAAM,CAAG,CAEhF,IAAK+B,EAAM1B,EAAQL,EAASgC,EAAO,MAAQ,CAEjChC,IAAUA,EAAU,IAAG,IAC7B,IAAMiC,EAAW,CAAEV,EAAaF,IAAa,CACzC,IAAItB,EAAQiC,IAAS,MAAQ,KAAK,MAAQX,EAAQ,MAElD,KAAQW,IAAS,OAAS,CAAC,CAAE,SAAU,UAAW,EAAE,SAAUjC,EAAM,IAAK,GAAK,CAACK,EAAS,IAAKL,EAAM,MAAOgC,CAAK,GAAKhC,EAAM,SACtHA,EAAQA,EAAM,QAElB,IAAMmC,EAAcnC,EAAM,QAAQ,IAAKgC,CAAK,EAC5C,GAAKG,IAAiBA,EAAY,OAASF,GAAUA,IAAS,OAASE,EAAY,SAAW7B,GAC1F,MAAM,IAAI,MAAO,eAAgB0B,+BAAoC,EAEzE,OAAAhC,EAAM,QAAQ,IAAKgC,EAAM,CAAE,OAAA1B,EAAQ,KAAA2B,CAAK,CAAE,EAC1C5B,EAAS,IAAKL,EAAM,MAAOgC,EAAMR,CAAY,EACtCA,CACX,EACA,OAAO,KAAK,QAASS,EAAM,CAAE,SAAAC,CAAS,EAAG5B,EAAQL,CAAQ,CAC7D,CAEA,OAAQ+B,EAAM/B,EAASmC,EAAS,GAAO,CAEnC,IAAIC,EAAe,KAAK,YAAY,OAAS,KAAK,MAClD,KAAOA,GAAgB,CAAChC,EAAS,IAAKgC,EAAa,MAAOL,CAAK,GAAMK,EAAeA,EAAa,QAEjG,GAAK,CAACA,EAAiB,MAAM,IAAI,eAAgB,GAAIL,mBAAwB,EAC7E,IAAMM,EAAcjC,EAAS,IAAKgC,EAAa,MAAOL,CAAK,EAC3D,OAAOO,GAAOtC,EAAS,OAAWqC,EAAad,IAE3CnB,EAAS,IAAKgC,EAAa,MAAOL,EAAMR,CAAY,EAC7CY,EAASZ,EAAcc,EAChC,CACN,CAEA,IAAKN,EAAMQ,EAAQ,EAAI,CACnB,IAAMC,EAAa,KAAK,WAEpBJ,EAAeI,GAAY,OAAS,KAAK,MAC7C,KAAOJ,GAAgB,CAAChC,EAAS,IAAKgC,EAAa,MAAOL,CAAK,GAAMK,EAAeA,EAAa,QAEjG,GAAK,CAACA,EAAiB,MAAM,IAAI,eAAgB,GAAIL,mBAAwB,EAE7E,OAAO,KAAK,SAAUS,EAAYJ,EAAa,OAAQL,CAAK,EAAGQ,CAAM,CACzE,CAEA,IAAKE,EAAKF,EAAQ,CAAE,OAAO,KAAK,SAAU,KAAK,WAAY,KAAK,SAAS,OAAQE,CAAI,EAAGF,CAAM,CAAG,CAEjG,SAAUC,EAAYE,EAAYH,EAAQ,CAEtC,OAAKC,EAAW,QAAU,UAAmBE,EAAW,MAC/C,SAASC,EAAOC,EAAQL,EAAQ,CAOrC,GALKC,GAEDI,EAAO,UAAWJ,CAAW,EAG5B,CAACD,GAAS,CAACK,EAAO,OAAS,OAAOA,EAAO,OAAU,SACpD,OAAO,OAAOA,EAAO,OAAU,WAEzBxC,EAAS,MAAOwC,EAAO,MAAO,CAAE,SAAUA,CAAO,CAAE,EACnDA,EAAO,MAGjB,IAAIC,EACJ,OAAOzC,EAAS,MAAOwC,EAAO,MAAO,CAAC,EAAGE,IAAW,CAChD,GAAGA,EACH,IAAKC,EAAQhB,EAAMiB,EAAW,KAAO,CAEjC,OAAKH,EAAgCC,EAAM,IAAKC,EAAQhB,EAAMiB,CAAS,GACvEH,EAAuB,GAChBF,EAAOC,EAAO,OAAQb,CAAK,EAAGQ,EAAQ,CAAE,EACnD,CACJ,EAAI,CACR,EAAKG,EAAYH,CAAM,CAC3B,CAEA,QAAS1C,KAASoD,EAAO,CACrB,IAAIjD,EAAUiD,EAAK,IAAI,EACjB5C,EAAS4C,EAAK,IAAI,EAClBC,EAAOD,EAAK,IAAI,GAAK,CAAC,EACtBrD,EAAU,KAAK,YAAc,KAE/BuD,EAAexD,EACdE,IAAS,cACVsD,EAAeC,IAGnB,IAAIrD,EAAQH,EAAQ,MACf,CAAE,QAAS,OAAQ,EAAE,SAAUC,CAAK,IAAME,EAAQ,IAAII,EAAOP,EAAQ,MAAOC,CAAK,GAEtF,IAAMwB,EAAU,IAAI8B,EAAcvD,EAASC,EAAMqD,EAAM7C,EAAQN,EAAOC,CAAQ,EAE9E,GAAK,EAAAH,IAAS,UAEVD,EAAQ,IAAKsD,EAAK,MAAO7B,CAAQ,EAC5BzB,EAAQ,WAAW,KAEvB,EAAAC,IAAS,SAEVD,EAAQ,UAAYyB,EAEfzB,EAAQ,mBAAmB,IAGpC,OAAO,KAAK,KAAMyB,CAAQ,CAC9B,CAEA,IAAKgC,EAAoBrD,EAAU,CAC/B,IAAMF,EAAS,CAAE,QAAS,KAAK,QAAU,EAAG,GAAG,KAAK,OAAQ,EACtDF,EAAU,KAAK,YAAc,KAC7BG,EAAQ,IAAII,EAAOP,EAAQ,MAAO,UAAW,EAC7C0D,EAAa,IAAI5D,EAASE,EAAS,WAAYE,EAAQC,EAAOC,CAAQ,EAC5E,OAAOsD,EAAW,QAAS/B,GACjB8B,EACC,IAAIE,EAAOD,CAAW,EADK/B,CAEpC,CACN,CAEA,SAAUiC,EAAeH,EAAoBhD,EAAQoD,EAAY,CAE7D,GAAKD,EAAgB,CACjB,IAAMzD,EAAQ,KAAK,YAAY,OAAS,KAAK,MAC7CK,EAAS,IAAKL,EAAM,MAAO0D,EAAU,KAAMA,CAAU,CACzD,CAEA,IAAMC,EAAQ,KACd,cAAO,eAAgBD,EAAW,WAAY,CAAE,MAAO,SAAUE,EAAW,GAAQ,CAChF,GAAKA,GAAYN,EAAqB,OAAO,SAAS,UAAU,SAAS,KAAMI,CAAU,EACzF,IAAMG,EAAiBF,EAAM,cAAerD,CAAO,EACnD,OAAOuD,EAAe,WAAY,SAAU,EAAIA,EAAe,QAAS,UAAW,EAAG,EAAIA,CAC9F,CAAE,CAAE,EACGH,CACX,CAEA,MAAOD,EAAeK,EAAQC,EAAc,CAExC,GAAKN,EAAgB,CACjB,IAAMzD,EAAQ,KAAK,YAAY,OAAS,KAAK,MAC7CK,EAAS,IAAKL,EAAM,MAAO8D,EAAO,KAAMA,CAAO,CACnD,CAEA,OAAAC,EAAY,QAAS,CAAE,CAAE,KAAA/B,EAAM,OAAQgC,EAAU,mBAAAV,EAAoB,OAAAhD,CAAO,IAAO,CAC/E,KAAK,SAAU,GAAOgD,EAAoBhD,EAAQ0D,EAAWF,EAAQ9B,GAAS8B,EAAO,UAAW9B,EAAO,CAC3G,CAAE,EACK8B,CACX,CAEA,MAAM,UAAWG,EAAO,CACpB,IAAMC,EAASD,EAAK,IAAI,EAClBE,EAAU,OAAOD,GAAW,SAAW,CAAE,OAAAA,CAAO,EAAIA,EACtDE,EAcJ,GAbKD,EAAQ,OAAO,WAAY,GAAI,GAAK,KAAK,QAAQ,uBAAyB,IAASE,GAAUF,EAAQ,OAAO,MAAO,CAAE,GACtHC,EAAUC,GAAUF,EAAQ,OAAO,MAAO,CAAE,IAE5CC,GAAY,SAAY,CACpB,IAAME,EAAa,KAAK,QAAQ,aAAe,UAAY,KAAK,QAAQ,uBAAyB,IAAS,KAAK,QAAQ,aAAe,KAAK,QAAQ,SACnJ,GAAI,CAAE,OAAO,MAAM,OAAQH,EAAQ,OAAU,OAAS1C,EAAP,CAC3C,MAAKA,EAAE,OAAS,wBAA2B,KAAK,MAAO,wBAAyB0C,EAAQ,UAAYG,EAAa,iBAAkBA,KAAiB,MAAQ,CAAEH,EAAQ,MAAO,EAAG,KAAM1C,EAAE,IAAK,EACvLA,CACV,CACJ,GAAI,EACJ,KAAK,UAAW0C,EAAQ,UAAY,UAAY,WAAY,KAAMC,CAAQ,GAGzED,EAAQ,UAAY,OAAOC,EAEhC,KAAK,cAAeH,EAAM,KAAK,MAAM,MAAO,MAAMG,EAASF,EAAO,MAAO,CAC7E,CAEA,MAAM,UAAWD,EAAO,CACpB,IAAMC,EAAU,MAAM,QAASD,EAAMA,EAAK,OAAS,EAAI,EAAiB,KAAbA,EAAK,IAAI,EAEpE,GAAK,CAACC,GAAUD,EAAM,GAAI,SAAW,GAAK,OAAOA,EAAM,GAAK,IAAQ,SAAW,CAC3E,OAAY,CAAEM,EAAOC,CAAM,IAAKP,EAAS5D,EAAS,IAAK,KAAK,QAASmE,EAAOD,CAAM,EAClF,MACJ,CAEA,IAAMH,EAAUF,EAAS,MAAM,KAAK,OAAQ,CAAE,GAAGA,EAAQ,UAAW,EAAK,CAAE,EAAI,KAAK,MAAM,MAE1F,KAAK,cAAeD,EAAM,KAAK,QAASG,EAASF,GAAQ,MAAO,CACpE,CAEA,cAAeO,EAAYzB,EAAQkB,EAAQQ,EAAe,KAAO,CAC7D,IAAMC,EAAc,CAAC,EACrB,OAAY,CAAEC,EAAOtE,EAAQkE,CAAM,IAAKC,EAAa,CACjD,GAAKG,IAAU,KAAOJ,EAAQ,CAC1BnE,EAAS,IAAK2C,EAAQwB,EAAON,CAAO,EACpC,QACJ,CACM7D,EAAS,IAAK6D,EAAQU,CAAM,GAAM,KAAK,MAAO,0DAA2DA,MAAY,CAAEtE,EAAQoE,CAAa,CAAE,EACpJrE,EAAS,IAAK2C,EAAQwB,GAASI,EAAOvE,EAAS,IAAK6D,EAAQU,CAAM,CAAE,EACpED,EAAY,KAAM,CAAEC,EAAOtE,EAAQkE,CAAM,CAAE,CAC/C,CACK,CAACG,EAAY,QAClB,KAAK,KAAMtE,EAAS,QAAS6D,EAAQW,GAAa,CAC9C,OAAY,CAAED,EAAmB,CAAEJ,CAAM,IAAKG,EAC1C,QAAYG,KAAYD,EACfD,IAAU,IAAQvE,EAAS,IAAK2C,EAAQ8B,EAAS,IAAKA,EAAS,KAAM,EAChEA,EAAS,MAAQF,GAAUvE,EAAS,IAAK2C,EAAQwB,GAASI,EAAOE,EAAS,KAAM,CAGtG,CAAE,CAAE,CACR,CAEA,SAAUb,EAAO,CACb,GAAK,KAAK,QAAQ,aAAe,UAAY,KAAK,QAAQ,uBAAyB,IAAS,KAAK,QAAQ,YAAc,CACnH,GAAK,KAAK,QAAQ,YAAY,WAAY,GAAI,EAAI,MAAM,IAAI,MAAO,yDAA0D,EAC7HI,GAAU,KAAK,QAAQ,aAAgB,KAAK,QAC5C,KAAK,KAAM,IAAM,CAAE,OAAOA,GAAU,KAAK,QAAQ,YAAe,CAAE,CACtE,CACA,OAAO,MAAM,MAAO,GAAGJ,CAAK,CAChC,CAEJ,ECtTO,SAASc,GAAOC,EAAYC,EAAsBC,EAAQC,EAAS,CAEtE,GAAM,CAAE,IAAAC,EAAK,eAAAC,EAAiB,CAAC,EAAG,YAAAC,EAAa,SAAAC,CAAS,EAAIJ,EACtD,CAAE,aAAAK,EAAc,eAAAC,EAAgB,cAAAC,CAAe,EAAIC,GAAeR,CAAO,EAG/E,GAAKH,IAAe,SAChBQ,EAAa,WAAaR,EAC1BQ,EAAa,0BAA4B,WACjC,CAAE,WAAY,gBAAiB,EAAE,SAAUR,CAAW,EAAI,CAElE,IAAMY,EAAO,KAAOV,EAAO,MAAO;AAAA,CAAK,EAAE,KAAM;AAAA,GAAO,EACtDA,EAAS,UAAWF,IAAe,iBAAmB,SAAW,gBAAkBK,EAAe,KAAM,IAAK;AAAA,EAAWO;AAAA,GACxHH,EAAe,YAAc,EACjC,SAAY,CAAC,CAAE,SAAU,cAAe,EAAE,SAAUT,CAAW,EAC3D,MAAM,IAAI,MAAO,uCAAwCA,KAAgB,EAI7ES,EAAe,WAAaT,EAC5B,IAAMa,EAAiBZ,EAAsBC,EAAQ,CAAE,aAAAM,EAAc,eAAAC,CAAe,CAAE,EACtF,GAAKI,aAA0B,SAAW,CAAC,CAAE,iBAAkB,eAAgB,QAAS,EAAE,SAAUb,CAAW,EAC3G,MAAM,IAAI,MAAO,gGAAiG,EAItH,OAAAU,EAAc,WAAaV,EAC3BU,EAAc,YAAcJ,EAC5BI,EAAc,SAAWH,EAClBO,EAAQD,EAAgBA,GAAkB,CAG7C,IAAME,EAAY,CAAE,eAAgB,QAAS,EAAE,SAAUf,CAAW,EAK9DgB,GAJQ,CAAEb,EAAQD,IACfQ,EAAc,gBAAyBA,EAAc,gBAAiBR,EAAQC,CAAO,EACnF,IAAMY,EAAc,gBAAiB,CAAC,EAAI,YAAc,UAAY,GAAGZ,EAAO,OAAQD,CAAO,CAAE,GAEtF,CAAEW,EAAe,WAAa,EAAG,EAAGA,EAAiB,EAAG,EAExEI,EAAc,SAAUC,EAAQ,IAAIC,EAAO,OAAWF,EAAa,UAAW,GAE7EjB,EAAW,SAAU,QAAS,GAAKI,KAAQa,EAAc,MAAOC,EAAQ,IAAIC,EAAOD,EAAOD,EAAab,CAAI,GAE3GJ,IAAe,WAAaiB,EAAc,SAAUC,EAAQ,IAAIC,EAAOD,EAAOD,CAAY,GAC/F,IAAMG,EAAU,IAAIC,EAAS,OAAWJ,EAAa,CAAE,GAAGP,EAAe,eAAgBG,EAAe,cAAe,EAAGK,EAAOF,CAAK,EACtI,MAAO,CAAE,WAAY,gBAAiB,EAAE,SAAUhB,CAAW,EACvDoB,EAAQ,QAAQ,EAChB,CAAE,QAAAA,EAAS,eAAAP,CAAe,CACpC,CAAE,CACN,CCnDA,IAAqBS,EAArB,KAA4C,CACxC,eAAgBC,EAAO,CACnB,IAAMC,EAAU,KAAK,YACfC,EAAS,OAAOF,EAAMA,EAAK,OAAS,IAAQ,SAAWA,EAAK,IAAI,EAAI,CAAC,EACrEG,EAASH,EAAK,IAAI,GAAK,GAC7B,KAAK,SAAWI,GAAOH,EAAQ,WAAYA,EAAQ,qBAAsBE,EAAQD,CAAO,CAC5F,CAEA,SAAU,CACN,OAAOG,EAAQ,KAAK,SAAU,CAAE,CAAE,QAAAC,CAAQ,KACtCA,EAAQ,MAAM,EACPA,EAAQ,QAAS,IAAM,IAAIC,EAAOD,CAAQ,CAAE,EACrD,CACN,CAEA,SAAUE,EAAW,GAAQ,CACzB,OAAOH,EAAQ,KAAK,SAAU,CAAE,CAAE,eAAAI,CAAe,IACxCD,EAAkBC,EAAiB,GACjCA,EAAe,cACxB,CACN,CACJ,ErClBO,SAASC,MAA0BC,EAAO,CAC7C,GAAM,CAAE,OAAAC,EAAQ,OAAAC,CAAO,EAAIC,GAAgBH,CAAK,EAC1CI,EAAmBC,GAAO,iBAAkBC,GAAsBL,EAAQC,CAAO,EACvF,GAAK,EAAGE,aAA4B,SAAY,OAAOA,EAEvD,IAAMG,EAAkB,kBAAmBP,EAAO,CAAE,OAAS,MAAMI,GAAmB,MAAO,KAAM,GAAGJ,CAAK,CAAG,EAC9G,cAAO,eAAgBO,EAAiB,WAAY,CAAE,MAAO,kBAAmBP,EAAO,CAAE,OAAS,MAAMI,GAAmB,SAAU,GAAGJ,CAAK,CAAE,CAAE,CAAE,EAC5IO,CACX,CAEO,IAAMC,GAAN,cAAkCC,CAAuB,CAGhE,EAFIC,EADSF,GACF,aAAa,gBACpBE,EAFSF,GAEF,uBAAuBF,IAG3B,IAAMK,GAAN,cAA6BF,CAAuB,CAG3D,EAFIC,EADSC,GACF,aAAa,UACpBD,EAFSC,GAEF,uBAAuBL,IAKlC,SAASA,MAAyBN,EAAO,CACrC,IAAME,EAAS,OAAOF,EAAMA,EAAK,OAAS,IAAQ,SAAWA,EAAK,IAAI,EAAI,CAAC,EACrEC,EAASD,EAAK,IAAI,GAAK,GAE7B,GAAK,WAAW,QAAQ,WAAa,CACjC,GAAM,CAAE,MAAAY,EAAO,QAAAC,CAAQ,EAAI,WAAW,OAAO,WACvCC,EAAMF,EAAOX,EAAQC,EAAO,YAAa,EAC/C,OAAOW,EAASC,EAAKZ,EAAO,cAAe,CAC/C,CAGA,GADA,WAAW,OAAS,WAAW,QAAU,CAAC,EACrC,CAAC,WAAW,OAAO,iBAAmB,CAGvC,IAAMa,EAAmB;AAAA,mCAFP,SAAS,cAAe,8BAA+B,GACvC,QAAQ,MAAO,GAAI,GAAK,CAAC,GAAI,OAAQ,+DAAgE,EAE/F,KAAM,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAWpD,WAAW,OAAO,iBAAmB,IAAI,OAAQ,+BAAgC,KAAMA,CAAiB,GAAK,CACjH,CACA,OAAO,IAAI,QAASC,GAAO,CACvB,IAAIC,EAAiB,IAAI,eACzB,OAAO,iBAAiB,YAAa,CAAE,OAAAhB,EAAQ,OAAAC,CAAO,EAAG,CAAEe,EAAe,KAAM,CAAE,EAClFA,EAAe,MAAM,UAAYC,GAAKF,EAAKE,EAAE,IAAK,CACtD,CAAE,CACN,CsC7DM,WAAW,SAAW,KAAK,OAAS,CAAC,GAC3C,OAAO,OAAQ,WAAW,OAAQC,EAAW",
  "names": ["index_async_exports", "__export", "State", "StatefulAsyncFunction", "StatefulAsyncScript", "StatefulModule", "_call", "_function", "args", "callback", "_await", "maybePromise", "_isTypeObject", "val", "_$functionArgs", "params", "source", "other", "resolveParams", "extensions", "extension", "params", "runtimeParams", "compilerParams", "parserParams", "_runtimeParams", "_globalsNoObserve", "_globalsOnlyPathsExcept", "_compilerParams", "_parserParams", "main_exports", "__export", "apply", "batch", "construct", "defineProperties", "defineProperty", "deleteProperties", "deleteProperty", "get", "getOwnPropertyDescriptor", "getOwnPropertyDescriptors", "getPrototypeOf", "has", "intercept", "isExtensible", "observe", "ownKeys", "path", "preventExtensions", "reduce", "set", "setPrototypeOf", "isObject_default", "val", "getType_default", "val", "isArray_default", "val", "intersect_default", "arr", "arr2", "callback", "isArray_default", "val1", "val2", "internals", "obj", "namespaces", "ObservableMap", "itnls", "_ns", "_itnls", "args", "key", "value", "returnValue", "type", "callback", "entry", "_intersection", "a", "b", "intersect_default", "isTypeFunction_default", "val", "isNull_default", "val", "isUndefined_default", "val", "isTypeObject_default", "val", "isTypeFunction_default", "isEmpty_default", "val", "isNull_default", "isUndefined_default", "isTypeObject_default", "isFunction_default", "val", "isTypeFunction_default", "isString_default", "val", "isTypeArray_default", "val", "isString_default", "isUndefined_default", "from_default", "val", "castObject", "isArray_default", "isObject_default", "isEmpty_default", "isTypeArray_default", "_", "args", "internals", "_await", "value", "callback", "other", "Registration", "registry", "dfn", "ListenerRegistration", "Registration", "other", "events", "matches", "filter", "from_default", "event", "$ret", "_await", "ret", "recursions", "Registry", "target", "registration", "_entry", "type", "createIfNotExists", "namespace", "isTypeObject_default", "getType_default", "ImplementationClass", "_", "Descriptor", "target", "dfn", "ListenerRegistry", "Registry", "target", "createIfNotExists", "namespace", "ImplementationClass", "filter", "emit", "params", "ListenerRegistration", "events", "isPropertyDescriptors", "eventsWithValues", "listener", "e", "value", "oldValue", "type", "details", "Descriptor", "callback", "returnValue", "_await", "batch", "TrapsRegistration", "Registration", "descriptor", "next", "recieved", "args", "TrapsRegistry", "Registry", "target", "createIfNotExists", "namespace", "ImplementationClass", "dfn", "TrapsRegistration", "descriptor", "defaultHandler", "$this", "next", "index", "_args", "registration", "args", "actors_exports", "__export", "accessorize", "proxy", "unaccessorize", "unproxy", "accessorize", "target", "props", "params", "resolveTarget", "accessorizedProps", "_", "getDescriptorDeep", "prop", "descriptor", "proto", "accessorizeProp", "currentDescriptorRecord", "propertyDescriptor", "value", "currentDescriptor", "accessorization", "enumerable", "set", "get", "statuses", "unaccessorize", "unaccessorizeProp", "proxy", "extendCallback", "originalTarget", "traps", "thisArgument", "argumentsList", "originalThis", "batch", "apply", "newTarget", "construct", "propertyKey", "attributes", "defineProperty", "deleteProperty", "receiver", "$params", "returnValue", "getOwnPropertyDescriptor", "getPrototypeOf", "has", "isExtensible", "ownKeys", "preventExtensions", "prototype", "setPrototypeOf", "$traps", "$proxy", "unproxy", "isTypeObject_default", "Path", "path", "segments", "reduce", "target", "receiver", "final", "x", "params", "eat", "$params", "segment", "isLastSegment", "Descriptor", "result", "args", "addTrail", "desc", "advance", "$value", "resolveObj", "_await", "flags", "isPropsList", "observe", "prop", "isFunction_default", "getType_default", "isTypeObject_default", "get", "emit", "bind", "intercept", "traps", "isObject_default", "TrapsRegistry", "getOwnPropertyDescriptor", "exec", "getOwnPropertyDescriptors", "getPrototypeOf", "isExtensible", "ownKeys", "has", "isLive", "originalTarget", "resolveProps", "props", "related", "next", "results", "_props", "_done", "defaultGet", "descriptor", "value", "_next", "accessorizedProps", "_", "accessorization", "listenerRegistry", "result_s", "batch", "callback", "ListenerRegistry", "set", "def", "entries", "descriptors", "defaultSet", "status", "isUpdate", "oldValue", "exists", "opr", "defineProperty", "defineProperties", "deleteProperty", "from_default", "defaultDel", "deleteProperties", "construct", "argumentsList", "newTarget", "apply", "thisArgument", "setPrototypeOf", "proto", "preventExtensions", "controller", "other", "descriptor_s", "prevRegistration", "handlerReturnValue", "type", "payload", "defaultExec", "obj", "assert", "unproxy", "Observer", "main_exports", "actors_exports", "src_default", "_EventTarget", "other", "evenName", "args", "total", "x", "Autorun", "_EventTarget", "context", "type", "spec", "serial", "scope", "closure", "node", "a", "b", "prev", "key", "i", "callback", "stateBefore", "args", "_call", "returnValue", "label", "arg", "cmd", "unset", "sizeBefore", "sizeAfter", "restBlock", "nextRound", "forSchedule", "flowControlBefore", "flowControlAfter", "total", "Signal", "_EventTarget", "context", "state", "k", "name", "signal", "src_default", "autorun", "flag", "_isTypeObject", "mutations", "groupings", "autoruns", "mutation", "runtimesMap", "a", "b", "runtime", "newState", "Scope", "Signal", "context", "type", "state", "AutoIteration", "Autorun", "context", "type", "spec", "serial", "scope", "closure", "async", "key", "round", "production", "index", "Scope", "broken", "val", "handleMutations", "mutations", "forSchedule", "mutation", "existingRound", "newRound", "src_default", "registry", "State", "runtime", "events", "src_default", "name", "Runtime", "Autorun", "context", "type", "params", "scope", "closure", "$serial", "$params", "Scope", "src_default", "serial", "full", "locStart", "line", "column", "locEnd", "expr", "message", "serials", "ErrorClass", "errorCode", "error", "$message", "cause", "x", "fileName", "autorun", "callback", "returnValue", "e", "autoruns", "isActive", "nextTick", "prevReturn", "current", "following", "name", "kind", "complete", "symbolState", "prefix", "lexicalScope", "valueBefore", "_call", "depth", "nowRunning", "val", "baseSignal", "proxy", "signal", "propertyAlreadyBound", "traps", "target", "receiver", "rest", "spec", "AutorunClass", "AutoIteration", "isStatefulFunction", "subRuntime", "State", "isDeclaration", "$function", "_this", "$fSource", "originalSource", "$class", "methodsSpec", "isStatic", "args", "source", "$source", "modules", "registry", "moduleName", "value", "alias", "specifiers", "sourceSerial", "observeList", "local", "mutations", "mutation", "$eval", "sourceType", "parseCompileCallback", "source", "params", "env", "functionParams", "packageName", "fileName", "parserParams", "compilerParams", "runtimeParams", "resolveParams", "body", "compiledSource", "_await", "asyncEval", "main", "contextType", "scope", "Scope", "runtime", "Runtime", "AbstractStatefulScript", "args", "$static", "params", "source", "$eval", "_await", "runtime", "State", "$fSource", "compiledSource", "StatefulAsyncFunction", "args", "source", "params", "_$functionArgs", "compiledFunction", "$eval", "parseCompileCallback", "wrapperFunction", "StatefulAsyncScript", "AbstractStatefulScript", "__publicField", "StatefulModule", "parse", "compile", "ast", "workerScriptText", "res", "messageChannel", "e", "index_async_exports"]
}
